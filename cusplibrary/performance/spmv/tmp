Available Metrics:
                            Name   Description
Device 0 (Tesla P100-SXM2-16GB):
                   inst_per_warp:  Average number of instructions executed by each warp

               branch_efficiency:  Ratio of non-divergent branches to total branches

       warp_execution_efficiency:  Ratio of the average active threads per warp to the maximum number of threads per warp supported on a multiprocessor

warp_nonpred_execution_efficiency:  Ratio of the average active threads per warp executing non-predicated instructions to the maximum number of threads per warp supported on a multiprocessor

            inst_replay_overhead:  Average number of replays for each instruction executed

shared_load_transactions_per_request:  Average number of shared memory load transactions performed for each shared memory load

shared_store_transactions_per_request:  Average number of shared memory store transactions performed for each shared memory store

local_load_transactions_per_request:  Average number of local memory load transactions performed for each local memory load

local_store_transactions_per_request:  Average number of local memory store transactions performed for each local memory store

    gld_transactions_per_request:  Average number of global memory load transactions performed for each global memory load.

    gst_transactions_per_request:  Average number of global memory store transactions performed for each global memory store

       shared_store_transactions:  Number of shared memory store transactions

        shared_load_transactions:  Number of shared memory load transactions

         local_load_transactions:  Number of local memory load transactions

        local_store_transactions:  Number of local memory store transactions

                gld_transactions:  Number of global memory load transactions

                gst_transactions:  Number of global memory store transactions

        sysmem_read_transactions:  Number of system memory read transactions

       sysmem_write_transactions:  Number of system memory write transactions

            l2_read_transactions:  Memory read transactions seen at L2 cache for all read requests

           l2_write_transactions:  Memory write transactions seen at L2 cache for all write requests

          dram_read_transactions:  Device memory read transactions

         dram_write_transactions:  Device memory write transactions

                 global_hit_rate:  Hit rate for global loads

                  local_hit_rate:  Hit rate for local loads and stores

        gld_requested_throughput:  Requested global memory load throughput

        gst_requested_throughput:  Requested global memory store throughput

                  gld_throughput:  Global memory load throughput

                  gst_throughput:  Global memory store throughput

           local_memory_overhead:  Ratio of local memory traffic to total memory traffic between the L1 and L2 caches

              tex_cache_hit_rate:  Unified cache hit rate

            l2_tex_read_hit_rate:  Hit rate at L2 cache for all read requests from texture cache

           l2_tex_write_hit_rate:  Hit Rate at L2 cache for all write requests from texture cache

            dram_read_throughput:  Device memory read throughput

           dram_write_throughput:  Device memory write throughput

            tex_cache_throughput:  Unified cache throughput

          l2_tex_read_throughput:  Memory read throughput seen at L2 cache for read requests from the texture cache

         l2_tex_write_throughput:  Memory write throughput seen at L2 cache for write requests from the texture cache

              l2_read_throughput:  Memory read throughput seen at L2 cache for all read requests

             l2_write_throughput:  Memory write throughput seen at L2 cache for all write requests

          sysmem_read_throughput:  System memory read throughput

         sysmem_write_throughput:  System memory write throughput

           local_load_throughput:  Local memory load throughput

          local_store_throughput:  Local memory store throughput

          shared_load_throughput:  Shared memory load throughput

         shared_store_throughput:  Shared memory store throughput

                  gld_efficiency:  Ratio of requested global memory load throughput to required global memory load throughput.

                  gst_efficiency:  Ratio of requested global memory store throughput to required global memory store throughput.

          tex_cache_transactions:  Unified cache read transactions

                   flop_count_dp:  Number of double-precision floating-point operations executed non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_dp_add:  Number of double-precision floating-point add operations executed by non-predicated threads

               flop_count_dp_fma:  Number of double-precision floating-point multiply-accumulate operations executed by non-predicated threads

               flop_count_dp_mul:  Number of double-precision floating-point multiply operations executed by non-predicated threads

                   flop_count_sp:  Number of single-precision floating-point operations executed by non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_sp_add:  Number of single-precision floating-point add operations executed by non-predicated threads

               flop_count_sp_fma:  Number of single-precision floating-point multiply-accumulate operations executed by non-predicated threads

               flop_count_sp_mul:  Number of single-precision floating-point multiply operations executed by non-predicated threads

           flop_count_sp_special:  Number of single-precision floating-point special operations executed by non-predicated threads

                   inst_executed:  The number of instructions executed

                     inst_issued:  The number of instructions issued

                dram_utilization:  The utilization level of the device memory relative to the peak utilization

              sysmem_utilization:  The utilization level of the system memory relative to the peak utilization

                stall_inst_fetch:  Percentage of stalls occurring because the next assembly instruction has not yet been fetched

           stall_exec_dependency:  Percentage of stalls occurring because an input required by the instruction is not yet available

         stall_memory_dependency:  Percentage of stalls occurring because a memory operation cannot be performed due to the required resources not being available or fully utilized, or because too many requests of a given type are outstanding

                   stall_texture:  Percentage of stalls occurring because the texture sub-system is fully utilized or has too many outstanding requests

                      stall_sync:  Percentage of stalls occurring because the warp is blocked at a __syncthreads() call

                     stall_other:  Percentage of stalls occurring due to miscellaneous reasons

stall_constant_memory_dependency:  Percentage of stalls occurring because of immediate constant cache miss

                 stall_pipe_busy:  Percentage of stalls occurring because a compute operation cannot be performed because the compute pipeline is busy

               shared_efficiency:  Ratio of requested shared memory throughput to required shared memory throughput

                      inst_fp_32:  Number of single-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                      inst_fp_64:  Number of double-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                    inst_integer:  Number of integer instructions executed by non-predicated threads

                inst_bit_convert:  Number of bit-conversion instructions executed by non-predicated threads

                    inst_control:  Number of control-flow instructions executed by non-predicated threads (jump, branch, etc.)

              inst_compute_ld_st:  Number of compute load/store instructions executed by non-predicated threads

                       inst_misc:  Number of miscellaneous instructions executed by non-predicated threads

 inst_inter_thread_communication:  Number of inter-thread communication instructions executed by non-predicated threads

                     issue_slots:  The number of issue slots used

                       cf_issued:  Number of issued control-flow instructions

                     cf_executed:  Number of executed control-flow instructions

                     ldst_issued:  Number of issued local, global, shared and texture memory load and store instructions

                   ldst_executed:  Number of executed local, global, shared and texture memory load and store instructions

             atomic_transactions:  Global memory atomic and reduction transactions

 atomic_transactions_per_request:  Average number of global memory atomic and reduction transactions performed for each atomic and reduction instruction

            l2_atomic_throughput:  Memory read throughput seen at L2 cache for atomic and reduction requests

          l2_atomic_transactions:  Memory read transactions seen at L2 cache for atomic and reduction requests

        l2_tex_read_transactions:  Memory read transactions seen at L2 cache for read requests from the texture cache

           stall_memory_throttle:  Percentage of stalls occurring because of memory throttle

              stall_not_selected:  Percentage of stalls occurring because warp was not selected

       l2_tex_write_transactions:  Memory write transactions seen at L2 cache for write requests from the texture cache

   nvlink_total_data_transmitted:  Total data bytes transmitted through NVLink including headers

      nvlink_total_data_received:  Total data bytes received through NVLink including headers

    nvlink_user_data_transmitted:  User data bytes transmitted through NVLink, doesn't include headers

       nvlink_user_data_received:  User data bytes received through NVLink, doesn't include headers

nvlink_overhead_data_transmitted:  Overhead data bytes transmitted through NVLink

   nvlink_overhead_data_received:  Overhead data bytes received through NVLink

nvlink_total_nratom_data_transmitted:  Total non-reduction atomic data bytes transmitted through NVLink

nvlink_user_nratom_data_transmitted:  Total non-reduction atomic user data bytes transmitted through NVLink

nvlink_total_ratom_data_transmitted:  Total reduction atomic data bytes transmitted through NVLink

nvlink_user_ratom_data_transmitted:  Total reduction atomic user data bytes transmitted through NVLink

nvlink_total_write_data_transmitted:  Total write data bytes transmitted through NVLink

nvlink_user_write_data_transmitted:  User write data bytes transmitted through NVLink

      nvlink_transmit_throughput:  Number of bytes transmitted per second through NVLink

       nvlink_receive_throughput:  Number of bytes received per second through NVLink

nvlink_total_response_data_received:  Total response data bytes received through NVLink, response data includes data for read requests and result of non-reduction atomic requests

nvlink_user_response_data_received:  Total user response data bytes received through NVLink, response data includes data for read requests and result of non-reduction atomic requests

                   flop_count_hp:  Number of half-precision floating-point operations executed by non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_hp_add:  Number of half-precision floating-point add operations executed by non-predicated threads

               flop_count_hp_mul:  Number of half-precision floating-point multiply operations executed by non-predicated threads

               flop_count_hp_fma:  Number of half-precision floating-point multiply-accumulate operations executed by non-predicated threads

                      inst_fp_16:  Number of half-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                    executed_ipc:  Instructions executed per cycle

                      issued_ipc:  Instructions issued per cycle

          issue_slot_utilization:  Percentage of issue slots that issued at least one instruction, averaged across all cycles

                     sm_activity:  The percentage of time at least one warp is active on a multiprocessor

              achieved_occupancy:  Ratio of the average active warps per active cycle to the maximum number of warps supported on a multiprocessor

        eligible_warps_per_cycle:  Average number of warps that are eligible to issue per active cycle

              shared_utilization:  The utilization level of the shared memory relative to peak utilization

                  l2_utilization:  The utilization level of the L2 cache relative to the peak utilization

                 tex_utilization:  The utilization level of the unified cache relative to the peak utilization

             ldst_fu_utilization:  The utilization level of the multiprocessor function units that execute shared load, shared store and constant load instructions

               cf_fu_utilization:  The utilization level of the multiprocessor function units that execute control-flow instructions

              tex_fu_utilization:  The utilization level of the multiprocessor function units that execute global, local and texture memory instructions

          special_fu_utilization:  The utilization level of the multiprocessor function units that execute sin, cos, ex2, popc, flo, and similar instructions

   half_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute 16 bit floating-point instructions and integer instructions

 single_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute single-precision floating-point instructions and integer instructions

 double_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute double-precision floating-point instructions

              flop_hp_efficiency:  Ratio of achieved to peak half-precision floating-point operations

              flop_sp_efficiency:  Ratio of achieved to peak single-precision floating-point operations

              flop_dp_efficiency:  Ratio of achieved to peak double-precision floating-point operations

         sysmem_read_utilization:  The read utilization level of the system memory relative to the peak utilization

        sysmem_write_utilization:  The write utilization level of the system memory relative to the peak utilization

Device 1 (Tesla P100-SXM2-16GB):
                   inst_per_warp:  Average number of instructions executed by each warp

               branch_efficiency:  Ratio of non-divergent branches to total branches

       warp_execution_efficiency:  Ratio of the average active threads per warp to the maximum number of threads per warp supported on a multiprocessor

warp_nonpred_execution_efficiency:  Ratio of the average active threads per warp executing non-predicated instructions to the maximum number of threads per warp supported on a multiprocessor

            inst_replay_overhead:  Average number of replays for each instruction executed

shared_load_transactions_per_request:  Average number of shared memory load transactions performed for each shared memory load

shared_store_transactions_per_request:  Average number of shared memory store transactions performed for each shared memory store

local_load_transactions_per_request:  Average number of local memory load transactions performed for each local memory load

local_store_transactions_per_request:  Average number of local memory store transactions performed for each local memory store

    gld_transactions_per_request:  Average number of global memory load transactions performed for each global memory load.

    gst_transactions_per_request:  Average number of global memory store transactions performed for each global memory store

       shared_store_transactions:  Number of shared memory store transactions

        shared_load_transactions:  Number of shared memory load transactions

         local_load_transactions:  Number of local memory load transactions

        local_store_transactions:  Number of local memory store transactions

                gld_transactions:  Number of global memory load transactions

                gst_transactions:  Number of global memory store transactions

        sysmem_read_transactions:  Number of system memory read transactions

       sysmem_write_transactions:  Number of system memory write transactions

            l2_read_transactions:  Memory read transactions seen at L2 cache for all read requests

           l2_write_transactions:  Memory write transactions seen at L2 cache for all write requests

          dram_read_transactions:  Device memory read transactions

         dram_write_transactions:  Device memory write transactions

                 global_hit_rate:  Hit rate for global loads

                  local_hit_rate:  Hit rate for local loads and stores

        gld_requested_throughput:  Requested global memory load throughput

        gst_requested_throughput:  Requested global memory store throughput

                  gld_throughput:  Global memory load throughput

                  gst_throughput:  Global memory store throughput

           local_memory_overhead:  Ratio of local memory traffic to total memory traffic between the L1 and L2 caches

              tex_cache_hit_rate:  Unified cache hit rate

            l2_tex_read_hit_rate:  Hit rate at L2 cache for all read requests from texture cache

           l2_tex_write_hit_rate:  Hit Rate at L2 cache for all write requests from texture cache

            dram_read_throughput:  Device memory read throughput

           dram_write_throughput:  Device memory write throughput

            tex_cache_throughput:  Unified cache throughput

          l2_tex_read_throughput:  Memory read throughput seen at L2 cache for read requests from the texture cache

         l2_tex_write_throughput:  Memory write throughput seen at L2 cache for write requests from the texture cache

              l2_read_throughput:  Memory read throughput seen at L2 cache for all read requests

             l2_write_throughput:  Memory write throughput seen at L2 cache for all write requests

          sysmem_read_throughput:  System memory read throughput

         sysmem_write_throughput:  System memory write throughput

           local_load_throughput:  Local memory load throughput

          local_store_throughput:  Local memory store throughput

          shared_load_throughput:  Shared memory load throughput

         shared_store_throughput:  Shared memory store throughput

                  gld_efficiency:  Ratio of requested global memory load throughput to required global memory load throughput.

                  gst_efficiency:  Ratio of requested global memory store throughput to required global memory store throughput.

          tex_cache_transactions:  Unified cache read transactions

                   flop_count_dp:  Number of double-precision floating-point operations executed non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_dp_add:  Number of double-precision floating-point add operations executed by non-predicated threads

               flop_count_dp_fma:  Number of double-precision floating-point multiply-accumulate operations executed by non-predicated threads

               flop_count_dp_mul:  Number of double-precision floating-point multiply operations executed by non-predicated threads

                   flop_count_sp:  Number of single-precision floating-point operations executed by non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_sp_add:  Number of single-precision floating-point add operations executed by non-predicated threads

               flop_count_sp_fma:  Number of single-precision floating-point multiply-accumulate operations executed by non-predicated threads

               flop_count_sp_mul:  Number of single-precision floating-point multiply operations executed by non-predicated threads

           flop_count_sp_special:  Number of single-precision floating-point special operations executed by non-predicated threads

                   inst_executed:  The number of instructions executed

                     inst_issued:  The number of instructions issued

                dram_utilization:  The utilization level of the device memory relative to the peak utilization

              sysmem_utilization:  The utilization level of the system memory relative to the peak utilization

                stall_inst_fetch:  Percentage of stalls occurring because the next assembly instruction has not yet been fetched

           stall_exec_dependency:  Percentage of stalls occurring because an input required by the instruction is not yet available

         stall_memory_dependency:  Percentage of stalls occurring because a memory operation cannot be performed due to the required resources not being available or fully utilized, or because too many requests of a given type are outstanding

                   stall_texture:  Percentage of stalls occurring because the texture sub-system is fully utilized or has too many outstanding requests

                      stall_sync:  Percentage of stalls occurring because the warp is blocked at a __syncthreads() call

                     stall_other:  Percentage of stalls occurring due to miscellaneous reasons

stall_constant_memory_dependency:  Percentage of stalls occurring because of immediate constant cache miss

                 stall_pipe_busy:  Percentage of stalls occurring because a compute operation cannot be performed because the compute pipeline is busy

               shared_efficiency:  Ratio of requested shared memory throughput to required shared memory throughput

                      inst_fp_32:  Number of single-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                      inst_fp_64:  Number of double-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                    inst_integer:  Number of integer instructions executed by non-predicated threads

                inst_bit_convert:  Number of bit-conversion instructions executed by non-predicated threads

                    inst_control:  Number of control-flow instructions executed by non-predicated threads (jump, branch, etc.)

              inst_compute_ld_st:  Number of compute load/store instructions executed by non-predicated threads

                       inst_misc:  Number of miscellaneous instructions executed by non-predicated threads

 inst_inter_thread_communication:  Number of inter-thread communication instructions executed by non-predicated threads

                     issue_slots:  The number of issue slots used

                       cf_issued:  Number of issued control-flow instructions

                     cf_executed:  Number of executed control-flow instructions

                     ldst_issued:  Number of issued local, global, shared and texture memory load and store instructions

                   ldst_executed:  Number of executed local, global, shared and texture memory load and store instructions

             atomic_transactions:  Global memory atomic and reduction transactions

 atomic_transactions_per_request:  Average number of global memory atomic and reduction transactions performed for each atomic and reduction instruction

            l2_atomic_throughput:  Memory read throughput seen at L2 cache for atomic and reduction requests

          l2_atomic_transactions:  Memory read transactions seen at L2 cache for atomic and reduction requests

        l2_tex_read_transactions:  Memory read transactions seen at L2 cache for read requests from the texture cache

           stall_memory_throttle:  Percentage of stalls occurring because of memory throttle

              stall_not_selected:  Percentage of stalls occurring because warp was not selected

       l2_tex_write_transactions:  Memory write transactions seen at L2 cache for write requests from the texture cache

   nvlink_total_data_transmitted:  Total data bytes transmitted through NVLink including headers

      nvlink_total_data_received:  Total data bytes received through NVLink including headers

    nvlink_user_data_transmitted:  User data bytes transmitted through NVLink, doesn't include headers

       nvlink_user_data_received:  User data bytes received through NVLink, doesn't include headers

nvlink_overhead_data_transmitted:  Overhead data bytes transmitted through NVLink

   nvlink_overhead_data_received:  Overhead data bytes received through NVLink

nvlink_total_nratom_data_transmitted:  Total non-reduction atomic data bytes transmitted through NVLink

nvlink_user_nratom_data_transmitted:  Total non-reduction atomic user data bytes transmitted through NVLink

nvlink_total_ratom_data_transmitted:  Total reduction atomic data bytes transmitted through NVLink

nvlink_user_ratom_data_transmitted:  Total reduction atomic user data bytes transmitted through NVLink

nvlink_total_write_data_transmitted:  Total write data bytes transmitted through NVLink

nvlink_user_write_data_transmitted:  User write data bytes transmitted through NVLink

      nvlink_transmit_throughput:  Number of bytes transmitted per second through NVLink

       nvlink_receive_throughput:  Number of bytes received per second through NVLink

nvlink_total_response_data_received:  Total response data bytes received through NVLink, response data includes data for read requests and result of non-reduction atomic requests

nvlink_user_response_data_received:  Total user response data bytes received through NVLink, response data includes data for read requests and result of non-reduction atomic requests

                   flop_count_hp:  Number of half-precision floating-point operations executed by non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_hp_add:  Number of half-precision floating-point add operations executed by non-predicated threads

               flop_count_hp_mul:  Number of half-precision floating-point multiply operations executed by non-predicated threads

               flop_count_hp_fma:  Number of half-precision floating-point multiply-accumulate operations executed by non-predicated threads

                      inst_fp_16:  Number of half-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                    executed_ipc:  Instructions executed per cycle

                      issued_ipc:  Instructions issued per cycle

          issue_slot_utilization:  Percentage of issue slots that issued at least one instruction, averaged across all cycles

                     sm_activity:  The percentage of time at least one warp is active on a multiprocessor

              achieved_occupancy:  Ratio of the average active warps per active cycle to the maximum number of warps supported on a multiprocessor

        eligible_warps_per_cycle:  Average number of warps that are eligible to issue per active cycle

              shared_utilization:  The utilization level of the shared memory relative to peak utilization

                  l2_utilization:  The utilization level of the L2 cache relative to the peak utilization

                 tex_utilization:  The utilization level of the unified cache relative to the peak utilization

             ldst_fu_utilization:  The utilization level of the multiprocessor function units that execute shared load, shared store and constant load instructions

               cf_fu_utilization:  The utilization level of the multiprocessor function units that execute control-flow instructions

              tex_fu_utilization:  The utilization level of the multiprocessor function units that execute global, local and texture memory instructions

          special_fu_utilization:  The utilization level of the multiprocessor function units that execute sin, cos, ex2, popc, flo, and similar instructions

   half_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute 16 bit floating-point instructions and integer instructions

 single_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute single-precision floating-point instructions and integer instructions

 double_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute double-precision floating-point instructions

              flop_hp_efficiency:  Ratio of achieved to peak half-precision floating-point operations

              flop_sp_efficiency:  Ratio of achieved to peak single-precision floating-point operations

              flop_dp_efficiency:  Ratio of achieved to peak double-precision floating-point operations

         sysmem_read_utilization:  The read utilization level of the system memory relative to the peak utilization

        sysmem_write_utilization:  The write utilization level of the system memory relative to the peak utilization

Device 2 (Tesla P100-SXM2-16GB):
                   inst_per_warp:  Average number of instructions executed by each warp

               branch_efficiency:  Ratio of non-divergent branches to total branches

       warp_execution_efficiency:  Ratio of the average active threads per warp to the maximum number of threads per warp supported on a multiprocessor

warp_nonpred_execution_efficiency:  Ratio of the average active threads per warp executing non-predicated instructions to the maximum number of threads per warp supported on a multiprocessor

            inst_replay_overhead:  Average number of replays for each instruction executed

shared_load_transactions_per_request:  Average number of shared memory load transactions performed for each shared memory load

shared_store_transactions_per_request:  Average number of shared memory store transactions performed for each shared memory store

local_load_transactions_per_request:  Average number of local memory load transactions performed for each local memory load

local_store_transactions_per_request:  Average number of local memory store transactions performed for each local memory store

    gld_transactions_per_request:  Average number of global memory load transactions performed for each global memory load.

    gst_transactions_per_request:  Average number of global memory store transactions performed for each global memory store

       shared_store_transactions:  Number of shared memory store transactions

        shared_load_transactions:  Number of shared memory load transactions

         local_load_transactions:  Number of local memory load transactions

        local_store_transactions:  Number of local memory store transactions

                gld_transactions:  Number of global memory load transactions

                gst_transactions:  Number of global memory store transactions

        sysmem_read_transactions:  Number of system memory read transactions

       sysmem_write_transactions:  Number of system memory write transactions

            l2_read_transactions:  Memory read transactions seen at L2 cache for all read requests

           l2_write_transactions:  Memory write transactions seen at L2 cache for all write requests

          dram_read_transactions:  Device memory read transactions

         dram_write_transactions:  Device memory write transactions

                 global_hit_rate:  Hit rate for global loads

                  local_hit_rate:  Hit rate for local loads and stores

        gld_requested_throughput:  Requested global memory load throughput

        gst_requested_throughput:  Requested global memory store throughput

                  gld_throughput:  Global memory load throughput

                  gst_throughput:  Global memory store throughput

           local_memory_overhead:  Ratio of local memory traffic to total memory traffic between the L1 and L2 caches

              tex_cache_hit_rate:  Unified cache hit rate

            l2_tex_read_hit_rate:  Hit rate at L2 cache for all read requests from texture cache

           l2_tex_write_hit_rate:  Hit Rate at L2 cache for all write requests from texture cache

            dram_read_throughput:  Device memory read throughput

           dram_write_throughput:  Device memory write throughput

            tex_cache_throughput:  Unified cache throughput

          l2_tex_read_throughput:  Memory read throughput seen at L2 cache for read requests from the texture cache

         l2_tex_write_throughput:  Memory write throughput seen at L2 cache for write requests from the texture cache

              l2_read_throughput:  Memory read throughput seen at L2 cache for all read requests

             l2_write_throughput:  Memory write throughput seen at L2 cache for all write requests

          sysmem_read_throughput:  System memory read throughput

         sysmem_write_throughput:  System memory write throughput

           local_load_throughput:  Local memory load throughput

          local_store_throughput:  Local memory store throughput

          shared_load_throughput:  Shared memory load throughput

         shared_store_throughput:  Shared memory store throughput

                  gld_efficiency:  Ratio of requested global memory load throughput to required global memory load throughput.

                  gst_efficiency:  Ratio of requested global memory store throughput to required global memory store throughput.

          tex_cache_transactions:  Unified cache read transactions

                   flop_count_dp:  Number of double-precision floating-point operations executed non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_dp_add:  Number of double-precision floating-point add operations executed by non-predicated threads

               flop_count_dp_fma:  Number of double-precision floating-point multiply-accumulate operations executed by non-predicated threads

               flop_count_dp_mul:  Number of double-precision floating-point multiply operations executed by non-predicated threads

                   flop_count_sp:  Number of single-precision floating-point operations executed by non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_sp_add:  Number of single-precision floating-point add operations executed by non-predicated threads

               flop_count_sp_fma:  Number of single-precision floating-point multiply-accumulate operations executed by non-predicated threads

               flop_count_sp_mul:  Number of single-precision floating-point multiply operations executed by non-predicated threads

           flop_count_sp_special:  Number of single-precision floating-point special operations executed by non-predicated threads

                   inst_executed:  The number of instructions executed

                     inst_issued:  The number of instructions issued

                dram_utilization:  The utilization level of the device memory relative to the peak utilization

              sysmem_utilization:  The utilization level of the system memory relative to the peak utilization

                stall_inst_fetch:  Percentage of stalls occurring because the next assembly instruction has not yet been fetched

           stall_exec_dependency:  Percentage of stalls occurring because an input required by the instruction is not yet available

         stall_memory_dependency:  Percentage of stalls occurring because a memory operation cannot be performed due to the required resources not being available or fully utilized, or because too many requests of a given type are outstanding

                   stall_texture:  Percentage of stalls occurring because the texture sub-system is fully utilized or has too many outstanding requests

                      stall_sync:  Percentage of stalls occurring because the warp is blocked at a __syncthreads() call

                     stall_other:  Percentage of stalls occurring due to miscellaneous reasons

stall_constant_memory_dependency:  Percentage of stalls occurring because of immediate constant cache miss

                 stall_pipe_busy:  Percentage of stalls occurring because a compute operation cannot be performed because the compute pipeline is busy

               shared_efficiency:  Ratio of requested shared memory throughput to required shared memory throughput

                      inst_fp_32:  Number of single-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                      inst_fp_64:  Number of double-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                    inst_integer:  Number of integer instructions executed by non-predicated threads

                inst_bit_convert:  Number of bit-conversion instructions executed by non-predicated threads

                    inst_control:  Number of control-flow instructions executed by non-predicated threads (jump, branch, etc.)

              inst_compute_ld_st:  Number of compute load/store instructions executed by non-predicated threads

                       inst_misc:  Number of miscellaneous instructions executed by non-predicated threads

 inst_inter_thread_communication:  Number of inter-thread communication instructions executed by non-predicated threads

                     issue_slots:  The number of issue slots used

                       cf_issued:  Number of issued control-flow instructions

                     cf_executed:  Number of executed control-flow instructions

                     ldst_issued:  Number of issued local, global, shared and texture memory load and store instructions

                   ldst_executed:  Number of executed local, global, shared and texture memory load and store instructions

             atomic_transactions:  Global memory atomic and reduction transactions

 atomic_transactions_per_request:  Average number of global memory atomic and reduction transactions performed for each atomic and reduction instruction

            l2_atomic_throughput:  Memory read throughput seen at L2 cache for atomic and reduction requests

          l2_atomic_transactions:  Memory read transactions seen at L2 cache for atomic and reduction requests

        l2_tex_read_transactions:  Memory read transactions seen at L2 cache for read requests from the texture cache

           stall_memory_throttle:  Percentage of stalls occurring because of memory throttle

              stall_not_selected:  Percentage of stalls occurring because warp was not selected

       l2_tex_write_transactions:  Memory write transactions seen at L2 cache for write requests from the texture cache

   nvlink_total_data_transmitted:  Total data bytes transmitted through NVLink including headers

      nvlink_total_data_received:  Total data bytes received through NVLink including headers

    nvlink_user_data_transmitted:  User data bytes transmitted through NVLink, doesn't include headers

       nvlink_user_data_received:  User data bytes received through NVLink, doesn't include headers

nvlink_overhead_data_transmitted:  Overhead data bytes transmitted through NVLink

   nvlink_overhead_data_received:  Overhead data bytes received through NVLink

nvlink_total_nratom_data_transmitted:  Total non-reduction atomic data bytes transmitted through NVLink

nvlink_user_nratom_data_transmitted:  Total non-reduction atomic user data bytes transmitted through NVLink

nvlink_total_ratom_data_transmitted:  Total reduction atomic data bytes transmitted through NVLink

nvlink_user_ratom_data_transmitted:  Total reduction atomic user data bytes transmitted through NVLink

nvlink_total_write_data_transmitted:  Total write data bytes transmitted through NVLink

nvlink_user_write_data_transmitted:  User write data bytes transmitted through NVLink

      nvlink_transmit_throughput:  Number of bytes transmitted per second through NVLink

       nvlink_receive_throughput:  Number of bytes received per second through NVLink

nvlink_total_response_data_received:  Total response data bytes received through NVLink, response data includes data for read requests and result of non-reduction atomic requests

nvlink_user_response_data_received:  Total user response data bytes received through NVLink, response data includes data for read requests and result of non-reduction atomic requests

                   flop_count_hp:  Number of half-precision floating-point operations executed by non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_hp_add:  Number of half-precision floating-point add operations executed by non-predicated threads

               flop_count_hp_mul:  Number of half-precision floating-point multiply operations executed by non-predicated threads

               flop_count_hp_fma:  Number of half-precision floating-point multiply-accumulate operations executed by non-predicated threads

                      inst_fp_16:  Number of half-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                    executed_ipc:  Instructions executed per cycle

                      issued_ipc:  Instructions issued per cycle

          issue_slot_utilization:  Percentage of issue slots that issued at least one instruction, averaged across all cycles

                     sm_activity:  The percentage of time at least one warp is active on a multiprocessor

              achieved_occupancy:  Ratio of the average active warps per active cycle to the maximum number of warps supported on a multiprocessor

        eligible_warps_per_cycle:  Average number of warps that are eligible to issue per active cycle

              shared_utilization:  The utilization level of the shared memory relative to peak utilization

                  l2_utilization:  The utilization level of the L2 cache relative to the peak utilization

                 tex_utilization:  The utilization level of the unified cache relative to the peak utilization

             ldst_fu_utilization:  The utilization level of the multiprocessor function units that execute shared load, shared store and constant load instructions

               cf_fu_utilization:  The utilization level of the multiprocessor function units that execute control-flow instructions

              tex_fu_utilization:  The utilization level of the multiprocessor function units that execute global, local and texture memory instructions

          special_fu_utilization:  The utilization level of the multiprocessor function units that execute sin, cos, ex2, popc, flo, and similar instructions

   half_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute 16 bit floating-point instructions and integer instructions

 single_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute single-precision floating-point instructions and integer instructions

 double_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute double-precision floating-point instructions

              flop_hp_efficiency:  Ratio of achieved to peak half-precision floating-point operations

              flop_sp_efficiency:  Ratio of achieved to peak single-precision floating-point operations

              flop_dp_efficiency:  Ratio of achieved to peak double-precision floating-point operations

         sysmem_read_utilization:  The read utilization level of the system memory relative to the peak utilization

        sysmem_write_utilization:  The write utilization level of the system memory relative to the peak utilization

Device 3 (Tesla P100-SXM2-16GB):
                   inst_per_warp:  Average number of instructions executed by each warp

               branch_efficiency:  Ratio of non-divergent branches to total branches

       warp_execution_efficiency:  Ratio of the average active threads per warp to the maximum number of threads per warp supported on a multiprocessor

warp_nonpred_execution_efficiency:  Ratio of the average active threads per warp executing non-predicated instructions to the maximum number of threads per warp supported on a multiprocessor

            inst_replay_overhead:  Average number of replays for each instruction executed

shared_load_transactions_per_request:  Average number of shared memory load transactions performed for each shared memory load

shared_store_transactions_per_request:  Average number of shared memory store transactions performed for each shared memory store

local_load_transactions_per_request:  Average number of local memory load transactions performed for each local memory load

local_store_transactions_per_request:  Average number of local memory store transactions performed for each local memory store

    gld_transactions_per_request:  Average number of global memory load transactions performed for each global memory load.

    gst_transactions_per_request:  Average number of global memory store transactions performed for each global memory store

       shared_store_transactions:  Number of shared memory store transactions

        shared_load_transactions:  Number of shared memory load transactions

         local_load_transactions:  Number of local memory load transactions

        local_store_transactions:  Number of local memory store transactions

                gld_transactions:  Number of global memory load transactions

                gst_transactions:  Number of global memory store transactions

        sysmem_read_transactions:  Number of system memory read transactions

       sysmem_write_transactions:  Number of system memory write transactions

            l2_read_transactions:  Memory read transactions seen at L2 cache for all read requests

           l2_write_transactions:  Memory write transactions seen at L2 cache for all write requests

          dram_read_transactions:  Device memory read transactions

         dram_write_transactions:  Device memory write transactions

                 global_hit_rate:  Hit rate for global loads

                  local_hit_rate:  Hit rate for local loads and stores

        gld_requested_throughput:  Requested global memory load throughput

        gst_requested_throughput:  Requested global memory store throughput

                  gld_throughput:  Global memory load throughput

                  gst_throughput:  Global memory store throughput

           local_memory_overhead:  Ratio of local memory traffic to total memory traffic between the L1 and L2 caches

              tex_cache_hit_rate:  Unified cache hit rate

            l2_tex_read_hit_rate:  Hit rate at L2 cache for all read requests from texture cache

           l2_tex_write_hit_rate:  Hit Rate at L2 cache for all write requests from texture cache

            dram_read_throughput:  Device memory read throughput

           dram_write_throughput:  Device memory write throughput

            tex_cache_throughput:  Unified cache throughput

          l2_tex_read_throughput:  Memory read throughput seen at L2 cache for read requests from the texture cache

         l2_tex_write_throughput:  Memory write throughput seen at L2 cache for write requests from the texture cache

              l2_read_throughput:  Memory read throughput seen at L2 cache for all read requests

             l2_write_throughput:  Memory write throughput seen at L2 cache for all write requests

          sysmem_read_throughput:  System memory read throughput

         sysmem_write_throughput:  System memory write throughput

           local_load_throughput:  Local memory load throughput

          local_store_throughput:  Local memory store throughput

          shared_load_throughput:  Shared memory load throughput

         shared_store_throughput:  Shared memory store throughput

                  gld_efficiency:  Ratio of requested global memory load throughput to required global memory load throughput.

                  gst_efficiency:  Ratio of requested global memory store throughput to required global memory store throughput.

          tex_cache_transactions:  Unified cache read transactions

                   flop_count_dp:  Number of double-precision floating-point operations executed non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_dp_add:  Number of double-precision floating-point add operations executed by non-predicated threads

               flop_count_dp_fma:  Number of double-precision floating-point multiply-accumulate operations executed by non-predicated threads

               flop_count_dp_mul:  Number of double-precision floating-point multiply operations executed by non-predicated threads

                   flop_count_sp:  Number of single-precision floating-point operations executed by non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_sp_add:  Number of single-precision floating-point add operations executed by non-predicated threads

               flop_count_sp_fma:  Number of single-precision floating-point multiply-accumulate operations executed by non-predicated threads

               flop_count_sp_mul:  Number of single-precision floating-point multiply operations executed by non-predicated threads

           flop_count_sp_special:  Number of single-precision floating-point special operations executed by non-predicated threads

                   inst_executed:  The number of instructions executed

                     inst_issued:  The number of instructions issued

                dram_utilization:  The utilization level of the device memory relative to the peak utilization

              sysmem_utilization:  The utilization level of the system memory relative to the peak utilization

                stall_inst_fetch:  Percentage of stalls occurring because the next assembly instruction has not yet been fetched

           stall_exec_dependency:  Percentage of stalls occurring because an input required by the instruction is not yet available

         stall_memory_dependency:  Percentage of stalls occurring because a memory operation cannot be performed due to the required resources not being available or fully utilized, or because too many requests of a given type are outstanding

                   stall_texture:  Percentage of stalls occurring because the texture sub-system is fully utilized or has too many outstanding requests

                      stall_sync:  Percentage of stalls occurring because the warp is blocked at a __syncthreads() call

                     stall_other:  Percentage of stalls occurring due to miscellaneous reasons

stall_constant_memory_dependency:  Percentage of stalls occurring because of immediate constant cache miss

                 stall_pipe_busy:  Percentage of stalls occurring because a compute operation cannot be performed because the compute pipeline is busy

               shared_efficiency:  Ratio of requested shared memory throughput to required shared memory throughput

                      inst_fp_32:  Number of single-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                      inst_fp_64:  Number of double-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                    inst_integer:  Number of integer instructions executed by non-predicated threads

                inst_bit_convert:  Number of bit-conversion instructions executed by non-predicated threads

                    inst_control:  Number of control-flow instructions executed by non-predicated threads (jump, branch, etc.)

              inst_compute_ld_st:  Number of compute load/store instructions executed by non-predicated threads

                       inst_misc:  Number of miscellaneous instructions executed by non-predicated threads

 inst_inter_thread_communication:  Number of inter-thread communication instructions executed by non-predicated threads

                     issue_slots:  The number of issue slots used

                       cf_issued:  Number of issued control-flow instructions

                     cf_executed:  Number of executed control-flow instructions

                     ldst_issued:  Number of issued local, global, shared and texture memory load and store instructions

                   ldst_executed:  Number of executed local, global, shared and texture memory load and store instructions

             atomic_transactions:  Global memory atomic and reduction transactions

 atomic_transactions_per_request:  Average number of global memory atomic and reduction transactions performed for each atomic and reduction instruction

            l2_atomic_throughput:  Memory read throughput seen at L2 cache for atomic and reduction requests

          l2_atomic_transactions:  Memory read transactions seen at L2 cache for atomic and reduction requests

        l2_tex_read_transactions:  Memory read transactions seen at L2 cache for read requests from the texture cache

           stall_memory_throttle:  Percentage of stalls occurring because of memory throttle

              stall_not_selected:  Percentage of stalls occurring because warp was not selected

       l2_tex_write_transactions:  Memory write transactions seen at L2 cache for write requests from the texture cache

   nvlink_total_data_transmitted:  Total data bytes transmitted through NVLink including headers

      nvlink_total_data_received:  Total data bytes received through NVLink including headers

    nvlink_user_data_transmitted:  User data bytes transmitted through NVLink, doesn't include headers

       nvlink_user_data_received:  User data bytes received through NVLink, doesn't include headers

nvlink_overhead_data_transmitted:  Overhead data bytes transmitted through NVLink

   nvlink_overhead_data_received:  Overhead data bytes received through NVLink

nvlink_total_nratom_data_transmitted:  Total non-reduction atomic data bytes transmitted through NVLink

nvlink_user_nratom_data_transmitted:  Total non-reduction atomic user data bytes transmitted through NVLink

nvlink_total_ratom_data_transmitted:  Total reduction atomic data bytes transmitted through NVLink

nvlink_user_ratom_data_transmitted:  Total reduction atomic user data bytes transmitted through NVLink

nvlink_total_write_data_transmitted:  Total write data bytes transmitted through NVLink

nvlink_user_write_data_transmitted:  User write data bytes transmitted through NVLink

      nvlink_transmit_throughput:  Number of bytes transmitted per second through NVLink

       nvlink_receive_throughput:  Number of bytes received per second through NVLink

nvlink_total_response_data_received:  Total response data bytes received through NVLink, response data includes data for read requests and result of non-reduction atomic requests

nvlink_user_response_data_received:  Total user response data bytes received through NVLink, response data includes data for read requests and result of non-reduction atomic requests

                   flop_count_hp:  Number of half-precision floating-point operations executed by non-predicated threads (add, multiply, multiply-accumulate and special)

               flop_count_hp_add:  Number of half-precision floating-point add operations executed by non-predicated threads

               flop_count_hp_mul:  Number of half-precision floating-point multiply operations executed by non-predicated threads

               flop_count_hp_fma:  Number of half-precision floating-point multiply-accumulate operations executed by non-predicated threads

                      inst_fp_16:  Number of half-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.)

                    executed_ipc:  Instructions executed per cycle

                      issued_ipc:  Instructions issued per cycle

          issue_slot_utilization:  Percentage of issue slots that issued at least one instruction, averaged across all cycles

                     sm_activity:  The percentage of time at least one warp is active on a multiprocessor

              achieved_occupancy:  Ratio of the average active warps per active cycle to the maximum number of warps supported on a multiprocessor

        eligible_warps_per_cycle:  Average number of warps that are eligible to issue per active cycle

              shared_utilization:  The utilization level of the shared memory relative to peak utilization

                  l2_utilization:  The utilization level of the L2 cache relative to the peak utilization

                 tex_utilization:  The utilization level of the unified cache relative to the peak utilization

             ldst_fu_utilization:  The utilization level of the multiprocessor function units that execute shared load, shared store and constant load instructions

               cf_fu_utilization:  The utilization level of the multiprocessor function units that execute control-flow instructions

              tex_fu_utilization:  The utilization level of the multiprocessor function units that execute global, local and texture memory instructions

          special_fu_utilization:  The utilization level of the multiprocessor function units that execute sin, cos, ex2, popc, flo, and similar instructions

   half_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute 16 bit floating-point instructions and integer instructions

 single_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute single-precision floating-point instructions and integer instructions

 double_precision_fu_utilization:  The utilization level of the multiprocessor function units that execute double-precision floating-point instructions

              flop_hp_efficiency:  Ratio of achieved to peak half-precision floating-point operations

              flop_sp_efficiency:  Ratio of achieved to peak single-precision floating-point operations

              flop_dp_efficiency:  Ratio of achieved to peak double-precision floating-point operations

         sysmem_read_utilization:  The read utilization level of the system memory relative to the peak utilization

        sysmem_write_utilization:  The write utilization level of the system memory relative to the peak utilization

Available Events:
                            Name   Description
Device 0 (Tesla P100-SXM2-16GB):
	Domain domain_a:
       tex0_cache_sector_queries:  Number of texture cache 0 requests. This increments by 1 for each 32-byte access.

       tex1_cache_sector_queries:  Number of texture cache 1 requests. This increments by 1 for each 32-byte access.

        tex0_cache_sector_misses:  Number of texture cache 0 misses. This increments by 1 for each 32-byte access.

        tex1_cache_sector_misses:  Number of texture cache 1 misses. This increments by 1 for each 32-byte access.

	Domain domain_q:
                   active_cycles:  At least 1 active warp in the quad

               elapsed_cycles_sm:  Elapsed clocks

	Domain domain_b:
           fb_subp0_read_sectors:  Number of DRAM read requests to sub partition 0, increments by 1 for 32 byte access.

           fb_subp1_read_sectors:  Number of DRAM read requests to sub partition 1, increments by 1 for 32 byte access.

          fb_subp0_write_sectors:  Number of DRAM write requests to sub partition 0, increments by 1 for 32 byte access.

          fb_subp1_write_sectors:  Number of DRAM write requests to sub partition 1, increments by 1 for 32 byte access.

          fb1_subp0_read_sectors:  Number of DRAM read requests to sub partition 0 of fb1, increments by 1 for 32 byte access.

          fb1_subp1_read_sectors:  Number of DRAM read requests to sub partition 1 of fb1, increments by 1 for 32 byte access.

         fb1_subp0_write_sectors:  Number of DRAM write requests to sub partition 0 of fb1, increments by 1 for 32 byte access.

         fb1_subp1_write_sectors:  Number of DRAM write requests to sub partition 1 of fb1, increments by 1 for 32 byte access.

	Domain domain_c:
                   gld_inst_8bit:  Total number of 8-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_16bit:  Total number of 16-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_32bit:  Total number of 32-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_64bit:  Total number of 64-bit global load instructions that are executed by all the threads across all thread blocks.

                 gld_inst_128bit:  Total number of 128-bit global load instructions that are executed by all the threads across all thread blocks.

                   gst_inst_8bit:  Total number of 8-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_16bit:  Total number of 16-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_32bit:  Total number of 32-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_64bit:  Total number of 64-bit global store instructions that are executed by all the threads across all thread blocks.

                 gst_inst_128bit:  Total number of 128-bit global store instructions that are executed by all the threads across all thread blocks.

	Domain domain_l:
           active_cycles_in_trap:  active cycles when SM is in trap mode

	Domain domain_d:
                 prof_trigger_00:  Number of pmtrig instructions executed where Imm16 & 0x0001

                 prof_trigger_01:  Number of pmtrig instructions executed where Imm16 & 0x0002

                 prof_trigger_02:  Number of pmtrig instructions executed where Imm16 & 0x0004

                 prof_trigger_03:  Number of pmtrig instructions executed where Imm16 & 0x0008

                 prof_trigger_04:  Number of pmtrig instructions executed where Imm16 & 0x0010

                 prof_trigger_05:  Number of pmtrig instructions executed where Imm16 & 0x0020

                 prof_trigger_06:  Number of pmtrig instructions executed where Imm16 & 0x0040

                 prof_trigger_07:  Number of pmtrig instructions executed where Imm16 & 0x0080

                  warps_launched:  Number of warps launched

                    inst_issued0:  Number of cycles that did not issue any instruction, increments per warp.

                    inst_issued1:  Number of cycles that issued single instruction, increments per warp.

                    inst_issued2:  Number of cycles that issued dual instructions, increments per warp.

                   inst_executed:  Number of instructions executed per warp.

           inst_executed_in_trap:  Number of instructions executed when SM is in trap mode

            thread_inst_executed:  Number of instructions executed by the active threads. For each instruction it increments by number of threads, including predicated-off threads, that execute the instruction. It does not include replays.

not_predicated_off_thread_inst_executed:  Number of thread instructions executed that are not predicated off

                     local_store:  Number of executed store instructions where state space is specified as local, increments per warp on a multiprocessor.

                      local_load:  Number of executed load instructions where state space is specified as local, increments per warp on a multiprocessor.

                     shared_load:  Number of executed load instructions where state space is specified as shared, increments per warp on a multiprocessor

                    shared_store:  Number of executed store instructions where state space is specified as shared, increments per warp on a multiprocessor.

   inst_executed_shared_atom_cas:  Number of ATOMS.CAS instructions executed

                     shared_atom:  Number of ATOMS instructions executed

                 global_atom_cas:  Number of ATOM.CAS instructions executed per warp

                      atom_count:  Number of ATOM instructions executed per warp

                     global_load:  Number of executed load instructions where state space is specified as global, increments per warp on a multiprocessor.

                    global_store:  Number of executed store instructions where state space is specified as global, increments per warp on a multiprocessor.

                    generic_load:  Number of LD instructions executed

                   generic_store:  Number of ST instructions executed

                      gred_count:  Number of reduction operations performed per warp.

                divergent_branch:  Number of divergent branches within a warp. This counter will be incremented by one if at least one thread in a warp diverges (that is, follows a different execution path) via a conditional branch.

                          branch:  Number of branch instructions executed per warp on a multiprocessor.

                    active_warps:  Number of active warps in the subpartition

	Domain domain_p:
         shared_ld_bank_conflict:  Number of shared load bank conflict generated when the addresses for two or more shared memory load requests fall in the same memory bank.

         shared_st_bank_conflict:  Number of shared store bank conflict generated when the addresses for two or more shared memory store requests fall in the same memory bank.

          shared_ld_transactions:  Number of transactions for shared load accesses. Maximum transaction size in maxwell is 128 bytes, any warp accessing more that 128 bytes will cause multiple transactions for a shared load instruction. This also includes extra transactions caused by shared bank conflicts.

          shared_st_transactions:  Number of transactions for shared store accesses. Maximum transaction size in maxwell is 128 bytes, any warp accessing more that 128 bytes will cause multiple transactions for a shared store instruction. This also includes extra transactions caused by shared bank conflicts.

	Domain domain_e:
    l2_subp0_write_sector_misses:  Number of write requests sent to DRAM from slice 0 of L2 cache. This increments by 1 for each 32-byte access.

    l2_subp1_write_sector_misses:  Number of write requests sent to DRAM from slice 1 of L2 cache. This increments by 1 for each 32-byte access.

     l2_subp0_read_sector_misses:  Number of read requests sent to DRAM from slice 0 of L2 cache. This increments by 1 for each 32-byte access.

     l2_subp1_read_sector_misses:  Number of read requests sent to DRAM from slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_read_tex_sector_queries:  Number of read requests from Texture cache to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_write_tex_sector_queries:  Number of write requests from Texture cache to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

   l2_subp0_read_tex_hit_sectors:  Number of read requests from Texture cache that hit in slice 0 of L2 cache. This increments by 1 for each 32-byte access.

  l2_subp0_write_tex_hit_sectors:  Number of write requests from Texture cache that hit in slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_read_sysmem_sector_queries:  Number of system memory read requests to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_write_sysmem_sector_queries:  Number of system memory write requests to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_total_read_sector_queries:  Total read requests to slice 0 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp0_total_write_sector_queries:  Total write requests to slice 0 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp1_read_tex_sector_queries:  Number of read requests from Texture cache to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_write_tex_sector_queries:  Number of write requests from Texture cache to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

   l2_subp1_read_tex_hit_sectors:  Number of read requests from Texture cache that hit in slice 1 of L2 cache. This increments by 1 for each 32-byte access.

  l2_subp1_write_tex_hit_sectors:  Number of write requests from Texture cache that hit in slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_read_sysmem_sector_queries:  Number of system memory read requests to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_write_sysmem_sector_queries:  Number of system memory write requests to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_total_read_sector_queries:  Total read requests to slice 1 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp1_total_write_sector_queries:  Total write requests to slice 1 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

Device 1 (Tesla P100-SXM2-16GB):
	Domain domain_a:
       tex0_cache_sector_queries:  Number of texture cache 0 requests. This increments by 1 for each 32-byte access.

       tex1_cache_sector_queries:  Number of texture cache 1 requests. This increments by 1 for each 32-byte access.

        tex0_cache_sector_misses:  Number of texture cache 0 misses. This increments by 1 for each 32-byte access.

        tex1_cache_sector_misses:  Number of texture cache 1 misses. This increments by 1 for each 32-byte access.

	Domain domain_q:
                   active_cycles:  At least 1 active warp in the quad

               elapsed_cycles_sm:  Elapsed clocks

	Domain domain_b:
           fb_subp0_read_sectors:  Number of DRAM read requests to sub partition 0, increments by 1 for 32 byte access.

           fb_subp1_read_sectors:  Number of DRAM read requests to sub partition 1, increments by 1 for 32 byte access.

          fb_subp0_write_sectors:  Number of DRAM write requests to sub partition 0, increments by 1 for 32 byte access.

          fb_subp1_write_sectors:  Number of DRAM write requests to sub partition 1, increments by 1 for 32 byte access.

          fb1_subp0_read_sectors:  Number of DRAM read requests to sub partition 0 of fb1, increments by 1 for 32 byte access.

          fb1_subp1_read_sectors:  Number of DRAM read requests to sub partition 1 of fb1, increments by 1 for 32 byte access.

         fb1_subp0_write_sectors:  Number of DRAM write requests to sub partition 0 of fb1, increments by 1 for 32 byte access.

         fb1_subp1_write_sectors:  Number of DRAM write requests to sub partition 1 of fb1, increments by 1 for 32 byte access.

	Domain domain_c:
                   gld_inst_8bit:  Total number of 8-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_16bit:  Total number of 16-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_32bit:  Total number of 32-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_64bit:  Total number of 64-bit global load instructions that are executed by all the threads across all thread blocks.

                 gld_inst_128bit:  Total number of 128-bit global load instructions that are executed by all the threads across all thread blocks.

                   gst_inst_8bit:  Total number of 8-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_16bit:  Total number of 16-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_32bit:  Total number of 32-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_64bit:  Total number of 64-bit global store instructions that are executed by all the threads across all thread blocks.

                 gst_inst_128bit:  Total number of 128-bit global store instructions that are executed by all the threads across all thread blocks.

	Domain domain_l:
           active_cycles_in_trap:  active cycles when SM is in trap mode

	Domain domain_d:
                 prof_trigger_00:  Number of pmtrig instructions executed where Imm16 & 0x0001

                 prof_trigger_01:  Number of pmtrig instructions executed where Imm16 & 0x0002

                 prof_trigger_02:  Number of pmtrig instructions executed where Imm16 & 0x0004

                 prof_trigger_03:  Number of pmtrig instructions executed where Imm16 & 0x0008

                 prof_trigger_04:  Number of pmtrig instructions executed where Imm16 & 0x0010

                 prof_trigger_05:  Number of pmtrig instructions executed where Imm16 & 0x0020

                 prof_trigger_06:  Number of pmtrig instructions executed where Imm16 & 0x0040

                 prof_trigger_07:  Number of pmtrig instructions executed where Imm16 & 0x0080

                  warps_launched:  Number of warps launched

                    inst_issued0:  Number of cycles that did not issue any instruction, increments per warp.

                    inst_issued1:  Number of cycles that issued single instruction, increments per warp.

                    inst_issued2:  Number of cycles that issued dual instructions, increments per warp.

                   inst_executed:  Number of instructions executed per warp.

           inst_executed_in_trap:  Number of instructions executed when SM is in trap mode

            thread_inst_executed:  Number of instructions executed by the active threads. For each instruction it increments by number of threads, including predicated-off threads, that execute the instruction. It does not include replays.

not_predicated_off_thread_inst_executed:  Number of thread instructions executed that are not predicated off

                     local_store:  Number of executed store instructions where state space is specified as local, increments per warp on a multiprocessor.

                      local_load:  Number of executed load instructions where state space is specified as local, increments per warp on a multiprocessor.

                     shared_load:  Number of executed load instructions where state space is specified as shared, increments per warp on a multiprocessor

                    shared_store:  Number of executed store instructions where state space is specified as shared, increments per warp on a multiprocessor.

   inst_executed_shared_atom_cas:  Number of ATOMS.CAS instructions executed

                     shared_atom:  Number of ATOMS instructions executed

                 global_atom_cas:  Number of ATOM.CAS instructions executed per warp

                      atom_count:  Number of ATOM instructions executed per warp

                     global_load:  Number of executed load instructions where state space is specified as global, increments per warp on a multiprocessor.

                    global_store:  Number of executed store instructions where state space is specified as global, increments per warp on a multiprocessor.

                    generic_load:  Number of LD instructions executed

                   generic_store:  Number of ST instructions executed

                      gred_count:  Number of reduction operations performed per warp.

                divergent_branch:  Number of divergent branches within a warp. This counter will be incremented by one if at least one thread in a warp diverges (that is, follows a different execution path) via a conditional branch.

                          branch:  Number of branch instructions executed per warp on a multiprocessor.

                    active_warps:  Number of active warps in the subpartition

	Domain domain_p:
         shared_ld_bank_conflict:  Number of shared load bank conflict generated when the addresses for two or more shared memory load requests fall in the same memory bank.

         shared_st_bank_conflict:  Number of shared store bank conflict generated when the addresses for two or more shared memory store requests fall in the same memory bank.

          shared_ld_transactions:  Number of transactions for shared load accesses. Maximum transaction size in maxwell is 128 bytes, any warp accessing more that 128 bytes will cause multiple transactions for a shared load instruction. This also includes extra transactions caused by shared bank conflicts.

          shared_st_transactions:  Number of transactions for shared store accesses. Maximum transaction size in maxwell is 128 bytes, any warp accessing more that 128 bytes will cause multiple transactions for a shared store instruction. This also includes extra transactions caused by shared bank conflicts.

	Domain domain_e:
    l2_subp0_write_sector_misses:  Number of write requests sent to DRAM from slice 0 of L2 cache. This increments by 1 for each 32-byte access.

    l2_subp1_write_sector_misses:  Number of write requests sent to DRAM from slice 1 of L2 cache. This increments by 1 for each 32-byte access.

     l2_subp0_read_sector_misses:  Number of read requests sent to DRAM from slice 0 of L2 cache. This increments by 1 for each 32-byte access.

     l2_subp1_read_sector_misses:  Number of read requests sent to DRAM from slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_read_tex_sector_queries:  Number of read requests from Texture cache to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_write_tex_sector_queries:  Number of write requests from Texture cache to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

   l2_subp0_read_tex_hit_sectors:  Number of read requests from Texture cache that hit in slice 0 of L2 cache. This increments by 1 for each 32-byte access.

  l2_subp0_write_tex_hit_sectors:  Number of write requests from Texture cache that hit in slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_read_sysmem_sector_queries:  Number of system memory read requests to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_write_sysmem_sector_queries:  Number of system memory write requests to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_total_read_sector_queries:  Total read requests to slice 0 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp0_total_write_sector_queries:  Total write requests to slice 0 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp1_read_tex_sector_queries:  Number of read requests from Texture cache to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_write_tex_sector_queries:  Number of write requests from Texture cache to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

   l2_subp1_read_tex_hit_sectors:  Number of read requests from Texture cache that hit in slice 1 of L2 cache. This increments by 1 for each 32-byte access.

  l2_subp1_write_tex_hit_sectors:  Number of write requests from Texture cache that hit in slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_read_sysmem_sector_queries:  Number of system memory read requests to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_write_sysmem_sector_queries:  Number of system memory write requests to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_total_read_sector_queries:  Total read requests to slice 1 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp1_total_write_sector_queries:  Total write requests to slice 1 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

Device 2 (Tesla P100-SXM2-16GB):
	Domain domain_a:
       tex0_cache_sector_queries:  Number of texture cache 0 requests. This increments by 1 for each 32-byte access.

       tex1_cache_sector_queries:  Number of texture cache 1 requests. This increments by 1 for each 32-byte access.

        tex0_cache_sector_misses:  Number of texture cache 0 misses. This increments by 1 for each 32-byte access.

        tex1_cache_sector_misses:  Number of texture cache 1 misses. This increments by 1 for each 32-byte access.

	Domain domain_q:
                   active_cycles:  At least 1 active warp in the quad

               elapsed_cycles_sm:  Elapsed clocks

	Domain domain_b:
           fb_subp0_read_sectors:  Number of DRAM read requests to sub partition 0, increments by 1 for 32 byte access.

           fb_subp1_read_sectors:  Number of DRAM read requests to sub partition 1, increments by 1 for 32 byte access.

          fb_subp0_write_sectors:  Number of DRAM write requests to sub partition 0, increments by 1 for 32 byte access.

          fb_subp1_write_sectors:  Number of DRAM write requests to sub partition 1, increments by 1 for 32 byte access.

          fb1_subp0_read_sectors:  Number of DRAM read requests to sub partition 0 of fb1, increments by 1 for 32 byte access.

          fb1_subp1_read_sectors:  Number of DRAM read requests to sub partition 1 of fb1, increments by 1 for 32 byte access.

         fb1_subp0_write_sectors:  Number of DRAM write requests to sub partition 0 of fb1, increments by 1 for 32 byte access.

         fb1_subp1_write_sectors:  Number of DRAM write requests to sub partition 1 of fb1, increments by 1 for 32 byte access.

	Domain domain_c:
                   gld_inst_8bit:  Total number of 8-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_16bit:  Total number of 16-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_32bit:  Total number of 32-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_64bit:  Total number of 64-bit global load instructions that are executed by all the threads across all thread blocks.

                 gld_inst_128bit:  Total number of 128-bit global load instructions that are executed by all the threads across all thread blocks.

                   gst_inst_8bit:  Total number of 8-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_16bit:  Total number of 16-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_32bit:  Total number of 32-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_64bit:  Total number of 64-bit global store instructions that are executed by all the threads across all thread blocks.

                 gst_inst_128bit:  Total number of 128-bit global store instructions that are executed by all the threads across all thread blocks.

	Domain domain_l:
           active_cycles_in_trap:  active cycles when SM is in trap mode

	Domain domain_d:
                 prof_trigger_00:  Number of pmtrig instructions executed where Imm16 & 0x0001

                 prof_trigger_01:  Number of pmtrig instructions executed where Imm16 & 0x0002

                 prof_trigger_02:  Number of pmtrig instructions executed where Imm16 & 0x0004

                 prof_trigger_03:  Number of pmtrig instructions executed where Imm16 & 0x0008

                 prof_trigger_04:  Number of pmtrig instructions executed where Imm16 & 0x0010

                 prof_trigger_05:  Number of pmtrig instructions executed where Imm16 & 0x0020

                 prof_trigger_06:  Number of pmtrig instructions executed where Imm16 & 0x0040

                 prof_trigger_07:  Number of pmtrig instructions executed where Imm16 & 0x0080

                  warps_launched:  Number of warps launched

                    inst_issued0:  Number of cycles that did not issue any instruction, increments per warp.

                    inst_issued1:  Number of cycles that issued single instruction, increments per warp.

                    inst_issued2:  Number of cycles that issued dual instructions, increments per warp.

                   inst_executed:  Number of instructions executed per warp.

           inst_executed_in_trap:  Number of instructions executed when SM is in trap mode

            thread_inst_executed:  Number of instructions executed by the active threads. For each instruction it increments by number of threads, including predicated-off threads, that execute the instruction. It does not include replays.

not_predicated_off_thread_inst_executed:  Number of thread instructions executed that are not predicated off

                     local_store:  Number of executed store instructions where state space is specified as local, increments per warp on a multiprocessor.

                      local_load:  Number of executed load instructions where state space is specified as local, increments per warp on a multiprocessor.

                     shared_load:  Number of executed load instructions where state space is specified as shared, increments per warp on a multiprocessor

                    shared_store:  Number of executed store instructions where state space is specified as shared, increments per warp on a multiprocessor.

   inst_executed_shared_atom_cas:  Number of ATOMS.CAS instructions executed

                     shared_atom:  Number of ATOMS instructions executed

                 global_atom_cas:  Number of ATOM.CAS instructions executed per warp

                      atom_count:  Number of ATOM instructions executed per warp

                     global_load:  Number of executed load instructions where state space is specified as global, increments per warp on a multiprocessor.

                    global_store:  Number of executed store instructions where state space is specified as global, increments per warp on a multiprocessor.

                    generic_load:  Number of LD instructions executed

                   generic_store:  Number of ST instructions executed

                      gred_count:  Number of reduction operations performed per warp.

                divergent_branch:  Number of divergent branches within a warp. This counter will be incremented by one if at least one thread in a warp diverges (that is, follows a different execution path) via a conditional branch.

                          branch:  Number of branch instructions executed per warp on a multiprocessor.

                    active_warps:  Number of active warps in the subpartition

	Domain domain_p:
         shared_ld_bank_conflict:  Number of shared load bank conflict generated when the addresses for two or more shared memory load requests fall in the same memory bank.

         shared_st_bank_conflict:  Number of shared store bank conflict generated when the addresses for two or more shared memory store requests fall in the same memory bank.

          shared_ld_transactions:  Number of transactions for shared load accesses. Maximum transaction size in maxwell is 128 bytes, any warp accessing more that 128 bytes will cause multiple transactions for a shared load instruction. This also includes extra transactions caused by shared bank conflicts.

          shared_st_transactions:  Number of transactions for shared store accesses. Maximum transaction size in maxwell is 128 bytes, any warp accessing more that 128 bytes will cause multiple transactions for a shared store instruction. This also includes extra transactions caused by shared bank conflicts.

	Domain domain_e:
    l2_subp0_write_sector_misses:  Number of write requests sent to DRAM from slice 0 of L2 cache. This increments by 1 for each 32-byte access.

    l2_subp1_write_sector_misses:  Number of write requests sent to DRAM from slice 1 of L2 cache. This increments by 1 for each 32-byte access.

     l2_subp0_read_sector_misses:  Number of read requests sent to DRAM from slice 0 of L2 cache. This increments by 1 for each 32-byte access.

     l2_subp1_read_sector_misses:  Number of read requests sent to DRAM from slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_read_tex_sector_queries:  Number of read requests from Texture cache to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_write_tex_sector_queries:  Number of write requests from Texture cache to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

   l2_subp0_read_tex_hit_sectors:  Number of read requests from Texture cache that hit in slice 0 of L2 cache. This increments by 1 for each 32-byte access.

  l2_subp0_write_tex_hit_sectors:  Number of write requests from Texture cache that hit in slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_read_sysmem_sector_queries:  Number of system memory read requests to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_write_sysmem_sector_queries:  Number of system memory write requests to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_total_read_sector_queries:  Total read requests to slice 0 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp0_total_write_sector_queries:  Total write requests to slice 0 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp1_read_tex_sector_queries:  Number of read requests from Texture cache to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_write_tex_sector_queries:  Number of write requests from Texture cache to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

   l2_subp1_read_tex_hit_sectors:  Number of read requests from Texture cache that hit in slice 1 of L2 cache. This increments by 1 for each 32-byte access.

  l2_subp1_write_tex_hit_sectors:  Number of write requests from Texture cache that hit in slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_read_sysmem_sector_queries:  Number of system memory read requests to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_write_sysmem_sector_queries:  Number of system memory write requests to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_total_read_sector_queries:  Total read requests to slice 1 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp1_total_write_sector_queries:  Total write requests to slice 1 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

Device 3 (Tesla P100-SXM2-16GB):
	Domain domain_a:
       tex0_cache_sector_queries:  Number of texture cache 0 requests. This increments by 1 for each 32-byte access.

       tex1_cache_sector_queries:  Number of texture cache 1 requests. This increments by 1 for each 32-byte access.

        tex0_cache_sector_misses:  Number of texture cache 0 misses. This increments by 1 for each 32-byte access.

        tex1_cache_sector_misses:  Number of texture cache 1 misses. This increments by 1 for each 32-byte access.

	Domain domain_q:
                   active_cycles:  At least 1 active warp in the quad

               elapsed_cycles_sm:  Elapsed clocks

	Domain domain_b:
           fb_subp0_read_sectors:  Number of DRAM read requests to sub partition 0, increments by 1 for 32 byte access.

           fb_subp1_read_sectors:  Number of DRAM read requests to sub partition 1, increments by 1 for 32 byte access.

          fb_subp0_write_sectors:  Number of DRAM write requests to sub partition 0, increments by 1 for 32 byte access.

          fb_subp1_write_sectors:  Number of DRAM write requests to sub partition 1, increments by 1 for 32 byte access.

          fb1_subp0_read_sectors:  Number of DRAM read requests to sub partition 0 of fb1, increments by 1 for 32 byte access.

          fb1_subp1_read_sectors:  Number of DRAM read requests to sub partition 1 of fb1, increments by 1 for 32 byte access.

         fb1_subp0_write_sectors:  Number of DRAM write requests to sub partition 0 of fb1, increments by 1 for 32 byte access.

         fb1_subp1_write_sectors:  Number of DRAM write requests to sub partition 1 of fb1, increments by 1 for 32 byte access.

	Domain domain_c:
                   gld_inst_8bit:  Total number of 8-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_16bit:  Total number of 16-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_32bit:  Total number of 32-bit global load instructions that are executed by all the threads across all thread blocks.

                  gld_inst_64bit:  Total number of 64-bit global load instructions that are executed by all the threads across all thread blocks.

                 gld_inst_128bit:  Total number of 128-bit global load instructions that are executed by all the threads across all thread blocks.

                   gst_inst_8bit:  Total number of 8-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_16bit:  Total number of 16-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_32bit:  Total number of 32-bit global store instructions that are executed by all the threads across all thread blocks.

                  gst_inst_64bit:  Total number of 64-bit global store instructions that are executed by all the threads across all thread blocks.

                 gst_inst_128bit:  Total number of 128-bit global store instructions that are executed by all the threads across all thread blocks.

	Domain domain_l:
           active_cycles_in_trap:  active cycles when SM is in trap mode

	Domain domain_d:
                 prof_trigger_00:  Number of pmtrig instructions executed where Imm16 & 0x0001

                 prof_trigger_01:  Number of pmtrig instructions executed where Imm16 & 0x0002

                 prof_trigger_02:  Number of pmtrig instructions executed where Imm16 & 0x0004

                 prof_trigger_03:  Number of pmtrig instructions executed where Imm16 & 0x0008

                 prof_trigger_04:  Number of pmtrig instructions executed where Imm16 & 0x0010

                 prof_trigger_05:  Number of pmtrig instructions executed where Imm16 & 0x0020

                 prof_trigger_06:  Number of pmtrig instructions executed where Imm16 & 0x0040

                 prof_trigger_07:  Number of pmtrig instructions executed where Imm16 & 0x0080

                  warps_launched:  Number of warps launched

                    inst_issued0:  Number of cycles that did not issue any instruction, increments per warp.

                    inst_issued1:  Number of cycles that issued single instruction, increments per warp.

                    inst_issued2:  Number of cycles that issued dual instructions, increments per warp.

                   inst_executed:  Number of instructions executed per warp.

           inst_executed_in_trap:  Number of instructions executed when SM is in trap mode

            thread_inst_executed:  Number of instructions executed by the active threads. For each instruction it increments by number of threads, including predicated-off threads, that execute the instruction. It does not include replays.

not_predicated_off_thread_inst_executed:  Number of thread instructions executed that are not predicated off

                     local_store:  Number of executed store instructions where state space is specified as local, increments per warp on a multiprocessor.

                      local_load:  Number of executed load instructions where state space is specified as local, increments per warp on a multiprocessor.

                     shared_load:  Number of executed load instructions where state space is specified as shared, increments per warp on a multiprocessor

                    shared_store:  Number of executed store instructions where state space is specified as shared, increments per warp on a multiprocessor.

   inst_executed_shared_atom_cas:  Number of ATOMS.CAS instructions executed

                     shared_atom:  Number of ATOMS instructions executed

                 global_atom_cas:  Number of ATOM.CAS instructions executed per warp

                      atom_count:  Number of ATOM instructions executed per warp

                     global_load:  Number of executed load instructions where state space is specified as global, increments per warp on a multiprocessor.

                    global_store:  Number of executed store instructions where state space is specified as global, increments per warp on a multiprocessor.

                    generic_load:  Number of LD instructions executed

                   generic_store:  Number of ST instructions executed

                      gred_count:  Number of reduction operations performed per warp.

                divergent_branch:  Number of divergent branches within a warp. This counter will be incremented by one if at least one thread in a warp diverges (that is, follows a different execution path) via a conditional branch.

                          branch:  Number of branch instructions executed per warp on a multiprocessor.

                    active_warps:  Number of active warps in the subpartition

	Domain domain_p:
         shared_ld_bank_conflict:  Number of shared load bank conflict generated when the addresses for two or more shared memory load requests fall in the same memory bank.

         shared_st_bank_conflict:  Number of shared store bank conflict generated when the addresses for two or more shared memory store requests fall in the same memory bank.

          shared_ld_transactions:  Number of transactions for shared load accesses. Maximum transaction size in maxwell is 128 bytes, any warp accessing more that 128 bytes will cause multiple transactions for a shared load instruction. This also includes extra transactions caused by shared bank conflicts.

          shared_st_transactions:  Number of transactions for shared store accesses. Maximum transaction size in maxwell is 128 bytes, any warp accessing more that 128 bytes will cause multiple transactions for a shared store instruction. This also includes extra transactions caused by shared bank conflicts.

	Domain domain_e:
    l2_subp0_write_sector_misses:  Number of write requests sent to DRAM from slice 0 of L2 cache. This increments by 1 for each 32-byte access.

    l2_subp1_write_sector_misses:  Number of write requests sent to DRAM from slice 1 of L2 cache. This increments by 1 for each 32-byte access.

     l2_subp0_read_sector_misses:  Number of read requests sent to DRAM from slice 0 of L2 cache. This increments by 1 for each 32-byte access.

     l2_subp1_read_sector_misses:  Number of read requests sent to DRAM from slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_read_tex_sector_queries:  Number of read requests from Texture cache to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_write_tex_sector_queries:  Number of write requests from Texture cache to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

   l2_subp0_read_tex_hit_sectors:  Number of read requests from Texture cache that hit in slice 0 of L2 cache. This increments by 1 for each 32-byte access.

  l2_subp0_write_tex_hit_sectors:  Number of write requests from Texture cache that hit in slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_read_sysmem_sector_queries:  Number of system memory read requests to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_write_sysmem_sector_queries:  Number of system memory write requests to slice 0 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp0_total_read_sector_queries:  Total read requests to slice 0 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp0_total_write_sector_queries:  Total write requests to slice 0 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp1_read_tex_sector_queries:  Number of read requests from Texture cache to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_write_tex_sector_queries:  Number of write requests from Texture cache to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

   l2_subp1_read_tex_hit_sectors:  Number of read requests from Texture cache that hit in slice 1 of L2 cache. This increments by 1 for each 32-byte access.

  l2_subp1_write_tex_hit_sectors:  Number of write requests from Texture cache that hit in slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_read_sysmem_sector_queries:  Number of system memory read requests to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_write_sysmem_sector_queries:  Number of system memory write requests to slice 1 of L2 cache. This increments by 1 for each 32-byte access.

l2_subp1_total_read_sector_queries:  Total read requests to slice 1 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

l2_subp1_total_write_sector_queries:  Total write requests to slice 1 of L2 cache. This includes requests from  L1, Texture cache, system memory. This increments by 1 for each 32-byte access.

