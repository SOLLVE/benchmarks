mpicxx -std=c++11 -g -O3 -fopenmp -fopenmp-targets=nvptx64-nvidia-cuda -DOMP_GPU -DOMP_GPU_ALLOC -DCHECK_NUM_EDGES  -Xclang -load -Xclang ~/git/unifiedmem/code/llvm-pass/build/uvm/libOMPPass.so -emit-llvm -S -c -o main.ll main.cpp
In file included from main.cpp:58:
In file included from ./dspl_gpu_kernel.hpp:58:
In file included from ./graph.hpp:56:
./utils.hpp:263:56: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
                drand_[i] = (GraphWeight)((GraphWeight)fabs(rnums_[i]) * mult); // 0-1
                                                       ^
./utils.hpp:263:56: note: use function 'std::abs' instead
                drand_[i] = (GraphWeight)((GraphWeight)fabs(rnums_[i]) * mult); // 0-1
                                                       ^~~~
                                                       std::abs
  ---- Function Argument Access Frequency CG Analysis ----
On function _Z7is_pwr2i
Round 0
Round end
On function _Z8reseederj
Round 0
Round end
On function _ZNSt8seed_seq8generateIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_S8_
Round 0
  alias entry   %18 = getelementptr inbounds %"class.std::seed_seq", %"class.std::seed_seq"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !10369
    alias entry   %19 = bitcast i32** %18 to i64*, !dbg !10369
    alias entry   %21 = bitcast %"class.std::seed_seq"* %0 to i64*, !dbg !10376
Round 1
Round end
    load (6.274510e-01) from %"class.std::seed_seq"* %0
    load (6.274510e-01) from %"class.std::seed_seq"* %0
  Frequency of %"class.std::seed_seq"* %0
  load: 1.254902e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z4lockv
Round 0
Round end
On function _Z6unlockv
Round 0
Round end
On function _Z19distSumVertexDegreeRK5GraphRSt6vectorIdSaIdEERS2_I4CommSaIS6_EE
Round 0
  alias entry   %6 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !10459
Round 1
Round end
    load (1.000000e+00) from %class.Graph* %0
  Frequency of %class.Graph* %0
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.10"* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.15"* %2
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function __clang_call_terminate
Round 0
Round end
  Frequency of i8* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined.
Round 0
  alias entry   %25 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  alias entry   %26 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  alias entry   %27 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %28 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %5, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (6.350000e+00) from %class.Graph* %3
    load (6.350000e+00) from %class.Graph* %3
    load (6.350000e+00) from %"class.std::vector.10"* %4
    load (6.350000e+00) from %"class.std::vector.15"* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %class.Graph* %3
  load: 1.270000e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.10"* %4
  load: 6.350000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.15"* %5
  load: 6.350000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z29distCalcConstantForSecondTermRKSt6vectorIdSaIdEEP19ompi_communicator_t
Round 0
  alias entry   %9 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10283
    alias entry   %10 = bitcast double** %9 to i64*, !dbg !10283
    alias entry   %12 = bitcast %"class.std::vector.10"* %0 to i64*, !dbg !10288
Round 1
Round end
    load (1.000000e+00) from %"class.std::vector.10"* %0
    load (1.000000e+00) from %"class.std::vector.10"* %0
  Frequency of %"class.std::vector.10"* %0
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.ompi_communicator_t* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func
Round 0
    alias entry   %3 = bitcast i8* %1 to double**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to double**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..2
Round 0
  alias entry   %32 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %4, i64 0, i32 0, i32 0, i32 0
    alias entry   %102 = bitcast double* %3 to i64*, !dbg !10325
Round 1
Round end
    load (3.157895e-01) from %"class.std::vector.10"* %4
    load (2.105263e-01) from double* %3
    store (2.105263e-01) to double* %3
    load (2.105263e-01) from double* %3
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %3
  load: 4.210526e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.10"* %4
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z12distInitCommRSt6vectorIlSaIlEES2_l
Round 0
  alias entry   %6 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 1, !dbg !10273
    alias entry   %7 = bitcast i64** %6 to i64*, !dbg !10273
    alias entry   %9 = bitcast %"class.std::vector.0"* %1 to i64*, !dbg !10280
Round 1
Round end
    load (1.000000e+00) from %"class.std::vector.0"* %1
    load (1.000000e+00) from %"class.std::vector.0"* %1
  Frequency of %"class.std::vector.0"* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %1
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..4
Round 0
  alias entry   %29 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
  alias entry   %31 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (3.200000e-01) from %"class.std::vector.0"* %3
    load (3.200000e-01) from %"class.std::vector.0"* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %3
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %5
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z15distInitLouvainRK5GraphRSt6vectorIlSaIlEES5_RS2_IdSaIdEES8_RS2_I4CommSaIS9_EESC_Rdi
Round 0
  alias entry   %16 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 0, !dbg !10485
  alias entry   %20 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !10502
  alias entry   %22 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !10514
  alias entry   %24 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %3, i64 0, i32 0, i32 0, i32 1, !dbg !10532
    alias entry   %25 = bitcast double** %24 to i64*, !dbg !10532
    alias entry   %27 = bitcast %"class.std::vector.10"* %3 to i64*, !dbg !10536
  alias entry   %40 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 1, !dbg !10572
    alias entry   %41 = bitcast i64** %40 to i64*, !dbg !10572
    alias entry   %43 = bitcast %"class.std::vector.0"* %1 to i64*, !dbg !10574
  alias entry   %56 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 1, !dbg !10600
    alias entry   %57 = bitcast i64** %56 to i64*, !dbg !10600
    alias entry   %59 = bitcast %"class.std::vector.0"* %2 to i64*, !dbg !10601
  alias entry   %72 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %4, i64 0, i32 0, i32 0, i32 1, !dbg !10622
    alias entry   %73 = bitcast double** %72 to i64*, !dbg !10622
    alias entry   %75 = bitcast %"class.std::vector.10"* %4 to i64*, !dbg !10623
  alias entry   %88 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %5, i64 0, i32 0, i32 0, i32 1, !dbg !10654
    alias entry   %89 = bitcast %struct.Comm** %88 to i64*, !dbg !10654
    alias entry   %91 = bitcast %"class.std::vector.15"* %5 to i64*, !dbg !10658
  alias entry   %104 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %6, i64 0, i32 0, i32 0, i32 1, !dbg !10685
    alias entry   %105 = bitcast %struct.Comm** %104 to i64*, !dbg !10685
    alias entry   %107 = bitcast %"class.std::vector.15"* %6 to i64*, !dbg !10686
Round 1
Round end
    load (1.000000e+00) from %class.Graph* %0
    load (1.000000e+00) from %class.Graph* %0
    load (1.000000e+00) from %class.Graph* %0
    load (1.000000e+00) from %"class.std::vector.10"* %3
    load (1.000000e+00) from %"class.std::vector.10"* %3
Warning: wrong traversal order, or recursive call
On function _Z15distGetMaxIndexP7clmap_tRiPdS1_dPK4Commdldllld
Round 0
  alias entry   %22 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 %21
  alias entry   %28 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 0, i32 0, !dbg !10320
  alias entry   %33 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %32, i32 1, !dbg !10330
  alias entry   %35 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %32, i32 0, !dbg !10333
  alias entry   %37 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 0, i32 1, !dbg !10335
  alias entry   %41 = getelementptr inbounds double, double* %2, i64 %38, !dbg !10340
  alias entry   %60 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 1, !dbg !10352
  alias entry   %81 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %80, i32 1, !dbg !10330
  alias entry   %83 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %80, i32 0, !dbg !10333
  alias entry   %89 = getelementptr inbounds double, double* %2, i64 %86, !dbg !10340
  alias entry   %126 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %125, i32 1, !dbg !10330
  alias entry   %128 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %125, i32 0, !dbg !10333
  alias entry   %134 = getelementptr inbounds double, double* %2, i64 %131, !dbg !10340
Round 1
Round end
    load (1.000000e+00) from double* %2
    load (1.000000e+00) from i32* %3
    load (1.000000e+00) from i32* %1
    load (5.000000e-01) from %struct.clmap_t* %0
    load (2.500000e-01) from %struct.Comm* %5
    load (2.500000e-01) from %struct.Comm* %5
    load (2.500000e-01) from %struct.clmap_t* %0
    load (1.250000e-01) from double* %2
    load (9.984375e+00) from %struct.Comm* %5
    load (9.984375e+00) from %struct.Comm* %5
    load (4.984375e+00) from double* %2
    load (9.984375e+00) from %struct.Comm* %5
    load (9.984375e+00) from %struct.Comm* %5
    load (4.984375e+00) from double* %2
  Frequency of %struct.clmap_t* %0
  load: 7.500000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %2
  load: 1.109375e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %3
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %5
  load: 4.043750e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z24distBuildLocalMapCounterllP7clmap_tRiPdS1_PK4EdgePKllll
Round 0
  alias entry   %21 = getelementptr inbounds %struct.Edge, %struct.Edge* %6, i64 %20, i32 0, !dbg !10308
  alias entry   %22 = getelementptr inbounds %struct.Edge, %struct.Edge* %6, i64 %20, i32 1, !dbg !10310
  alias entry   %31 = getelementptr inbounds i64, i64* %7, i64 %30, !dbg !10326
  alias entry   %39 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %37, i32 0, !dbg !10337
  alias entry   %48 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %35, !dbg !10348
  alias entry   %58 = getelementptr inbounds double, double* %4, i64 %52, !dbg !10358
  alias entry   %64 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %35, i32 0, !dbg !10364
  alias entry   %65 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %35, i32 1, !dbg !10367
    alias entry   %71 = bitcast double* %22 to i64*, !dbg !10375
  alias entry   %74 = getelementptr inbounds double, double* %4, i64 %73, !dbg !10377
    alias entry   %75 = bitcast double* %74 to i64*, !dbg !10378
Round 1
Round end
    load (1.593750e+01) from %struct.Edge* %6
    load (7.937500e+00) from %struct.Edge* %6
    load (1.593750e+01) from i64* %7
    load (1.593750e+01) from i32* %3
    load (1.625000e+02) from %struct.clmap_t* %2
    load (9.937500e+00) from i32* %5
    load (4.937500e+00) from %struct.Edge* %6
    load (4.937500e+00) from double* %4
    store (4.937500e+00) to double* %4
    store (5.437500e+00) to %struct.clmap_t* %2
    store (5.437500e+00) to %struct.clmap_t* %2
    store (5.437500e+00) to i32* %3
    load (1.093750e+01) from i32* %5
    load (5.437500e+00) from %struct.Edge* %6
    store (5.437500e+00) to double* %4
    store (5.437500e+00) to i32* %5
  Frequency of %struct.clmap_t* %2
  load: 1.625000e+02		  store: 1.087500e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %3
  load: 1.593750e+01		  store: 5.437500e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %4
  load: 4.937500e+00		  store: 1.037500e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %5
  load: 2.087500e+01		  store: 5.437500e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Edge* %6
  load: 3.425000e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %7
  load: 1.593750e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z27distExecuteLouvainIterationlPKlS0_PK4EdgeS0_PlPKdP4CommS8_dPdi
Round 0
  alias entry   %18 = getelementptr inbounds i64, i64* %2, i64 %17, !dbg !10316
  alias entry   %20 = getelementptr inbounds i64, i64* %4, i64 %0, !dbg !10322
  alias entry   %23 = getelementptr inbounds i64, i64* %1, i64 %0, !dbg !10329
  alias entry   %26 = getelementptr inbounds i64, i64* %1, i64 %25, !dbg !10332
  alias entry   %30 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %22, i32 0, !dbg !10337
  alias entry   %32 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %22, i32 1, !dbg !10341
  alias entry   %47 = getelementptr inbounds %struct.Edge, %struct.Edge* %3, i64 %46, i32 0, !dbg !10401
  alias entry   %48 = getelementptr inbounds %struct.Edge, %struct.Edge* %3, i64 %46, i32 1, !dbg !10403
  alias entry   %57 = getelementptr inbounds i64, i64* %4, i64 %56, !dbg !10414
    alias entry   %95 = bitcast double* %48 to i64*, !dbg !10457
  alias entry   %118 = getelementptr inbounds double, double* %10, i64 %0, !dbg !10470
  alias entry   %122 = getelementptr inbounds double, double* %6, i64 %0, !dbg !10473
  alias entry   %140 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %139, i32 1, !dbg !10533
  alias entry   %142 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %139, i32 0, !dbg !10534
  alias entry   %188 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %187, i32 1, !dbg !10533
  alias entry   %190 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %187, i32 0, !dbg !10534
  alias entry   %236 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %235, i32 1, !dbg !10572
    alias entry   %237 = bitcast double* %236 to i64*, !dbg !10573
  alias entry   %248 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %235, i32 0, !dbg !10575
  alias entry   %250 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %22, i32 1, !dbg !10578
    alias entry   %252 = bitcast double* %250 to i64*, !dbg !10581
  alias entry   %263 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %22, i32 0, !dbg !10583
  alias entry   %267 = getelementptr inbounds i64, i64* %5, i64 %0, !dbg !10587
  alias entry   %270 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %269, i32 1, !dbg !10533
  alias entry   %272 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %269, i32 0, !dbg !10534
Round 1
Round end
    load (1.000000e+00) from i64* %2
    load (1.000000e+00) from i64* %4
    load (1.000000e+00) from i64* %1
    load (1.000000e+00) from i64* %1
    load (5.000000e-01) from %struct.Comm* %7
    load (5.000000e-01) from %struct.Comm* %7
    load (7.992188e+00) from %struct.Edge* %3
    load (3.992188e+00) from %struct.Edge* %3
    load (7.992188e+00) from i64* %4
    load (2.492188e+00) from %struct.Edge* %3
    load (2.742188e+00) from %struct.Edge* %3
    load (5.000000e-01) from double* %10
    store (5.000000e-01) to double* %10
    load (5.000000e-01) from double* %6
    load (1.250000e-01) from %struct.Comm* %7
    load (1.250000e-01) from %struct.Comm* %7
    load (4.992188e+00) from %struct.Comm* %7
    load (4.992188e+00) from %struct.Comm* %7
    load (2.500000e-01) from %struct.Comm* %8
    load (2.500000e-01) from double* %6
    load (2.500000e-01) from %struct.Comm* %8
    store (1.000000e+00) to i64* %5
    load (4.992188e+00) from %struct.Comm* %7
    load (4.992188e+00) from %struct.Comm* %7
  Frequency of i64* %1
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Edge* %3
  load: 1.721875e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %4
  load: 8.992188e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 0.000000e+00		  store: 1.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %6
  load: 7.500000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %7
  load: 2.121875e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %8
  load: 5.000000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %10
  load: 5.000000e-01		  store: 5.000000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z21distComputeModularityRK5GraphP4CommPKddi
Round 0
  alias entry   %14 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !10288
  alias entry   %16 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !10304
    base alias entry   %35 = bitcast i8** %34 to double**, !dbg !10317
    base alias entry   %37 = bitcast i8** %36 to double**, !dbg !10317
    base alias entry   %45 = bitcast i8** %44 to %struct.Comm**, !dbg !10317
    base alias entry   %47 = bitcast i8** %46 to %struct.Comm**, !dbg !10317
Round 1
  base alias entry   %34 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 2, !dbg !10317
  base alias entry   %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 2, !dbg !10317
  base alias entry   %44 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 4, !dbg !10317
  base alias entry   %46 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 4, !dbg !10317
Round 2
  base alias offset entry (2)   %11 = alloca [5 x i8*], align 8
  base alias offset entry (2)   %12 = alloca [5 x i8*], align 8
  base alias offset entry (-1)   %39 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 3, !dbg !10317
  base alias offset entry (-1)   %41 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 3, !dbg !10317
  base alias offset entry (4)   %11 = alloca [5 x i8*], align 8
  base alias offset entry (-2)   %44 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 4, !dbg !10317
  base alias offset entry (4)   %12 = alloca [5 x i8*], align 8
  base alias offset entry (-2)   %46 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 4, !dbg !10317
Round 3
  base alias offset entry (4)   %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0, !dbg !10317
  base alias offset entry (2)   %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0, !dbg !10317
  base alias offset entry (4)   %26 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0, !dbg !10317
  base alias offset entry (2)   %26 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0, !dbg !10317
  base alias offset entry (3)   %29 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 1, !dbg !10317
  base alias offset entry (1)   %29 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 1, !dbg !10317
  base alias offset entry (3)   %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 1, !dbg !10317
  base alias offset entry (1)   %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 1, !dbg !10317
  base alias offset entry (2)   %34 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 2, !dbg !10317
  base alias offset entry (2)   %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 2, !dbg !10317
  base alias offset entry (1)   %39 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 3, !dbg !10317
  base alias offset entry (1)   %41 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 3, !dbg !10317
Round 4
Round end
    load (1.000000e+00) from %class.Graph* %0
    load (1.000000e+00) from %class.Graph* %0
  Frequency of %class.Graph* %0
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %2
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.7
Round 0
    alias entry   %3 = bitcast i8* %1 to double**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to double**, !dbg !10261
  alias entry   %7 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !10261
    alias entry   %8 = bitcast i8* %7 to double**, !dbg !10261
  alias entry   %10 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !10261
    alias entry   %11 = bitcast i8* %10 to double**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..8
Round 0
  alias entry   %40 = getelementptr inbounds double, double* %6, i64 %39, !dbg !10318
  alias entry   %43 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %39, i32 1, !dbg !10321
    alias entry   %63 = bitcast double* %5 to i64*, !dbg !10329
    alias entry   %75 = bitcast double* %7 to i64*, !dbg !10329
Round 1
Round end
    load (1.010526e+01) from double* %6
    load (1.010526e+01) from %struct.Comm* %8
    load (2.105263e-01) from double* %5
    store (2.105263e-01) to double* %5
    load (2.105263e-01) from double* %7
    store (2.105263e-01) to double* %7
    load (2.105263e-01) from double* %5
    load (2.105263e-01) from double* %7
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %5
  load: 4.210526e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %6
  load: 1.010526e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %7
  load: 4.210526e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %8
  load: 1.010526e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.9
Round 0
    alias entry   %3 = bitcast i8* %1 to double**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to double**, !dbg !10261
  alias entry   %7 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !10261
    alias entry   %8 = bitcast i8* %7 to double**, !dbg !10261
  alias entry   %10 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !10261
    alias entry   %11 = bitcast i8* %10 to double**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..10
Round 0
    alias entry   %67 = bitcast double* %3 to i64*, !dbg !10310
    alias entry   %79 = bitcast double* %5 to i64*, !dbg !10310
Round 1
Round end
    load (2.916667e-01) from double* %3
    store (2.916667e-01) to double* %3
    load (2.916667e-01) from double* %5
    store (2.916667e-01) to double* %5
    load (3.333333e-01) from double* %3
    load (3.333333e-01) from double* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %3
  load: 6.250000e-01		  store: 2.916667e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %4
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %5
  load: 6.250000e-01		  store: 2.916667e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %6
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z20distUpdateLocalCinfolP4CommPKS_
Round 0
    base alias entry   %15 = bitcast i8** %14 to %struct.Comm**, !dbg !10269
    base alias entry   %17 = bitcast i8** %16 to %struct.Comm**, !dbg !10269
    base alias entry   %20 = bitcast i8** %19 to %struct.Comm**, !dbg !10269
    base alias entry   %22 = bitcast i8** %21 to %struct.Comm**, !dbg !10269
Round 1
  base alias entry   %14 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 1, !dbg !10269
  base alias entry   %16 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 1, !dbg !10269
  base alias entry   %19 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 2, !dbg !10269
  base alias entry   %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 2, !dbg !10269
Round 2
  base alias offset entry (1)   %5 = alloca [3 x i8*], align 8
  base alias offset entry (1)   %6 = alloca [3 x i8*], align 8
  base alias offset entry (2)   %5 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %19 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 2, !dbg !10269
  base alias offset entry (2)   %6 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 2, !dbg !10269
Round 3
  base alias offset entry (1)   %9 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 0, !dbg !10269
  base alias offset entry (2)   %9 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 0, !dbg !10269
  base alias offset entry (1)   %11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 0, !dbg !10269
  base alias offset entry (2)   %11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 0, !dbg !10269
  base alias offset entry (1)   %14 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 1, !dbg !10269
  base alias offset entry (1)   %16 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 1, !dbg !10269
Round 4
Round end
  Frequency of %struct.Comm* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %2
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..13
Round 0
  alias entry   %33 = getelementptr %struct.Comm, %struct.Comm* %5, i64 %26, !dbg !10304
  alias entry   %36 = getelementptr %struct.Comm, %struct.Comm* %5, i64 %35, i32 1, !dbg !10304
  alias entry   %37 = getelementptr %struct.Comm, %struct.Comm* %6, i64 %26, !dbg !10304
  alias entry   %38 = getelementptr %struct.Comm, %struct.Comm* %6, i64 %35, i32 1, !dbg !10304
  alias entry   %39 = getelementptr %struct.Comm, %struct.Comm* %5, i64 %26, i32 1, !dbg !10304
  alias entry   %41 = getelementptr %struct.Comm, %struct.Comm* %5, i64 %40, !dbg !10304
  alias entry   %42 = getelementptr %struct.Comm, %struct.Comm* %6, i64 %26, i32 1, !dbg !10304
  alias entry   %43 = getelementptr %struct.Comm, %struct.Comm* %6, i64 %40, !dbg !10304
    alias entry   %44 = bitcast double* %38 to %struct.Comm*, !dbg !10304
    alias entry   %46 = bitcast double* %36 to %struct.Comm*, !dbg !10304
    alias entry   %49 = bitcast %struct.Comm* %43 to double*, !dbg !10304
    alias entry   %51 = bitcast %struct.Comm* %41 to double*, !dbg !10304
  alias entry   %67 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %61, i32 0, !dbg !10304
  alias entry   %68 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %62, i32 0, !dbg !10304
  alias entry   %69 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %63, i32 0, !dbg !10304
  alias entry   %70 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %64, i32 0, !dbg !10304
  alias entry   %71 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %65, i32 0, !dbg !10304
  alias entry   %72 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %66, i32 0, !dbg !10304
    alias entry   %73 = bitcast i64* %67 to <4 x i64>*, !dbg !10304
    alias entry   %74 = bitcast i64* %68 to <4 x i64>*, !dbg !10304
    alias entry   %75 = bitcast i64* %69 to <4 x i64>*, !dbg !10304
    alias entry   %76 = bitcast i64* %70 to <4 x i64>*, !dbg !10304
    alias entry   %77 = bitcast i64* %71 to <4 x i64>*, !dbg !10304
    alias entry   %78 = bitcast i64* %72 to <4 x i64>*, !dbg !10304
  alias entry   %97 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %61, i32 0, !dbg !10307
  alias entry   %98 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %62, i32 0, !dbg !10307
  alias entry   %99 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %63, i32 0, !dbg !10307
  alias entry   %100 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %64, i32 0, !dbg !10307
  alias entry   %101 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %65, i32 0, !dbg !10307
  alias entry   %102 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %66, i32 0, !dbg !10307
    alias entry   %103 = bitcast i64* %97 to <4 x i64>*, !dbg !10307
    alias entry   %104 = bitcast i64* %98 to <4 x i64>*, !dbg !10307
    alias entry   %105 = bitcast i64* %99 to <4 x i64>*, !dbg !10307
    alias entry   %106 = bitcast i64* %100 to <4 x i64>*, !dbg !10307
    alias entry   %107 = bitcast i64* %101 to <4 x i64>*, !dbg !10307
    alias entry   %108 = bitcast i64* %102 to <4 x i64>*, !dbg !10307
  alias entry   %139 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %61, i32 1, !dbg !10309
  alias entry   %140 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %62, i32 1, !dbg !10309
  alias entry   %141 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %63, i32 1, !dbg !10309
  alias entry   %142 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %64, i32 1, !dbg !10309
  alias entry   %143 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %65, i32 1, !dbg !10309
  alias entry   %144 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %66, i32 1, !dbg !10309
  alias entry   %151 = getelementptr inbounds double, double* %139, i64 -1, !dbg !10309
    alias entry   %152 = bitcast double* %151 to <4 x double>*, !dbg !10309
  alias entry   %153 = getelementptr inbounds double, double* %140, i64 -1, !dbg !10309
    alias entry   %154 = bitcast double* %153 to <4 x double>*, !dbg !10309
  alias entry   %155 = getelementptr inbounds double, double* %141, i64 -1, !dbg !10309
    alias entry   %156 = bitcast double* %155 to <4 x double>*, !dbg !10309
  alias entry   %157 = getelementptr inbounds double, double* %142, i64 -1, !dbg !10309
    alias entry   %158 = bitcast double* %157 to <4 x double>*, !dbg !10309
  alias entry   %159 = getelementptr inbounds double, double* %143, i64 -1, !dbg !10309
    alias entry   %160 = bitcast double* %159 to <4 x double>*, !dbg !10309
  alias entry   %161 = getelementptr inbounds double, double* %144, i64 -1, !dbg !10309
    alias entry   %162 = bitcast double* %161 to <4 x double>*, !dbg !10309
  alias entry   %183 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %182, i32 0, !dbg !10304
  alias entry   %185 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %182, i32 0, !dbg !10307
  alias entry   %188 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %182, i32 1, !dbg !10318
  alias entry   %190 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %182, i32 1, !dbg !10309
Round 1
Round end
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %5
    load (2.500000e+00) from %struct.Comm* %5
    load (2.500000e+00) from %struct.Comm* %5
    load (2.500000e+00) from %struct.Comm* %5
    load (2.500000e+00) from %struct.Comm* %5
    load (2.500000e+00) from %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    load (9.088235e+00) from %struct.Comm* %6
    load (9.088235e+00) from %struct.Comm* %5
    store (9.088235e+00) to %struct.Comm* %5
    load (9.088235e+00) from %struct.Comm* %6
    load (9.088235e+00) from %struct.Comm* %5
    store (9.088235e+00) to %struct.Comm* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %5
  load: 3.317647e+01		  store: 3.317647e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %6
  load: 3.317647e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..14
Round 0
Round end
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %3
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %4
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z16distCleanCWandCUlPdP4Comm
Round 0
    base alias entry   %17 = bitcast i8** %16 to double**, !dbg !10269
    base alias entry   %19 = bitcast i8** %18 to double**, !dbg !10269
    base alias entry   %22 = bitcast i8** %21 to %struct.Comm**, !dbg !10269
    base alias entry   %24 = bitcast i8** %23 to %struct.Comm**, !dbg !10269
Round 1
  base alias entry   %16 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 1, !dbg !10269
  base alias entry   %18 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 1, !dbg !10269
  base alias entry   %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 2, !dbg !10269
  base alias entry   %23 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 2, !dbg !10269
Round 2
  base alias offset entry (1)   %5 = alloca [3 x i8*], align 8
  base alias offset entry (1)   %6 = alloca [3 x i8*], align 8
  base alias offset entry (2)   %5 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 2, !dbg !10269
  base alias offset entry (2)   %6 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %23 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 2, !dbg !10269
Round 3
  base alias offset entry (1)   %11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 0, !dbg !10269
  base alias offset entry (2)   %11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 0, !dbg !10269
  base alias offset entry (1)   %13 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 0, !dbg !10269
  base alias offset entry (2)   %13 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 0, !dbg !10269
  base alias offset entry (1)   %16 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 1, !dbg !10269
  base alias offset entry (1)   %18 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 1, !dbg !10269
Round 4
Round end
  Frequency of double* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %2
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..18
Round 0
  alias entry   %30 = getelementptr inbounds double, double* %5, i64 %29, !dbg !10304
  alias entry   %31 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %29, i32 0, !dbg !10309
    alias entry   %34 = bitcast i64* %31 to i8*, !dbg !10299
Round 1
Round end
    store (1.058333e+01) to double* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %5
  load: 0.000000e+00		  store: 1.058333e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %6
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..19
Round 0
Round end
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %3
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %4
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z21fillRemoteCommunitiesRK5GraphiiRKmS3_RKSt6vectorIlSaIlEES8_S8_S8_S8_RKS4_I4CommSaIS9_EERSt3mapIlS9_St4lessIlESaISt4pairIKlS9_EEERSt13unordered_mapIllSt4hashIlESt8equal_toIlESaISH_ISI_lEEESM_
Round 0
  alias entry   %126 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 0, !dbg !11433
  alias entry   %130 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !11449
  alias entry   %132 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !11460
  alias entry   %190 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 0
  alias entry   %197 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 0
  alias entry   %301 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %12, i64 0, i32 0, i32 2, i32 0, !dbg !11792
    alias entry   %302 = bitcast %"struct.std::__detail::_Hash_node_base"* %301 to %"struct.std::__detail::_Hash_node"**, !dbg !11793
    alias entry   %312 = bitcast %"class.std::unordered_map"* %12 to i8**, !dbg !11836
  alias entry   %314 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %12, i64 0, i32 0, i32 1, !dbg !11842
    alias entry   %317 = bitcast %"struct.std::__detail::_Hash_node_base"* %301 to i8*, !dbg !11846
  alias entry   %320 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %8, i64 0, i32 0, i32 0, i32 0
  alias entry   %321 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %12, i64 0, i32 0
  alias entry   %322 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %12, i64 0, i32 0, i32 0
  alias entry   %323 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6
    alias entry   %324 = bitcast %"class.std::vector.0"* %323 to i64*
  alias entry   %325 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 1
    alias entry   %326 = bitcast i64** %325 to i64*
  alias entry   %330 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %9, i64 0, i32 0, i32 0, i32 0
  alias entry   %331 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6
    alias entry   %332 = bitcast %"class.std::vector.0"* %331 to i64*
  alias entry   %333 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 1
    alias entry   %334 = bitcast i64** %333 to i64*
  alias entry   %818 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, !dbg !13393
  alias entry   %819 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, i32 1, !dbg !13405
    alias entry   %820 = bitcast %"struct.std::_Rb_tree_node_base"** %819 to %"struct.std::_Rb_tree_node"**, !dbg !13405
  alias entry   %826 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, !dbg !13419
  alias entry   %827 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, i32 2, !dbg !13425
    base alias entry   %827 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, i32 2, !dbg !13425
  alias entry   %828 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, i32 3, !dbg !13435
    base alias entry   %828 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, i32 3, !dbg !13435
  alias entry   %829 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 2, !dbg !13437
  alias entry   %830 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, !dbg !13442
  alias entry   %831 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, i32 1, !dbg !13447
    alias entry   %832 = bitcast %"struct.std::_Rb_tree_node_base"** %831 to %"struct.std::_Rb_tree_node"**, !dbg !13447
  alias entry   %838 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, !dbg !13452
  alias entry   %839 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, i32 2, !dbg !13455
    base alias entry   %839 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, i32 2, !dbg !13455
  alias entry   %840 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, i32 3, !dbg !13462
    base alias entry   %840 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, i32 3, !dbg !13462
  alias entry   %841 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 2, !dbg !13464
    alias entry   %846 = bitcast %"struct.std::_Rb_tree_node_base"** %819 to i64*
    alias entry   %848 = bitcast %"struct.std::_Rb_tree_node_base"* %826 to %"struct.std::_Rb_tree_node"*
    alias entry   %850 = bitcast %"struct.std::_Rb_tree_node_base"** %831 to i64*
    alias entry   %852 = bitcast %"struct.std::_Rb_tree_node_base"* %838 to %"struct.std::_Rb_tree_node"*
    alias entry   %967 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %827, align 8, !dbg !14017, !tbaa !14018
    alias entry   %1023 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %839, align 8, !dbg !14306, !tbaa !14018
Round 1
Round end
    load (1.000000e+00) from i64* %4
    load (9.999994e-01) from i64* %3
    load (9.999963e-01) from %class.Graph* %0
    load (9.999963e-01) from %class.Graph* %0
    load (9.999963e-01) from %class.Graph* %0
    load (9.999803e+00) from %"class.std::vector.0"* %6
    load (1.999960e+01) from %"class.std::vector.0"* %6
    load (6.249782e+00) from %"class.std::vector.0"* %5
    load (1.249956e+01) from %"class.std::vector.0"* %5
    load (9.999777e-01) from %"class.std::unordered_map"* %12
    load (9.999777e-01) from %"class.std::unordered_map"* %12
    load (9.999777e-01) from %"class.std::unordered_map"* %12
    load (1.999809e+01) from %"class.std::vector.0"* %8
    load (1.999807e+01) from %"class.std::unordered_map"* %12
    load (1.999807e+01) from %"class.std::unordered_map"* %12
Warning: wrong traversal order, or recursive call
On function .omp_outlined..22
Round 0
  alias entry   %31 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
  alias entry   %33 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %35 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i64* %2
    load (3.200000e-01) from %"class.std::vector.0"* %3
    load (3.200000e-01) from %"class.std::vector.0"* %4
    load (3.200000e-01) from %"class.std::vector.0"* %6
    load (1.020000e+01) from i64* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %3
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %4
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 1.020000e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %6
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.24
Round 0
    alias entry   %3 = bitcast i8* %1 to i64**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to i64**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..25
Round 0
  alias entry   %33 = getelementptr inbounds %"class.std::vector.29", %"class.std::vector.29"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %35 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i32* %2
    load (3.157895e-01) from %"class.std::vector.29"* %4
    load (3.157895e-01) from %"class.std::vector.0"* %3
    load (2.105263e-01) from i64* %5
    store (2.105263e-01) to i64* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %3
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.29"* %4
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 2.105263e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.27
Round 0
    alias entry   %3 = bitcast i8* %1 to i64**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to i64**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..28
Round 0
  alias entry   %32 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i32* %2
    load (3.157895e-01) from %"class.std::vector.0"* %4
    load (2.105263e-01) from i64* %3
    store (2.105263e-01) to i64* %3
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %3
  load: 2.105263e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %4
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..30
Round 0
  alias entry   %20 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, !dbg !10503
  alias entry   %34 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %35 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %7, i64 0, i32 0, i32 0, i32 0
  alias entry   %36 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %6, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from %"class.std::vector.0"* %2
    load (2.047500e+02) from %"class.std::vector.0"* %4
    load (2.047500e+02) from %"class.std::vector.15"* %7
    load (2.047500e+02) from %"class.std::vector.52"* %6
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %4
  load: 2.047500e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.52"* %6
  load: 2.047500e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.15"* %7
  load: 2.047500e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z22createCommunityMPITypev
Round 0
Round end
On function _Z23destroyCommunityMPITypev
Round 0
Round end
On function _Z23updateRemoteCommunitiesRK5GraphRSt6vectorI4CommSaIS3_EERKSt3mapIlS3_St4lessIlESaISt4pairIKlS3_EEEii
Round 0
  alias entry   %19 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 0, !dbg !10869
  alias entry   %46 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !11050
  alias entry   %48 = getelementptr inbounds %"class.std::map", %"class.std::map"* %2, i64 0, i32 0, i32 0, i32 1, i32 2, !dbg !11068
    alias entry   %49 = bitcast %"struct.std::_Rb_tree_node_base"** %48 to i64*, !dbg !11068
  alias entry   %51 = getelementptr inbounds %"class.std::map", %"class.std::map"* %2, i64 0, i32 0, i32 0, i32 1, !dbg !11085
  alias entry   %55 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6
    alias entry   %56 = bitcast %"class.std::vector.0"* %55 to i64*
  alias entry   %57 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 1
    alias entry   %58 = bitcast i64** %57 to i64*
Round 1
Round end
    load (1.000000e+00) from %class.Graph* %0
    load (9.999994e-01) from %class.Graph* %0
    load (9.999994e-01) from %"class.std::map"* %2
    load (1.999985e+01) from %class.Graph* %0
    load (1.999985e+01) from %class.Graph* %0
  Frequency of %class.Graph* %0
  load: 4.199970e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.15"* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::map"* %2
  load: 9.999994e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..32
Round 0
  alias entry   %28 = getelementptr inbounds %"class.std::vector.66", %"class.std::vector.66"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %30 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i32* %2
    load (3.137255e-01) from %"class.std::vector.66"* %4
    load (3.137255e-01) from %"class.std::vector.0"* %3
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %3
  load: 3.137255e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.66"* %4
  load: 3.137255e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.34
Round 0
    alias entry   %3 = bitcast i8* %1 to i64**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to i64**, !dbg !10261
  alias entry   %7 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !10261
    alias entry   %8 = bitcast i8* %7 to i64**, !dbg !10261
  alias entry   %10 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !10261
    alias entry   %11 = bitcast i8* %10 to i64**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..35
Round 0
  alias entry   %36 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %38 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i32* %2
    load (3.157895e-01) from %"class.std::vector.0"* %4
    load (3.157895e-01) from %"class.std::vector.0"* %6
    load (2.105263e-01) from i64* %3
    store (2.105263e-01) to i64* %3
    load (2.105263e-01) from i64* %5
    store (2.105263e-01) to i64* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %3
  load: 2.105263e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %4
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 2.105263e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %6
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..37
Round 0
  alias entry   %26 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %3, i64 0, i32 0, i32 0, i32 0
  alias entry   %27 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %4, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i64* %2
    load (6.350000e+00) from %"class.std::vector.52"* %3
    load (6.350000e+00) from %"class.std::vector.15"* %4
    load (6.350000e+00) from i64* %5
    load (2.047500e+02) from i64* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.52"* %3
  load: 6.350000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.15"* %4
  load: 6.350000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 2.111000e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z18exchangeVertexReqsRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ii
Round 0
  alias entry   %15 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !10306
  alias entry   %17 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !10319
  alias entry   %51 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 1, !dbg !10485
    alias entry   %52 = bitcast i64** %51 to i64*, !dbg !10485
    alias entry   %54 = bitcast %"class.std::vector.0"* %4 to i64*, !dbg !10489
  alias entry   %71 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 1, !dbg !10517
    alias entry   %72 = bitcast i64** %71 to i64*, !dbg !10517
    alias entry   %74 = bitcast %"class.std::vector.0"* %3 to i64*, !dbg !10518
    alias entry   %91 = bitcast %"class.std::vector.0"* %3 to i8**
  alias entry   %94 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
  alias entry   %99 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0, !dbg !10612
    alias entry   %100 = bitcast %"class.std::vector.0"* %4 to i8**, !dbg !10612
  alias entry   %129 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 1, !dbg !10673
    alias entry   %130 = bitcast i64** %129 to i64*, !dbg !10673
    alias entry   %132 = bitcast %"class.std::vector.0"* %5 to i64*, !dbg !10674
  alias entry   %148 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 1, !dbg !10696
    alias entry   %149 = bitcast i64** %148 to i64*, !dbg !10696
    alias entry   %151 = bitcast %"class.std::vector.0"* %6 to i64*, !dbg !10697
  alias entry   %191 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 0
  alias entry   %251 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 0
  alias entry   %310 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 2, !dbg !11244
  alias entry   %311 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 2, !dbg !11245
    alias entry   %312 = bitcast i64** %310 to i64*, !dbg !11249
    alias entry   %314 = bitcast i64** %311 to i64*, !dbg !11250
  alias entry   %320 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 2, !dbg !11279
  alias entry   %321 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 2, !dbg !11280
    alias entry   %322 = bitcast i64** %320 to i64*, !dbg !11284
    alias entry   %324 = bitcast i64** %321 to i64*, !dbg !11285
Round 1
Round end
    load (1.000000e+00) from %class.Graph* %0
    load (1.000000e+00) from %class.Graph* %0
    load (9.999984e-01) from %"class.std::vector.0"* %4
    load (9.999984e-01) from %"class.std::vector.0"* %4
Warning: wrong traversal order, or recursive call
On function .omp_outlined..39
Round 0
  alias entry   %26 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  alias entry   %27 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  alias entry   %28 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 6
    alias entry   %29 = bitcast %"class.std::vector.0"* %28 to i64*
  alias entry   %30 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 6, i32 0, i32 0, i32 1
    alias entry   %31 = bitcast i64** %30 to i64*
  alias entry   %32 = getelementptr inbounds %"class.std::vector.29", %"class.std::vector.29"* %5, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.988141e+02) from %class.Graph* %3
    load (3.180957e+03) from %class.Graph* %3
    load (3.180957e+03) from %class.Graph* %3
    load (3.180957e+03) from %class.Graph* %3
    load (1.590478e+03) from %"class.std::vector.29"* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %class.Graph* %3
  load: 9.741684e+03		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.29"* %5
  load: 1.590478e+03		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.41
Round 0
    alias entry   %3 = bitcast i8* %1 to i64**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to i64**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..42
Round 0
  alias entry   %32 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i32* %2
    load (3.157895e-01) from %"class.std::vector.0"* %4
    load (2.105263e-01) from i64* %3
    store (2.105263e-01) to i64* %3
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %3
  load: 2.105263e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %4
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z17distLouvainMethodiiRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ddRi
Round 0
  alias entry   %68 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 2, !dbg !11180
  alias entry   %85 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !11380
    alias entry   %86 = bitcast i64** %85 to i64*, !dbg !11380
    alias entry   %88 = bitcast %class.Graph* %2 to i64*, !dbg !11384
    alias entry   %93 = bitcast %class.Graph* %2 to i8**, !dbg !11392
  alias entry   %98 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 6, !dbg !11399
  alias entry   %99 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 6, i32 0, i32 0, i32 1, !dbg !11402
    alias entry   %100 = bitcast i64** %99 to i64*, !dbg !11402
    alias entry   %102 = bitcast %"class.std::vector.0"* %98 to i64*, !dbg !11403
    alias entry   %107 = bitcast %"class.std::vector.0"* %98 to i8**, !dbg !11410
  alias entry   %112 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 1, !dbg !11417
  alias entry   %113 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 1, i32 0, i32 0, i32 1, !dbg !11424
    alias entry   %114 = bitcast %struct.Edge** %113 to i64*, !dbg !11424
    alias entry   %116 = bitcast %"class.std::vector.5"* %112 to i64*, !dbg !11428
    alias entry   %121 = bitcast %"class.std::vector.5"* %112 to i8**, !dbg !11440
Round 1
Round end
    load (9.999981e-01) from %class.Graph* %2
Warning: wrong traversal order, or recursive call
On function .omp_outlined..45
Round 0
Round end
    call (1.058333e+01, 2.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %5
    call (1.058333e+01, 1.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %6
    call (1.058333e+01, 1.721875e+01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using %struct.Edge* %7
    call (1.058333e+01, 8.992188e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %8
    call (1.058333e+01, 0.000000e+00, 1.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %9
    call (1.058333e+01, 7.500000e-01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using double* %10
    call (1.058333e+01, 2.121875e+01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using %struct.Comm* %11
    call (1.058333e+01, 5.000000e-01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using %struct.Comm* %12
    call (1.058333e+01, 5.000000e-01, 5.000000e-01, 0.000000e+00, 0.000000e+00) using double* %14
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 2.116667e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %6
  load: 1.058333e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Edge* %7
  load: 1.822318e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %8
  load: 9.516732e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %9
  load: 0.000000e+00		  store: 1.058333e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %10
  load: 7.937500e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %11
  load: 2.245651e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %12
  load: 5.291667e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %14
  load: 5.291667e+00		  store: 5.291667e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..46
Round 0
Round end
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %3
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %4
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Edge* %5
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %6
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %7
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %8
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %9
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %10
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %12
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..49
Round 0
  alias entry   %28 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (3.200000e-01) from %"class.std::vector.0"* %3
    load (3.200000e-01) from i64** %4
    load (3.200000e-01) from i64** %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %3
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64** %4
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64** %5
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function main
Round 0
    base alias entry   %14 = alloca i8**, align 8
    alias entry   %33 = load i8**, i8*** %14, align 8, !dbg !10342, !tbaa !10335
Round 1
Round end
  Frequency of i8** %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZN11GenerateRGGC2ElP19ompi_communicator_t
Round 0
  alias entry   %4 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 0, !dbg !10266
  alias entry   %5 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 3, !dbg !10276
    base alias entry   %5 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 3, !dbg !10276
  alias entry   %6 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 5, !dbg !10279
    alias entry   %8 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %5, align 8, !dbg !10281, !tbaa !10278
  alias entry   %9 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 4, !dbg !10282
  alias entry   %11 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 7, !dbg !10284
  alias entry   %12 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 6, !dbg !10287
  alias entry   %36 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 1, !dbg !10320
    alias entry   %101 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %5, align 8, !dbg !10478, !tbaa !10278
    alias entry   %172 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %5, align 8, !dbg !10565, !tbaa !10278
  alias entry   %184 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 2, !dbg !10579
    alias entry   %191 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %5, align 8, !dbg !10583, !tbaa !10278
Round 1
Round end
    store (1.000000e+00) to %class.GenerateRGG* %0
    store (1.000000e+00) to %class.GenerateRGG* %0
    load (1.000000e+00) from %class.GenerateRGG* %0
    store (1.000000e+00) to %class.GenerateRGG* %0
    store (1.000000e+00) to %class.GenerateRGG* %0
    load (1.000000e+00) from %class.GenerateRGG* %0
    load (5.000000e-01) from %class.GenerateRGG* %0
    store (2.500000e-01) to %class.GenerateRGG* %0
    store (3.437500e-01) to %class.GenerateRGG* %0
    store (2.500000e-01) to %class.GenerateRGG* %0
    load (1.000000e+00) from %class.GenerateRGG* %0
    store (1.000000e+00) to %class.GenerateRGG* %0
    load (6.250000e-01) from %class.GenerateRGG* %0
    load (6.250000e-01) from %class.GenerateRGG* %0
    load (6.250000e-01) from %class.GenerateRGG* %0
    load (7.656250e-01) from %class.GenerateRGG* %0
    load (7.656250e-01) from %class.GenerateRGG* %0
    store (1.000000e+00) to %class.GenerateRGG* %0
    load (1.000000e+00) from %class.GenerateRGG* %0
    load (1.000000e+00) from %class.GenerateRGG* %0
  Frequency of %class.GenerateRGG* %0
  load: 8.906250e+00		  store: 6.843750e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.ompi_communicator_t* %2
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZN11GenerateRGG8generateEbbi
Round 0
  alias entry   %27 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 1, !dbg !10306
  alias entry   %75 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 6, !dbg !10592
  alias entry   %112 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 7, !dbg !10709
  alias entry   %153 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 0, !dbg !10828
  alias entry   %156 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 4, !dbg !10832
  alias entry   %160 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 5, !dbg !10836
  alias entry   %430 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 3, !dbg !10915
  alias entry   %819 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 3, !dbg !11101
  alias entry   %895 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 2
  alias entry   %1233 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 2
  alias entry   %1536 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 2
Round 1
Round end
    load (1.000000e+00) from %class.GenerateRGG* %0
    load (6.249994e-01) from %class.GenerateRGG* %0
    load (9.999990e-01) from %class.GenerateRGG* %0
    load (4.999995e-01) from %class.GenerateRGG* %0
    load (3.124994e-01) from %class.GenerateRGG* %0
    load (9.999985e-01) from %class.GenerateRGG* %0
    load (4.999993e-01) from %class.GenerateRGG* %0
    load (3.124992e-01) from %class.GenerateRGG* %0
    load (9.999971e-01) from %class.GenerateRGG* %0
    load (9.999971e-01) from %class.GenerateRGG* %0
    load (9.999962e-01) from %class.GenerateRGG* %0
    load (9.999962e-01) from %class.GenerateRGG* %0
    load (4.999966e-01) from %class.GenerateRGG* %0
    load (4.999971e-01) from %class.GenerateRGG* %0
    load (4.999971e-01) from %class.GenerateRGG* %0
    load (4.999966e-01) from %class.GenerateRGG* %0
    load (9.999923e-01) from %class.GenerateRGG* %0
    load (9.999914e-01) from %class.GenerateRGG* %0
    load (3.749968e-01) from %class.GenerateRGG* %0
    load (3.749964e-01) from %class.GenerateRGG* %0
    load (9.999890e-01) from %class.GenerateRGG* %0
    load (9.998746e-01) from %class.GenerateRGG* %0
    load (3.199362e+02) from %class.GenerateRGG* %0
    load (3.199361e+02) from %class.GenerateRGG* %0
    load (6.249210e-01) from %class.GenerateRGG* %0
    load (6.249210e-01) from %class.GenerateRGG* %0
    load (6.249210e-01) from %class.GenerateRGG* %0
    load (9.998736e-01) from %class.GenerateRGG* %0
    load (9.998736e-01) from %class.GenerateRGG* %0
    load (9.998736e-01) from %class.GenerateRGG* %0
    load (9.998736e-01) from %class.GenerateRGG* %0
    load (9.998726e-01) from %class.GenerateRGG* %0
    load (9.998726e-01) from %class.GenerateRGG* %0
    load (9.998726e-01) from %class.GenerateRGG* %0
    load (9.998726e-01) from %class.GenerateRGG* %0
    load (9.998717e-01) from %class.GenerateRGG* %0
    load (9.998717e-01) from %class.GenerateRGG* %0
    load (9.998717e-01) from %class.GenerateRGG* %0
    load (9.998717e-01) from %class.GenerateRGG* %0
    load (9.998707e-01) from %class.GenerateRGG* %0
    load (9.998707e-01) from %class.GenerateRGG* %0
    load (9.998707e-01) from %class.GenerateRGG* %0
    load (9.998707e-01) from %class.GenerateRGG* %0
    load (9.998698e-01) from %class.GenerateRGG* %0
    load (4.999349e-01) from %class.GenerateRGG* %0
    load (2.499674e-01) from %class.GenerateRGG* %0
    load (7.997451e+01) from %class.GenerateRGG* %0
    load (3.998725e+01) from %class.GenerateRGG* %0
    load (3.998725e+01) from %class.GenerateRGG* %0
    load (7.997448e+01) from %class.GenerateRGG* %0
    load (4.999063e-01) from %class.GenerateRGG* %0
    load (2.499531e-01) from %class.GenerateRGG* %0
    load (7.996993e+01) from %class.GenerateRGG* %0
    load (3.998497e+01) from %class.GenerateRGG* %0
    load (3.998497e+01) from %class.GenerateRGG* %0
    load (7.996991e+01) from %class.GenerateRGG* %0
    load (9.998126e-01) from %class.GenerateRGG* %0
    load (9.998116e-01) from %class.GenerateRGG* %0
    load (9.998116e-01) from %class.GenerateRGG* %0
    load (9.998116e-01) from %class.GenerateRGG* %0
    load (9.998107e-01) from %class.GenerateRGG* %0
    load (9.998107e-01) from %class.GenerateRGG* %0
    load (9.998107e-01) from %class.GenerateRGG* %0
    load (9.998091e-01) from %class.GenerateRGG* %0
    load (9.998091e-01) from %class.GenerateRGG* %0
    load (9.998091e-01) from %class.GenerateRGG* %0
    load (9.998082e-01) from %class.GenerateRGG* %0
    load (9.998082e-01) from %class.GenerateRGG* %0
    load (9.998082e-01) from %class.GenerateRGG* %0
    load (9.998072e-01) from %class.GenerateRGG* %0
    load (9.998015e-01) from %class.GenerateRGG* %0
    load (6.248724e-01) from %class.GenerateRGG* %0
    load (6.248718e-01) from %class.GenerateRGG* %0
    load (1.952724e-01) from %class.GenerateRGG* %0
    load (3.905445e-01) from %class.GenerateRGG* %0
    load (3.905442e-01) from %class.GenerateRGG* %0
    load (6.248393e-01) from %class.GenerateRGG* %0
    load (1.249644e+01) from %class.GenerateRGG* %0
    load (1.249643e+01) from %class.GenerateRGG* %0
    load (1.171538e+00) from %class.GenerateRGG* %0
    load (5.857690e-01) from %class.GenerateRGG* %0
    load (2.928845e-01) from %class.GenerateRGG* %0
    load (1.464422e-01) from %class.GenerateRGG* %0
    load (6.248387e-01) from %class.GenerateRGG* %0
    load (6.248381e-01) from %class.GenerateRGG* %0
    load (1.249638e+01) from %class.GenerateRGG* %0
    load (6.248253e-01) from %class.GenerateRGG* %0
    load (3.905154e-01) from %class.GenerateRGG* %0
    load (2.440719e-01) from %class.GenerateRGG* %0
    load (6.248247e-01) from %class.GenerateRGG* %0
    load (4.881438e+00) from %class.GenerateRGG* %0
    load (9.997431e-01) from %class.GenerateRGG* %0
    load (9.997421e-01) from %class.GenerateRGG* %0
    load (9.997406e-01) from %class.GenerateRGG* %0
    load (9.997406e-01) from %class.GenerateRGG* %0
    load (6.248378e-01) from %class.GenerateRGG* %0
    load (1.999481e+01) from %class.GenerateRGG* %0
    load (9.997388e-01) from %class.GenerateRGG* %0
    load (9.997385e-01) from %class.GenerateRGG* %0
  Frequency of %class.GenerateRGG* %0
  load: 1.248245e+03		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZN14BinaryEdgeList4readEiiiSs
Round 0
  alias entry   %39 = getelementptr inbounds %class.BinaryEdgeList, %class.BinaryEdgeList* %0, i64 0, i32 4, !dbg !10380
  alias entry   %41 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %4, i64 0, i32 0, i32 0, !dbg !10388
  alias entry   %99 = getelementptr inbounds %class.BinaryEdgeList, %class.BinaryEdgeList* %0, i64 0, i32 0, !dbg !10514
    alias entry   %100 = bitcast %class.BinaryEdgeList* %0 to i8*, !dbg !10515
  alias entry   %104 = getelementptr inbounds %class.BinaryEdgeList, %class.BinaryEdgeList* %0, i64 0, i32 1, !dbg !10518
    alias entry   %105 = bitcast i64* %104 to i8*, !dbg !10519
  alias entry   %118 = getelementptr inbounds %class.BinaryEdgeList, %class.BinaryEdgeList* %0, i64 0, i32 2, !dbg !10532
  alias entry   %183 = getelementptr inbounds %class.BinaryEdgeList, %class.BinaryEdgeList* %0, i64 0, i32 3, !dbg !10605
Round 1
Round end
    load (9.999971e-01) from %class.BinaryEdgeList* %0
    load (9.999971e-01) from %"class.std::basic_string"* %4
    load (6.249948e-01) from %class.BinaryEdgeList* %0
    load (9.999905e-01) from %class.BinaryEdgeList* %0
    store (9.999905e-01) to %class.BinaryEdgeList* %0
    load (9.999895e-01) from %class.BinaryEdgeList* %0
    load (9.999886e-01) from %class.BinaryEdgeList* %0
    load (9.999886e-01) from %class.BinaryEdgeList* %0
    load (9.999729e-01) from %class.BinaryEdgeList* %0
    store (9.999729e-01) to %class.BinaryEdgeList* %0
    load (9.999714e-01) from %class.BinaryEdgeList* %0
    load (9.999714e-01) from %class.BinaryEdgeList* %0
    load (9.999547e-01) from %class.BinaryEdgeList* %0
    load (1.999909e+01) from %class.BinaryEdgeList* %0
  Frequency of %class.BinaryEdgeList* %0
  load: 2.962391e+01		  store: 1.999963e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::basic_string"* %4
  load: 9.999971e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt8_Rb_treeIlSt4pairIKl4CommESt10_Select1stIS3_ESt4lessIlESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
Round 0
Round end
Warning: wrong traversal order, or recursive call
On function _ZN5GraphC2EllllP19ompi_communicator_t
Round 0
  alias entry   %8 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 0, !dbg !10272
  alias entry   %9 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 1, !dbg !10272
  alias entry   %10 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !10309
    alias entry   %11 = bitcast %class.Graph* %0 to i8*, !dbg !10309
  alias entry   %12 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 3, !dbg !10320
  alias entry   %13 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 4, !dbg !10322
  alias entry   %14 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 5, !dbg !10324
  alias entry   %15 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, !dbg !10272
    alias entry   %16 = bitcast %"class.std::vector.0"* %15 to i8*, !dbg !10332
  alias entry   %17 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !10334
    base alias entry   %17 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !10334
  alias entry   %18 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 9, !dbg !10336
    alias entry   %21 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %17, align 8, !dbg !10338, !tbaa !10335
  alias entry   %22 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 8, !dbg !10339
  alias entry   %28 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !10361
    alias entry   %29 = bitcast i64** %28 to i64*, !dbg !10361
    alias entry   %31 = bitcast %class.Graph* %0 to i64*, !dbg !10365
  alias entry   %45 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 1, i32 0, i32 0, i32 1, !dbg !10416
    alias entry   %46 = bitcast %struct.Edge** %45 to i64*, !dbg !10416
    alias entry   %48 = bitcast %"class.std::vector.5"* %9 to i64*, !dbg !10420
  alias entry   %64 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 1, !dbg !10455
    alias entry   %65 = bitcast i64** %64 to i64*, !dbg !10455
    alias entry   %67 = bitcast %"class.std::vector.0"* %15 to i64*, !dbg !10456
  alias entry   %76 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %15, i64 0, i32 0, i32 0, i32 0
  alias entry   %111 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %15, i64 0, i32 0, i32 0, i32 0, !dbg !10511
  alias entry   %117 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %9, i64 0, i32 0, i32 0, i32 0, !dbg !10547
  alias entry   %123 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !10576
Round 1
Round end
    store (1.000000e+00) to %class.Graph* %0
    store (1.000000e+00) to %class.Graph* %0
    store (1.000000e+00) to %class.Graph* %0
    store (1.000000e+00) to %class.Graph* %0
    store (1.000000e+00) to %class.Graph* %0
    load (9.999990e-01) from %class.Graph* %0
    load (9.999980e-01) from %class.Graph* %0
    load (9.999980e-01) from %class.Graph* %0
    load (9.999980e-01) from %class.Graph* %0
Warning: wrong traversal order, or recursive call
On function _ZN3LCGC2EjPdlP19ompi_communicator_t
Round 0
  alias entry   %6 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 3, !dbg !10268
  alias entry   %7 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 4, !dbg !10277
  alias entry   %8 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 6, !dbg !10279
    base alias entry   %8 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 6, !dbg !10279
  alias entry   %9 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 7, !dbg !10281
    alias entry   %10 = bitcast %"class.std::vector.0"* %9 to i8*, !dbg !10300
  alias entry   %11 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 0, !dbg !10302
    base alias entry   %11 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 0, !dbg !10302
  alias entry   %12 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 1, !dbg !10306
    alias entry   %15 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %11, align 8, !dbg !10308, !tbaa !10305
  alias entry   %16 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 2, !dbg !10309
  alias entry   %20 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 7, i32 0, i32 0, i32 1, !dbg !10326
    alias entry   %21 = bitcast i64** %20 to i64*, !dbg !10326
    alias entry   %23 = bitcast %"class.std::vector.0"* %9 to i64*, !dbg !10330
  alias entry   %42 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 5, !dbg !10359
  alias entry   %45 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %9, i64 0, i32 0, i32 0, i32 0, !dbg !10374
  alias entry   %52 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 5, !dbg !10399
    alias entry   %53 = bitcast i64* %52 to i8*, !dbg !10400
    alias entry   %54 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %11, align 8, !dbg !10401, !tbaa !10305
Round 1
Round end
    store (1.000000e+00) to %class.LCG* %0
    store (1.000000e+00) to %class.LCG* %0
    store (1.000000e+00) to %class.LCG* %0
    store (1.000000e+00) to %class.LCG* %0
    load (9.999989e-01) from %class.LCG* %0
    load (9.999982e-01) from %class.LCG* %0
    load (9.999982e-01) from %class.LCG* %0
    load (9.999982e-01) from %class.LCG* %0
Warning: wrong traversal order, or recursive call
On function _ZNSt24uniform_int_distributionIiEclISt26linear_congruential_engineImLm16807ELm0ELm2147483647EEEEiRT_RKNS0_10param_typeE
Round 0
  alias entry   %5 = getelementptr inbounds %"struct.std::uniform_int_distribution<int>::param_type", %"struct.std::uniform_int_distribution<int>::param_type"* %2, i64 0, i32 1, !dbg !10267
  alias entry   %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<int>::param_type", %"struct.std::uniform_int_distribution<int>::param_type"* %2, i64 0, i32 0, !dbg !10279
  alias entry   %19 = getelementptr inbounds %"class.std::linear_congruential_engine", %"class.std::linear_congruential_engine"* %1, i64 0, i32 0
  alias entry   %37 = getelementptr inbounds %"class.std::linear_congruential_engine", %"class.std::linear_congruential_engine"* %1, i64 0, i32 0
  alias entry   %51 = getelementptr inbounds %"class.std::linear_congruential_engine", %"class.std::linear_congruential_engine"* %1, i64 0, i32 0, !dbg !10376
Round 1
Round end
    load (1.000000e+00) from %"struct.std::uniform_int_distribution<int>::param_type"* %2
    load (1.000000e+00) from %"struct.std::uniform_int_distribution<int>::param_type"* %2
    load (5.000000e-01) from %"class.std::linear_congruential_engine"* %1
    store (5.000000e-01) to %"class.std::linear_congruential_engine"* %1
Warning: wrong traversal order, or recursive call
On function _ZNSt6vectorIlSaIlEEaSERKS1_
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 1, !dbg !10278
    alias entry   %6 = bitcast i64** %5 to i64*, !dbg !10278
    alias entry   %8 = bitcast %"class.std::vector.0"* %1 to i64*, !dbg !10285
  alias entry   %12 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10294
    alias entry   %13 = bitcast i64** %12 to i64*, !dbg !10294
    alias entry   %15 = bitcast %"class.std::vector.0"* %0 to i64*, !dbg !10296
  alias entry   %33 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10459
  alias entry   %41 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10490
    alias entry   %42 = bitcast i64** %41 to i64*, !dbg !10490
  alias entry   %53 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 0, !dbg !10573
  alias entry   %73 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10633
  alias entry   %76 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10635
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.0"* %1
    load (6.250000e-01) from %"class.std::vector.0"* %1
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (3.125000e-01) from %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
    load (3.125000e-01) from %"class.std::vector.0"* %0
    load (9.765625e-02) from %"class.std::vector.0"* %1
    load (9.765625e-02) from %"class.std::vector.0"* %0
    load (9.765625e-02) from %"class.std::vector.0"* %0
    load (9.765625e-02) from %"class.std::vector.0"* %1
    load (6.250000e-01) from %"class.std::vector.0"* %0
    store (6.250000e-01) to %"class.std::vector.0"* %0
  Frequency of %"class.std::vector.0"* %0
  load: 2.695312e+00		  store: 1.250000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %1
  load: 1.445312e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorIlSaIlEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPlS1_EEmRKl
Round 0
  alias entry   %8 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10281
    alias entry   %9 = bitcast i64** %8 to i64*, !dbg !10281
  alias entry   %11 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10288
    alias entry   %12 = bitcast i64** %11 to i64*, !dbg !10288
    alias entry   %632 = bitcast %"class.std::vector.0"* %0 to i64*, !dbg !10728
  alias entry   %848 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10820
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (3.125000e-01) from i64* %3
    load (9.765625e-02) from %"class.std::vector.0"* %0
    store (1.562500e-01) to %"class.std::vector.0"* %0
    store (1.562500e-01) to %"class.std::vector.0"* %0
    load (9.765625e-02) from %"class.std::vector.0"* %0
    store (1.562500e-01) to %"class.std::vector.0"* %0
    load (3.125000e-01) from %"class.std::vector.0"* %0
    load (3.125000e-01) from i64* %3
    load (3.125000e-01) from %"class.std::vector.0"* %0
    load (3.125000e-01) from %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
  Frequency of %"class.std::vector.0"* %0
  load: 2.382812e+00		  store: 1.406250e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %3
  load: 6.250000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorI4EdgeSaIS0_EE17_M_default_appendEm
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10274
    alias entry   %6 = bitcast %struct.Edge** %5 to i64*, !dbg !10274
  alias entry   %8 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10281
    alias entry   %87 = bitcast %"class.std::vector.5"* %0 to i64*, !dbg !10375
  alias entry   %108 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  alias entry   %115 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10431
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.5"* %0
    load (6.250000e-01) from %"class.std::vector.5"* %0
    load (3.125000e-01) from %"class.std::vector.5"* %0
    load (1.953125e-01) from %"class.std::vector.5"* %0
    load (1.953125e-01) from %"class.std::vector.5"* %0
    load (3.125000e-01) from %"class.std::vector.5"* %0
    store (3.125000e-01) to %"class.std::vector.5"* %0
    store (3.125000e-01) to %"class.std::vector.5"* %0
  Frequency of %"class.std::vector.5"* %0
  load: 2.265625e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZN3LCG18parallel_prefix_opEv
Round 0
  alias entry   %10 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 4, !dbg !10283
  alias entry   %169 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 1, !dbg !10361
  alias entry   %175 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 2, !dbg !10269
  alias entry   %179 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 0
  alias entry   %188 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 5, !dbg !10372
  alias entry   %252 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 7, i32 0, i32 0, i32 0, !dbg !10372
Round 1
Round end
    load (1.000000e+00) from %class.LCG* %0
    load (1.000000e+00) from %class.LCG* %0
    load (1.000000e+00) from %class.LCG* %0
    load (1.000000e+00) from %class.LCG* %0
    load (2.005882e+01) from %class.LCG* %0
    load (2.005882e+01) from %class.LCG* %0
    load (2.005882e+01) from %class.LCG* %0
    load (2.005882e+01) from %class.LCG* %0
    load (1.000000e+00) from %class.LCG* %0
  Frequency of %class.LCG* %0
  load: 8.523529e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorI9EdgeTupleSaIS0_EE17_M_default_appendEm
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10273
    alias entry   %6 = bitcast %struct.EdgeTuple** %5 to i64*, !dbg !10273
  alias entry   %8 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10280
    alias entry   %65 = bitcast %"class.std::vector.84"* %0 to i64*, !dbg !10369
  alias entry   %86 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 0
  alias entry   %93 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10425
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.84"* %0
    load (6.250000e-01) from %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    load (1.953125e-01) from %"class.std::vector.84"* %0
    load (1.953125e-01) from %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    store (3.125000e-01) to %"class.std::vector.84"* %0
    store (3.125000e-01) to %"class.std::vector.84"* %0
  Frequency of %"class.std::vector.84"* %0
  load: 2.578125e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEEZN11GenerateRGG8generateEbbiEUlRKS2_E_ET_SC_SC_T0_St26random_access_iterator_tag
Round 0
Round end
On function _ZNSt6vectorI9EdgeTupleSaIS0_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS0_S2_EEEEvS7_T_S8_St20forward_iterator_tag
Round 0
  alias entry   %13 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10344
    alias entry   %14 = bitcast %struct.EdgeTuple** %13 to i64*, !dbg !10344
  alias entry   %16 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10351
    alias entry   %17 = bitcast %struct.EdgeTuple** %16 to i64*, !dbg !10351
    alias entry   %120 = bitcast %"class.std::vector.84"* %0 to i64*, !dbg !10799
  alias entry   %141 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 0
  alias entry   %146 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10851
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.84"* %0
    load (6.250000e-01) from %"class.std::vector.84"* %0
    load (9.765625e-02) from %"class.std::vector.84"* %0
    store (1.562500e-01) to %"class.std::vector.84"* %0
    load (9.765625e-02) from %"class.std::vector.84"* %0
    store (1.562500e-01) to %"class.std::vector.84"* %0
    load (9.765625e-02) from %"class.std::vector.84"* %0
    store (1.562500e-01) to %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    load (1.953125e-01) from %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    store (3.125000e-01) to %"class.std::vector.84"* %0
    store (3.125000e-01) to %"class.std::vector.84"* %0
    store (3.125000e-01) to %"class.std::vector.84"* %0
  Frequency of %"class.std::vector.84"* %0
  load: 2.675781e+00		  store: 1.406250e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEElZN11GenerateRGG8generateEbbiEUlRKS2_SA_E_EvT_SC_T0_T1_
Round 0
Round end
On function _ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEEZN11GenerateRGG8generateEbbiEUlRKS2_SA_E_EvT_SC_T0_
Round 0
Round end
On function _ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEEZN11GenerateRGG8generateEbbiEUlRKS2_SA_E_EvT_SC_SC_T0_
Round 0
Round end
On function _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEElS2_ZN11GenerateRGG8generateEbbiEUlRKS2_SA_E_EvT_T0_SD_T1_T2_
Round 0
Round end
On function _ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEEZN11GenerateRGG8generateEbbiEUlRKS2_SA_E_EvT_SC_SC_SC_T0_
Round 0
Round end
On function _ZNSt6vectorIlSaIlEE17_M_default_appendEm
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10274
    alias entry   %6 = bitcast i64** %5 to i64*, !dbg !10274
  alias entry   %8 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10281
    alias entry   %20 = bitcast i64** %8 to i64*, !dbg !10380
    alias entry   %21 = bitcast %"class.std::vector.0"* %0 to i64*, !dbg !10381
  alias entry   %42 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0
    alias entry   %65 = bitcast %"class.std::vector.0"* %0 to i8**, !dbg !10628
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (3.125000e-01) from %"class.std::vector.0"* %0
    load (3.125000e-01) from %"class.std::vector.0"* %0
    load (1.953125e-01) from %"class.std::vector.0"* %0
    load (1.953125e-01) from %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
  Frequency of %"class.std::vector.0"* %0
  load: 2.265625e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorIdSaIdEE17_M_default_appendEm
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10274
    alias entry   %6 = bitcast double** %5 to i64*, !dbg !10274
  alias entry   %8 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10281
    alias entry   %20 = bitcast double** %8 to i64*, !dbg !10381
    alias entry   %21 = bitcast %"class.std::vector.10"* %0 to i64*, !dbg !10382
  alias entry   %42 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %0, i64 0, i32 0, i32 0, i32 0
    alias entry   %65 = bitcast %"class.std::vector.10"* %0 to i8**, !dbg !10630
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.10"* %0
    load (6.250000e-01) from %"class.std::vector.10"* %0
    load (3.125000e-01) from %"class.std::vector.10"* %0
    load (3.125000e-01) from %"class.std::vector.10"* %0
    load (1.953125e-01) from %"class.std::vector.10"* %0
    load (1.953125e-01) from %"class.std::vector.10"* %0
    store (3.125000e-01) to %"class.std::vector.10"* %0
    store (3.125000e-01) to %"class.std::vector.10"* %0
  Frequency of %"class.std::vector.10"* %0
  load: 2.265625e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorI4CommSaIS0_EE17_M_default_appendEm
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10460
    alias entry   %6 = bitcast %struct.Comm** %5 to i64*, !dbg !10460
  alias entry   %8 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10467
    alias entry   %20 = bitcast %"class.std::vector.15"* %0 to i64*, !dbg !10551
  alias entry   %41 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %0, i64 0, i32 0, i32 0, i32 0
  alias entry   %48 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10607
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.15"* %0
    load (6.250000e-01) from %"class.std::vector.15"* %0
    load (3.125000e-01) from %"class.std::vector.15"* %0
    load (3.125000e-01) from %"class.std::vector.15"* %0
    load (1.953125e-01) from %"class.std::vector.15"* %0
    load (1.953125e-01) from %"class.std::vector.15"* %0
    load (3.125000e-01) from %"class.std::vector.15"* %0
    store (3.125000e-01) to %"class.std::vector.15"* %0
    store (3.125000e-01) to %"class.std::vector.15"* %0
  Frequency of %"class.std::vector.15"* %0
  load: 2.578125e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt13unordered_setIlSt4hashIlESt8equal_toIlESaIlEEmEEvT_T0_
Round 0
Round end
  Frequency of %"class.std::unordered_set"* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt10_HashtableIlSt4pairIKllESaIS2_ENSt8__detail10_Select1stESt8equal_toIlESt4hashIlENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS4_10_Hash_nodeIS2_Lb0EEE
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 4, !dbg !10268
  alias entry   %6 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 4, i32 1, !dbg !10275
  alias entry   %8 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 1, !dbg !10282
  alias entry   %10 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 3, !dbg !10288
  alias entry   %17 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 0
  alias entry   %29 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 2, i32 0, !dbg !10428
    alias entry   %30 = bitcast %"struct.std::__detail::_Hash_node_base"* %29 to %"struct.std::__detail::_Hash_node"**, !dbg !10429
  alias entry   %32 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %29, i64 0, i32 0, !dbg !10432
    alias entry   %35 = bitcast %"struct.std::__detail::_Hash_node_base"* %29 to i64*
    base alias entry   %44 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %28, i64 %43, !dbg !10509
    alias entry   %61 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %44, align 8, !dbg !10529, !tbaa !10511
  alias entry   %62 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %61, i64 0, i32 0, !dbg !10530
    alias entry   %77 = bitcast %"class.std::_Hashtable"* %0 to i8**, !dbg !10550
    alias entry   %83 = bitcast %"struct.std::__detail::_Hash_node"* %3 to i8*, !dbg !10618
  alias entry   %87 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 0, !dbg !10296
  alias entry   %94 = getelementptr inbounds %"struct.std::__detail::_Hash_node", %"struct.std::__detail::_Hash_node"* %3, i64 0, i32 0, !dbg !10627
    alias entry   %95 = bitcast %"struct.std::__detail::_Hash_node"* %3 to i64*, !dbg !10628
    base alias entry   %97 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %96, i64 0, i32 0, !dbg !10630
  alias entry   %99 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 2, i32 0, !dbg !10639
    alias entry   %100 = bitcast %"struct.std::__detail::_Hash_node_base"* %99 to i64*, !dbg !10640
  alias entry   %102 = getelementptr inbounds %"struct.std::__detail::_Hash_node", %"struct.std::__detail::_Hash_node"* %3, i64 0, i32 0, !dbg !10641
  alias entry   %103 = getelementptr inbounds %"struct.std::__detail::_Hash_node", %"struct.std::__detail::_Hash_node"* %3, i64 0, i32 0, i32 0, !dbg !10641
    alias entry   %104 = bitcast %"struct.std::__detail::_Hash_node"* %3 to i64*, !dbg !10642
  alias entry   %105 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %99, i64 0, i32 0, !dbg !10645
    base alias entry   %105 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %99, i64 0, i32 0, !dbg !10645
    base alias entry   %114 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %85, i64 %113, !dbg !10676
    base alias entry   %118 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %117, i64 %86, !dbg !10678
Round 1
Warning: the first offset is not constant
    alias entry   %45 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %44, align 8, !dbg !10509, !tbaa !10511
    alias entry   %57 = bitcast %"struct.std::__detail::_Hash_node_base"* %45 to i64*, !dbg !10525
  base alias offset entry (0)   %96 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %88, align 8, !dbg !10629, !tbaa !10511
Warning: the first offset is not constant
Warning: the first offset is not constant
Round 2
Warning: the first offset is not constant
Warning: the first offset is not constant
Warning: the first offset is not constant
Round end
    load (1.000000e+00) from %"class.std::_Hashtable"* %0
    load (1.000000e+00) from %"class.std::_Hashtable"* %0
    load (1.000000e+00) from %"class.std::_Hashtable"* %0
    load (5.000000e-01) from %"class.std::_Hashtable"* %0
    load (4.999995e-01) from %"class.std::_Hashtable"* %0
    store (4.999995e-01) to %"class.std::_Hashtable"* %0
    load (3.749996e+00) from %"class.std::_Hashtable"* %0
    store (3.749996e+00) to %"class.std::_Hashtable"* %0
    load (6.249994e+00) from %"class.std::_Hashtable"* %0
    store (6.249994e+00) to %"class.std::_Hashtable"* %0
    store (4.768372e-07) to %"class.std::_Hashtable"* %0
    load (4.999995e-01) from %"class.std::_Hashtable"* %0
    store (4.999995e-01) to %"class.std::_Hashtable"* %0
    store (4.999995e-01) to %"class.std::_Hashtable"* %0
    store (6.249997e-01) to %"struct.std::__detail::_Hash_node"* %3
    load (3.749998e-01) from %"class.std::_Hashtable"* %0
    store (3.749998e-01) to %"struct.std::__detail::_Hash_node"* %3
    store (3.749998e-01) to %"class.std::_Hashtable"* %0
    load (3.749998e-01) from %"struct.std::__detail::_Hash_node"* %3
    load (2.343749e-01) from %"class.std::_Hashtable"* %0
    load (2.343749e-01) from %"class.std::_Hashtable"* %0
    load (9.999995e-01) from %"class.std::_Hashtable"* %0
    store (9.999995e-01) to %"class.std::_Hashtable"* %0
  Frequency of %"class.std::_Hashtable"* %0
  load: 1.634374e+01		  store: 1.287499e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"struct.std::__detail::_Hash_node"* %3
  load: 3.749998e-01		  store: 9.999995e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt10_HashtableIllSaIlENSt8__detail9_IdentityESt8equal_toIlESt4hashIlENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE21_M_insert_unique_nodeEmmPNS1_10_Hash_nodeIlLb0EEE
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 4, !dbg !10268
  alias entry   %6 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 4, i32 1, !dbg !10275
  alias entry   %8 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 1, !dbg !10282
  alias entry   %10 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 3, !dbg !10288
  alias entry   %17 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 0
  alias entry   %29 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 2, i32 0, !dbg !10428
    alias entry   %30 = bitcast %"struct.std::__detail::_Hash_node_base"* %29 to %"struct.std::__detail::_Hash_node.61"**, !dbg !10429
  alias entry   %32 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %29, i64 0, i32 0, !dbg !10432
    alias entry   %35 = bitcast %"struct.std::__detail::_Hash_node_base"* %29 to i64*
    base alias entry   %44 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %28, i64 %43, !dbg !10469
    alias entry   %61 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %44, align 8, !dbg !10489, !tbaa !10471
  alias entry   %62 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %61, i64 0, i32 0, !dbg !10490
    alias entry   %77 = bitcast %"class.std::_Hashtable.34"* %0 to i8**, !dbg !10510
    alias entry   %83 = bitcast %"struct.std::__detail::_Hash_node.61"* %3 to i8*, !dbg !10578
  alias entry   %87 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 0, !dbg !10296
  alias entry   %94 = getelementptr inbounds %"struct.std::__detail::_Hash_node.61", %"struct.std::__detail::_Hash_node.61"* %3, i64 0, i32 0, !dbg !10587
    alias entry   %95 = bitcast %"struct.std::__detail::_Hash_node.61"* %3 to i64*, !dbg !10588
    base alias entry   %97 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %96, i64 0, i32 0, !dbg !10590
  alias entry   %99 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 2, i32 0, !dbg !10599
    alias entry   %100 = bitcast %"struct.std::__detail::_Hash_node_base"* %99 to i64*, !dbg !10600
  alias entry   %102 = getelementptr inbounds %"struct.std::__detail::_Hash_node.61", %"struct.std::__detail::_Hash_node.61"* %3, i64 0, i32 0, !dbg !10601
  alias entry   %103 = getelementptr inbounds %"struct.std::__detail::_Hash_node.61", %"struct.std::__detail::_Hash_node.61"* %3, i64 0, i32 0, i32 0, !dbg !10601
    alias entry   %104 = bitcast %"struct.std::__detail::_Hash_node.61"* %3 to i64*, !dbg !10602
  alias entry   %105 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %99, i64 0, i32 0, !dbg !10605
    base alias entry   %105 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %99, i64 0, i32 0, !dbg !10605
    base alias entry   %114 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %85, i64 %113, !dbg !10630
    base alias entry   %118 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %117, i64 %86, !dbg !10632
Round 1
Warning: the first offset is not constant
    alias entry   %45 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %44, align 8, !dbg !10469, !tbaa !10471
    alias entry   %57 = bitcast %"struct.std::__detail::_Hash_node_base"* %45 to i64*, !dbg !10485
  base alias offset entry (0)   %96 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %88, align 8, !dbg !10589, !tbaa !10471
Warning: the first offset is not constant
Warning: the first offset is not constant
Round 2
Warning: the first offset is not constant
Warning: the first offset is not constant
Warning: the first offset is not constant
Round end
    load (1.000000e+00) from %"class.std::_Hashtable.34"* %0
    load (1.000000e+00) from %"class.std::_Hashtable.34"* %0
    load (1.000000e+00) from %"class.std::_Hashtable.34"* %0
    load (5.000000e-01) from %"class.std::_Hashtable.34"* %0
    load (4.999995e-01) from %"class.std::_Hashtable.34"* %0
    store (4.999995e-01) to %"class.std::_Hashtable.34"* %0
    load (3.749996e+00) from %"class.std::_Hashtable.34"* %0
    store (3.749996e+00) to %"class.std::_Hashtable.34"* %0
    load (6.249994e+00) from %"class.std::_Hashtable.34"* %0
    store (6.249994e+00) to %"class.std::_Hashtable.34"* %0
    store (4.768372e-07) to %"class.std::_Hashtable.34"* %0
    load (4.999995e-01) from %"class.std::_Hashtable.34"* %0
    store (4.999995e-01) to %"class.std::_Hashtable.34"* %0
    store (4.999995e-01) to %"class.std::_Hashtable.34"* %0
    store (6.249997e-01) to %"struct.std::__detail::_Hash_node.61"* %3
    load (3.749998e-01) from %"class.std::_Hashtable.34"* %0
    store (3.749998e-01) to %"struct.std::__detail::_Hash_node.61"* %3
    store (3.749998e-01) to %"class.std::_Hashtable.34"* %0
    load (3.749998e-01) from %"struct.std::__detail::_Hash_node.61"* %3
    load (2.343749e-01) from %"class.std::_Hashtable.34"* %0
    load (2.343749e-01) from %"class.std::_Hashtable.34"* %0
    load (9.999995e-01) from %"class.std::_Hashtable.34"* %0
    store (9.999995e-01) to %"class.std::_Hashtable.34"* %0
  Frequency of %"class.std::_Hashtable.34"* %0
  load: 1.634374e+01		  store: 1.287499e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"struct.std::__detail::_Hash_node.61"* %3
  load: 3.749998e-01		  store: 9.999995e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorI8CommInfoSaIS0_EE17_M_default_appendEm
Round 0
  alias entry   %7 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10273
    alias entry   %8 = bitcast %struct.CommInfo** %7 to i64*, !dbg !10273
  alias entry   %10 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10280
    alias entry   %59 = bitcast %struct.CommInfo** %10 to i64*, !dbg !10394
    alias entry   %60 = bitcast %"class.std::vector.52"* %0 to i64*, !dbg !10395
  alias entry   %81 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  alias entry   %89 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10449
    alias entry   %143 = bitcast %"class.std::vector.52"* %0 to i8**, !dbg !10651
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.52"* %0
    load (6.250000e-01) from %"class.std::vector.52"* %0
    load (3.125000e-01) from %"class.std::vector.52"* %0
    load (3.125000e-01) from %"class.std::vector.52"* %0
    load (1.953125e-01) from %"class.std::vector.52"* %0
    load (1.953125e-01) from %"class.std::vector.52"* %0
    load (3.125000e-01) from %"class.std::vector.52"* %0
    store (3.125000e-01) to %"class.std::vector.52"* %0
    store (3.125000e-01) to %"class.std::vector.52"* %0
  Frequency of %"class.std::vector.52"* %0
  load: 2.578125e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _GLOBAL__sub_I_main.cpp
Round 0
Round end
On function .omp_offloading.descriptor_unreg
Round 0
Round end
  Frequency of i8* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_offloading.descriptor_reg.nvptx64-nvidia-cuda
Round 0
Round end
  ---- Identify Target Regions ----
  target call:   %49 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z21distComputeModularityRK5GraphP4CommPKddi_l396.region_id, i32 5, i8** nonnull %24, i8** nonnull %26, i64* nonnull %28, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @.offload_maptypes, i64 0, i64 0), i32 0, i32 0), !dbg !10317
  target call:   %24 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z20distUpdateLocalCinfolP4CommPKS__l436.region_id, i32 3, i8** nonnull %9, i8** nonnull %11, i64* nonnull %13, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.15, i64 0, i64 0), i32 0, i32 0), !dbg !10269
  target call:   %26 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z16distCleanCWandCUlPdP4Comm_l455.region_id, i32 3, i8** nonnull %11, i8** nonnull %13, i64* nonnull %15, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.20, i64 0, i64 0), i32 0, i32 0), !dbg !10269
  target call:   %258 = invoke i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z16distCleanCWandCUlPdP4Comm_l455.region_id, i32 3, i8** nonnull %184, i8** nonnull %186, i64* nonnull %188, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.20, i64 0, i64 0), i32 0, i32 0)
          to label %259 unwind label %319, !dbg !11559
  target call:   %276 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z17distLouvainMethodiiRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ddRi_l1368.region_id, i32 12, i8** nonnull %200, i8** nonnull %202, i64* nonnull %204, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @.offload_maptypes.47, i64 0, i64 0), i32 0, i32 0), !dbg !11584
  target call:   %325 = invoke i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z20distUpdateLocalCinfolP4CommPKS__l436.region_id, i32 3, i8** nonnull %184, i8** nonnull %186, i64* nonnull %188, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.15, i64 0, i64 0), i32 0, i32 0)
          to label %326 unwind label %319, !dbg !11667
  ---- Target Distance Calculation ----
_Z17distLouvainMethodiiRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ddRi converges after 3 iterations
target 0: (0: 1.000000e+00) (1: 1.000000e+00) (2: 1.000000e+00) (3: 1.000000e+00) (4: 1.000000e+00) (5: 1.000000e+00) 
target 1: (0: 1.000000e+00) (1: 1.000000e+00) (2: 1.000000e+00) (3: 1.000000e+00) (4: 1.000000e+00) (5: 1.000000e+00) 
target 2: (0: 1.000000e+00) (1: 1.000000e+00) (2: 1.000000e+00) (3: 1.000000e+00) (4: 1.000000e+00) (5: 1.000000e+00) 
target 3: (0: 1.010000e+02) (1: 1.010000e+02) (2: 1.010000e+02) (3: 9.152967e+00) (4: 1.000095e+00) (5: 2.000190e+00) 
target 4: (0: 1.010000e+02) (1: 1.010000e+02) (2: 1.010000e+02) (3: 8.152880e+00) (4: 9.091440e+00) (5: 1.000095e+00) 
target 5: (0: 1.010000e+02) (1: 1.010000e+02) (2: 1.010000e+02) (3: 7.152791e+00) (4: 8.091353e+00) (5: 9.029914e+00) 
  ---- OMP (main.cpp, powerpc64le-unknown-linux-gnu) ----
new entry   %91 = invoke i8* @omp_target_alloc(i64 %90, i32 signext -100)
          to label %92 unwind label %291, !dbg !11387
new entry   %105 = invoke i8* @omp_target_alloc(i64 %104, i32 signext -100)
          to label %106 unwind label %295, !dbg !11405
new entry   %119 = invoke i8* @omp_target_alloc(i64 %118, i32 signext -100)
          to label %120 unwind label %299, !dbg !11431
new entry   %128 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %129 unwind label %303, !dbg !11449
new entry   %134 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %135 unwind label %307, !dbg !11462
new entry   %140 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %141 unwind label %311, !dbg !11478
new entry   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
new entry   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
new entry   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
Round 0
  base alias entry   %130 = bitcast i64** %29 to i8**, !dbg !11450
  base alias entry   %142 = bitcast i64** %30 to i8**, !dbg !11479
  alias entry   %147 = bitcast i8* %145 to %struct.Comm*, !dbg !11487
  alias entry   %158 = bitcast i8* %156 to double*, !dbg !11511
  base alias entry   %189 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 1
  base alias entry   %190 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 1
  base alias entry   %192 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 2
  base alias entry   %193 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 2
Warning: reach to function declaration __kmpc_fork_teams
  base alias entry   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias entry   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias entry   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias entry   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias entry   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias entry   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias entry   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias entry   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias entry   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias entry   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias entry   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias entry   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias entry   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias entry   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
Warning: reach to function declaration __kmpc_fork_teams
  base alias entry   %189 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 1
  base alias entry   %190 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 1
Warning: reach to function declaration __kmpc_fork_teams
  alias entry (func arg) %struct.Comm* %1
  alias entry (func arg) double* %2
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 1
Round 1
  base alias entry   %35 = bitcast i8** %34 to double**, !dbg !10317
  base alias entry   %37 = bitcast i8** %36 to double**, !dbg !10317
  base alias entry   %45 = bitcast i8** %44 to %struct.Comm**, !dbg !10317
  base alias entry   %47 = bitcast i8** %46 to %struct.Comm**, !dbg !10317
Warning: reach to function declaration __kmpc_fork_teams
  base alias entry   %29 = alloca i64*, align 8
  base alias entry   %30 = alloca i64*, align 8
  base alias offset entry (1)   %16 = alloca [3 x i8*], align 8
  base alias offset entry (1)   %17 = alloca [3 x i8*], align 8
  base alias offset entry (2)   %16 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %192 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 2
  base alias offset entry (2)   %17 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %193 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 2
  base alias offset entry (1)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (1)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (2)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-1)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (2)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-1)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (3)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-2)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (-1)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (3)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-2)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (-1)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (-3)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (-2)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (-1)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (-3)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (-2)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (-1)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (-4)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (-3)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (-2)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (-4)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (-3)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (-2)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (6)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-5)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (-4)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (-3)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (6)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-5)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (-4)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (-3)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (7)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-6)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (-5)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (-4)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (-1)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (7)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-6)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (-5)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (-4)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (-1)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (8)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-7)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-6)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-5)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-2)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-1)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (8)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-7)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-6)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-5)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-2)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-1)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-8)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-7)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-6)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-3)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-2)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-1)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-8)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-7)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-6)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-3)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-2)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-1)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (10)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-9)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-8)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-7)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-4)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-3)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-2)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (10)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-9)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-8)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-7)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-4)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-3)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-2)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-10)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-9)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-8)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-5)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-4)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-3)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-1)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-10)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-9)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-8)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-5)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-4)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-3)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-1)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %189, align 8, !dbg !11559
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %190, align 8, !dbg !11559
Warning: reach to function declaration __kmpc_fork_teams
  alias entry   %263 = load i64*, i64** %29, align 8, !dbg !11584, !tbaa !11451
  alias entry   %264 = load i64*, i64** %30, align 8, !dbg !11584, !tbaa !11451
  alias entry   %274 = ptrtoint i64* %263 to i64, !dbg !11584
  alias entry   %275 = ptrtoint i64* %264 to i64, !dbg !11584
  base alias entry   %215 = bitcast i8** %214 to i64*
  base alias entry   %217 = bitcast i8** %216 to i64*
  base alias entry   %220 = bitcast i8** %219 to i64*
  base alias entry   %222 = bitcast i8** %221 to i64*
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 2
Warning: reach to function declaration __kmpc_fork_call
Round 2
  base alias entry   %34 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 2, !dbg !10317
  base alias entry   %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 2, !dbg !10317
  base alias entry   %44 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 4, !dbg !10317
  base alias entry   %46 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 4, !dbg !10317
Warning: reach to function declaration __kmpc_fork_teams
  base alias offset entry (2)   %11 = alloca [5 x i8*], align 8
  base alias offset entry (2)   %12 = alloca [5 x i8*], align 8
  base alias offset entry (-1)   %39 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 3, !dbg !10317
  base alias offset entry (-1)   %41 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 3, !dbg !10317
  base alias offset entry (4)   %11 = alloca [5 x i8*], align 8
  base alias offset entry (-2)   %44 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 4, !dbg !10317
  base alias offset entry (4)   %12 = alloca [5 x i8*], align 8
  base alias offset entry (-2)   %46 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 4, !dbg !10317
Warning: reach to function declaration __kmpc_fork_teams
  base alias entry   %126 = bitcast i64** %29 to i8*, !dbg !11447
  base alias entry   %139 = bitcast i64** %30 to i8*, !dbg !11477
  base alias offset entry (1)   %184 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  base alias offset entry (2)   %184 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  base alias offset entry (1)   %186 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  base alias offset entry (2)   %186 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  base alias offset entry (1)   %189 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 1
  base alias offset entry (1)   %190 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 1
  base alias offset entry (1)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (2)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (3)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (6)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (7)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (8)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (10)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (1)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (2)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (3)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (6)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (7)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (8)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (10)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (1)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (2)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (5)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (6)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (7)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (9)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (1)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (2)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (5)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (6)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (7)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (9)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (1)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (4)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (5)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (6)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (8)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (1)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (4)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (5)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (6)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (8)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (3)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (4)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (5)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (7)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (3)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (4)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (5)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (7)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (2)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (3)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (4)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (6)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias entry   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (2)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (3)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (4)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (6)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias entry   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (1)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (2)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (3)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (5)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias entry   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (1)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (2)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (3)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (5)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias entry   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (1)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (2)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (4)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (1)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (2)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (4)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (1)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (3)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (1)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (3)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (2)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (2)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (1)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (1)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %189, align 8, !dbg !11559
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %190, align 8, !dbg !11559
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 3
Warning: reach to function declaration __kmpc_fork_call
Round 3
  base alias offset entry (4)   %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0, !dbg !10317
  base alias offset entry (2)   %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0, !dbg !10317
  base alias offset entry (4)   %26 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0, !dbg !10317
  base alias offset entry (2)   %26 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0, !dbg !10317
  base alias offset entry (3)   %29 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 1, !dbg !10317
  base alias offset entry (1)   %29 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 1, !dbg !10317
  base alias offset entry (3)   %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 1, !dbg !10317
  base alias offset entry (1)   %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 1, !dbg !10317
  base alias offset entry (2)   %34 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 2, !dbg !10317
  base alias offset entry (2)   %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 2, !dbg !10317
  base alias offset entry (1)   %39 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 3, !dbg !10317
  base alias offset entry (1)   %41 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 3, !dbg !10317
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
  base alias offset entry (4)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (4)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (5)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-1)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (5)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-1)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (-2)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (-1)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (-2)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (-1)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (-3)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (-2)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (-3)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (-2)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (-4)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-3)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-4)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-3)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-5)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-4)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-5)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-4)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-6)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-5)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-6)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-5)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-7)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-6)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-7)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-6)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %189, align 8, !dbg !11559
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %190, align 8, !dbg !11559
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 4
Warning: reach to function declaration __kmpc_fork_call
Round 4
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
  base alias offset entry (4)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (5)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (4)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (5)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (3)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (4)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (3)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (4)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (2)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (3)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (2)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (3)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (1)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (2)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (1)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (2)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (1)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (1)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %189, align 8, !dbg !11559
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %190, align 8, !dbg !11559
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 5
Warning: reach to function declaration __kmpc_fork_call
Round 5
Warning: reach to function declaration __kmpc_fork_teams
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %189, align 8, !dbg !11559
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %190, align 8, !dbg !11559
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 6
Warning: reach to function declaration __kmpc_fork_call
Round 6
Warning: reach to function declaration __kmpc_fork_teams
Round end
  ---- Access Frequency Analysis ----
  target call (1.625206e+01, 0.000000e+00, 5.076920e+00) using   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  target call (1.625206e+01, 0.000000e+00, 1.015380e+01) using   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
  target call (1.625204e+01, 1.015380e+01, 0.000000e+00) using   %91 = invoke i8* @omp_target_alloc(i64 %90, i32 signext -100)
          to label %92 unwind label %291, !dbg !11387
  target call (1.625204e+01, 5.076920e+00, 0.000000e+00) using   %105 = invoke i8* @omp_target_alloc(i64 %104, i32 signext -100)
          to label %106 unwind label %295, !dbg !11405
  target call (1.625204e+01, 8.757690e+01, 0.000000e+00) using   %119 = invoke i8* @omp_target_alloc(i64 %118, i32 signext -100)
          to label %120 unwind label %299, !dbg !11431
  target call (1.625204e+01, 4.569230e+01, 0.000000e+00) using   %128 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %129 unwind label %303, !dbg !11449
  target call (1.625204e+01, 0.000000e+00, 5.076920e+00) using   %140 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %141 unwind label %311, !dbg !11478
  target call (1.625204e+01, 3.807690e+00, 0.000000e+00) using   %134 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %135 unwind label %307, !dbg !11462
  target call (1.625204e+01, 1.078710e+02, 0.000000e+00) using   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  target call (1.625204e+01, 2.538460e+00, 0.000000e+00) using   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
  target call (1.625204e+01, 2.538460e+00, 2.538460e+00) using   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
  target call (1.625202e+01, 1.015380e+01, 1.015380e+01) using   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  target call (1.625202e+01, 1.015380e+01, 0.000000e+00) using   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
  call (1.625199e+01, 0.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  call (1.625199e+01, 0.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
Frequency of   %91 = invoke i8* @omp_target_alloc(i64 %90, i32 signext -100)
          to label %92 unwind label %291, !dbg !11387
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.650200e+02		  store: 0.000000e+00 (target)
Frequency of   %105 = invoke i8* @omp_target_alloc(i64 %104, i32 signext -100)
          to label %106 unwind label %295, !dbg !11405
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 8.251031e+01		  store: 0.000000e+00 (target)
Frequency of   %119 = invoke i8* @omp_target_alloc(i64 %118, i32 signext -100)
          to label %120 unwind label %299, !dbg !11431
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.423303e+03		  store: 0.000000e+00 (target)
Frequency of   %128 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %129 unwind label %303, !dbg !11449
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 7.425931e+02		  store: 0.000000e+00 (target)
Frequency of   %134 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %135 unwind label %307, !dbg !11462
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 6.188273e+01		  store: 0.000000e+00 (target)
Frequency of   %140 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %141 unwind label %311, !dbg !11478
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 8.251031e+01 (target)
Frequency of   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.918144e+03		  store: 2.475302e+02 (target)
Frequency of   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 2.062750e+02		  store: 1.650201e+02 (target)
Frequency of   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 4.125515e+01		  store: 4.125515e+01 (target)
  ---- Optimization Preparation ----
Rank 9 for   %134 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %135 unwind label %307, !dbg !11462
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 6.188273e+01		  store: 0.000000e+00 (target)
Rank 8 for   %105 = invoke i8* @omp_target_alloc(i64 %104, i32 signext -100)
          to label %106 unwind label %295, !dbg !11405
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 8.251031e+01		  store: 0.000000e+00 (target)
Rank 7 for   %140 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %141 unwind label %311, !dbg !11478
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 8.251031e+01 (target)
Rank 6 for   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 4.125515e+01		  store: 4.125515e+01 (target)
Rank 5 for   %91 = invoke i8* @omp_target_alloc(i64 %90, i32 signext -100)
          to label %92 unwind label %291, !dbg !11387
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.650200e+02		  store: 0.000000e+00 (target)
Rank 4 for   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 2.062750e+02		  store: 1.650201e+02 (target)
Rank 3 for   %128 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %129 unwind label %303, !dbg !11449
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 7.425931e+02		  store: 0.000000e+00 (target)
Rank 2 for   %119 = invoke i8* @omp_target_alloc(i64 %118, i32 signext -100)
          to label %120 unwind label %299, !dbg !11431
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.423303e+03		  store: 0.000000e+00 (target)
Rank 1 for   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.918144e+03		  store: 2.475302e+02 (target)
  ---- Data Mapping Optimization ----
  target call:   %49 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z21distComputeModularityRK5GraphP4CommPKddi_l396.region_id, i32 5, i8** nonnull %24, i8** nonnull %26, i64* nonnull %28, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @.offload_maptypes, i64 0, i64 0), i32 0, i32 0), !dbg !10317
@.offload_maptypes = private unnamed_addr constant [5 x i64] [i64 800, i64 547, i64 33, i64 547, i64 33]
  arg 2 (0.000000e+00, 0.000000e+00; 4.125515e+01, 4.125515e+01) is   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
    size is   %127 = shl i64 %69, 3, !dbg !11448
    global reuse is 0x06
    local reuse is 1.600380e+02, 1.280304e+03 after adjustment;		    scaled local reuse is 0x500
    reuse distance is 0x01
  arg 4 (0.000000e+00, 0.000000e+00; 1.918144e+03, 2.475302e+02) is   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x01
    local reuse is 1.600380e+02, 2.560608e+03 after adjustment;		    scaled local reuse is 0xa00
    reuse distance is 0x01
    map type changed: @.offload_maptypes.0 = private unnamed_addr constant [5 x i64] [i64 800, i64 547, i64 1100853829665, i64 547, i64 1102195986465]
  target call:   %24 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z20distUpdateLocalCinfolP4CommPKS__l436.region_id, i32 3, i8** nonnull %9, i8** nonnull %11, i64* nonnull %13, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.15, i64 0, i64 0), i32 0, i32 0), !dbg !10269
@.offload_maptypes.15 = private unnamed_addr constant [3 x i64] [i64 800, i64 35, i64 33]
  target call:   %26 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z16distCleanCWandCUlPdP4Comm_l455.region_id, i32 3, i8** nonnull %11, i8** nonnull %13, i64* nonnull %15, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.20, i64 0, i64 0), i32 0, i32 0), !dbg !10269
@.offload_maptypes.20 = private unnamed_addr constant [3 x i64] [i64 800, i64 34, i64 34]
  target call:   %258 = invoke i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z16distCleanCWandCUlPdP4Comm_l455.region_id, i32 3, i8** nonnull %184, i8** nonnull %186, i64* nonnull %188, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.20, i64 0, i64 0), i32 0, i32 0)
          to label %259 unwind label %319, !dbg !11559
@.offload_maptypes.20 = private unnamed_addr constant [3 x i64] [i64 800, i64 34, i64 34]
  arg 1 (0.000000e+00, 0.000000e+00; 1.918144e+03, 2.475302e+02) is   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x01
    local reuse is 5.076920e+00, 4.061536e+01 after adjustment;		    scaled local reuse is 0x028
    reuse distance is 0x01
  arg 2 (0.000000e+00, 0.000000e+00; 2.062750e+02, 1.650201e+02) is   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x04
    local reuse is 1.015380e+01, 1.624608e+02 after adjustment;		    scaled local reuse is 0x0a2
    reuse distance is 0x01
    map type changed: @.offload_maptypes.20.1 = private unnamed_addr constant [3 x i64] [i64 800, i64 1099553574946, i64 1099681513506]
  target call:   %276 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z17distLouvainMethodiiRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ddRi_l1368.region_id, i32 12, i8** nonnull %200, i8** nonnull %202, i64* nonnull %204, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @.offload_maptypes.47, i64 0, i64 0), i32 0, i32 0), !dbg !11584
@.offload_maptypes.47 = private unnamed_addr constant [12 x i64] [i64 800, i64 33, i64 33, i64 33, i64 33, i64 34, i64 33, i64 33, i64 35, i64 800, i64 35, i64 800]
  arg 1 (0.000000e+00, 0.000000e+00; 1.650200e+02, 0.000000e+00) is   %91 = invoke i8* @omp_target_alloc(i64 %90, i32 signext -100)
          to label %92 unwind label %291, !dbg !11387
    size is   %90 = sub i64 %87, %89, !dbg !11386
    global reuse is 0x05
    local reuse is 1.015380e+01, 8.123040e+01 after adjustment;		    scaled local reuse is 0x051
    reuse distance is 0x09
  arg 2 (0.000000e+00, 0.000000e+00; 8.251031e+01, 0.000000e+00) is   %105 = invoke i8* @omp_target_alloc(i64 %104, i32 signext -100)
          to label %106 unwind label %295, !dbg !11405
    size is   %104 = sub i64 %101, %103, !dbg !11404
    global reuse is 0x08
    local reuse is 5.076920e+00, 4.061536e+01 after adjustment;		    scaled local reuse is 0x028
    reuse distance is 0x09
  arg 3 (0.000000e+00, 0.000000e+00; 1.423303e+03, 0.000000e+00) is   %119 = invoke i8* @omp_target_alloc(i64 %118, i32 signext -100)
          to label %120 unwind label %299, !dbg !11431
    size is   %118 = sub i64 %115, %117, !dbg !11430
    global reuse is 0x02
    local reuse is 8.757690e+01, 1.401230e+03 after adjustment;		    scaled local reuse is 0x579
    reuse distance is 0x09
  arg 4 (0.000000e+00, 0.000000e+00; 7.425931e+02, 0.000000e+00) is   %128 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %129 unwind label %303, !dbg !11449
    size is   %127 = shl i64 %69, 3, !dbg !11448
    global reuse is 0x03
    local reuse is 4.569230e+01, 3.655384e+02 after adjustment;		    scaled local reuse is 0x16d
    reuse distance is 0x09
  arg 5 (0.000000e+00, 0.000000e+00; 0.000000e+00, 8.251031e+01) is   %140 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %141 unwind label %311, !dbg !11478
    size is   %127 = shl i64 %69, 3, !dbg !11448
    global reuse is 0x07
    local reuse is 5.076920e+00, 4.061536e+01 after adjustment;		    scaled local reuse is 0x028
    reuse distance is 0x09
  arg 6 (0.000000e+00, 0.000000e+00; 6.188273e+01, 0.000000e+00) is   %134 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %135 unwind label %307, !dbg !11462
    size is   %127 = shl i64 %69, 3, !dbg !11448
    global reuse is 0x09
    local reuse is 3.807690e+00, 3.046152e+01 after adjustment;		    scaled local reuse is 0x01e
    reuse distance is 0x09
  arg 7 (0.000000e+00, 0.000000e+00; 1.918144e+03, 2.475302e+02) is   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x01
    local reuse is 1.078710e+02, 1.725936e+03 after adjustment;		    scaled local reuse is 0x6bd
    reuse distance is 0x01
  arg 8 (0.000000e+00, 0.000000e+00; 2.062750e+02, 1.650201e+02) is   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x04
    local reuse is 2.538460e+00, 4.061536e+01 after adjustment;		    scaled local reuse is 0x028
    reuse distance is 0x01
  arg 10 (0.000000e+00, 0.000000e+00; 4.125515e+01, 4.125515e+01) is   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
    size is   %127 = shl i64 %69, 3, !dbg !11448
    global reuse is 0x06
    local reuse is 5.076920e+00, 4.061536e+01 after adjustment;		    scaled local reuse is 0x028
    reuse distance is 0x09
    map type changed: @.offload_maptypes.47.2 = private unnamed_addr constant [12 x i64] [i64 800, i64 9895689605153, i64 9895646625825, i64 9897073713185, i64 9895987392545, i64 9895646621730, i64 9895636144161, i64 1101320425505, i64 1099553587235, i64 800, i64 9895646617635, i64 800]
  target call:   %325 = invoke i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z20distUpdateLocalCinfolP4CommPKS__l436.region_id, i32 3, i8** nonnull %184, i8** nonnull %186, i64* nonnull %188, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.15, i64 0, i64 0), i32 0, i32 0)
          to label %326 unwind label %319, !dbg !11667
@.offload_maptypes.15 = private unnamed_addr constant [3 x i64] [i64 800, i64 35, i64 33]
  arg 1 (0.000000e+00, 0.000000e+00; 1.918144e+03, 2.475302e+02) is   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x01
    local reuse is 2.030760e+01, 3.249216e+02 after adjustment;		    scaled local reuse is 0x144
    reuse distance is 0x07
  arg 2 (0.000000e+00, 0.000000e+00; 2.062750e+02, 1.650201e+02) is   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x04
    local reuse is 1.015380e+01, 1.624608e+02 after adjustment;		    scaled local reuse is 0x0a2
    reuse distance is 0x07
    map type changed: @.offload_maptypes.15.3 = private unnamed_addr constant [3 x i64] [i64 800, i64 7696921137187, i64 7696751280161]
1 warning generated.
In file included from main.cpp:58:
In file included from ./dspl_gpu_kernel.hpp:58:
In file included from ./graph.hpp:56:
./utils.hpp:263:56: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
                drand_[i] = (GraphWeight)((GraphWeight)fabs(rnums_[i]) * mult); // 0-1
                                                       ^
./utils.hpp:263:56: note: use function 'std::abs' instead
                drand_[i] = (GraphWeight)((GraphWeight)fabs(rnums_[i]) * mult); // 0-1
                                                       ^~~~
                                                       std::abs
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
change loop scale from 32.0 to 1.0
  ---- Function Argument Access Frequency CG Analysis ----
On function __omp_offloading_33_128194f__Z21distComputeModularityRK5GraphP4CommPKddi_l396
Round 0
  alias entry   %71 = getelementptr inbounds double, double* %2, i64 %68, !dbg !45
  alias entry   %74 = getelementptr inbounds %struct.Comm, %struct.Comm* %4, i64 %68, i32 1, !dbg !52
Round 1
Round end
change loop scale from 32.0 to 1.0
    load (1.600385e+02) from double* %2
    load (1.600385e+02) from %struct.Comm* %4
    load (6.227106e-02) from double* %1
    store (6.227106e-02) to double* %1
    load (6.227106e-02) from double* %3
    store (6.227106e-02) to double* %3
  Frequency of double* %1
  load: 6.227106e-02		  store: 6.227106e-02 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %2
  load: 1.600385e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %3
  load: 6.227106e-02		  store: 6.227106e-02 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %4
  load: 1.600385e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function __omp_offloading_33_128194f__Z20distUpdateLocalCinfolP4CommPKS__l436
Round 0
  alias entry   %41 = getelementptr inbounds %struct.Comm, %struct.Comm* %2, i64 %40, i32 0, !dbg !45
  alias entry   %43 = getelementptr inbounds %struct.Comm, %struct.Comm* %1, i64 %40, i32 0, !dbg !53
  alias entry   %46 = getelementptr inbounds %struct.Comm, %struct.Comm* %2, i64 %40, i32 1, !dbg !55
  alias entry   %48 = getelementptr inbounds %struct.Comm, %struct.Comm* %1, i64 %40, i32 1, !dbg !57
Round 1
Round end
change loop scale from 32.0 to 1.0
    load (5.076923e+00) from %struct.Comm* %2
    load (5.076923e+00) from %struct.Comm* %1
    store (5.076923e+00) to %struct.Comm* %1
    load (5.076923e+00) from %struct.Comm* %2
    load (5.076923e+00) from %struct.Comm* %1
    store (5.076923e+00) to %struct.Comm* %1
  Frequency of %struct.Comm* %1
  load: 1.015385e+01		  store: 1.015385e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %2
  load: 1.015385e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function __omp_offloading_33_128194f__Z16distCleanCWandCUlPdP4Comm_l455
Round 0
  alias entry   %41 = getelementptr inbounds double, double* %1, i64 %40, !dbg !45
  alias entry   %42 = getelementptr inbounds %struct.Comm, %struct.Comm* %2, i64 %40, i32 1, !dbg !52
  alias entry   %43 = getelementptr inbounds %struct.Comm, %struct.Comm* %2, i64 %40, i32 0, !dbg !57
Round 1
Round end
change loop scale from 32.0 to 1.0
    store (5.076923e+00) to double* %1
    store (5.076923e+00) to %struct.Comm* %2
    store (5.076923e+00) to %struct.Comm* %2
  Frequency of double* %1
  load: 0.000000e+00		  store: 5.076923e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %2
  load: 0.000000e+00		  store: 1.015385e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function __omp_offloading_33_128194f__Z17distLouvainMethodiiRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ddRi_l1368
Round 0
Round end
change loop scale from 32.0 to 1.0
Warning: wrong traversal order, or recursive call
On function _Z27distExecuteLouvainIterationlPKlS0_PK4EdgeS0_PlPKdP4CommS8_dPdi
Round 0
  alias entry   %91 = getelementptr inbounds i64, i64* %2, i64 %90, !dbg !35
  alias entry   %93 = getelementptr inbounds i64, i64* %4, i64 %0, !dbg !38
  alias entry   %96 = getelementptr inbounds i64, i64* %1, i64 %0, !dbg !40
  alias entry   %99 = getelementptr inbounds i64, i64* %1, i64 %98, !dbg !42
  alias entry   %103 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %95, i32 0, !dbg !45
  alias entry   %105 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %95, i32 1, !dbg !49
    base alias entry   %178 = select i1 %119, %struct.Edge** %13, %struct.Edge** %177
  alias entry   %188 = getelementptr inbounds %struct.Edge, %struct.Edge* %3, i64 %187, i32 0, !dbg !69
  alias entry   %189 = getelementptr inbounds %struct.Edge, %struct.Edge* %3, i64 %187, i32 1, !dbg !70
  alias entry   %198 = getelementptr inbounds i64, i64* %4, i64 %197, !dbg !77
    alias entry   %239 = bitcast double* %189 to i64*, !dbg !109
  alias entry   %282 = getelementptr inbounds double, double* %10, i64 %0, !dbg !122
  alias entry   %286 = getelementptr inbounds double, double* %6, i64 %0, !dbg !125
  alias entry   %307 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %306, i32 1, !dbg !136
  alias entry   %309 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %306, i32 0, !dbg !137
  alias entry   %355 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %354, i32 1, !dbg !136
  alias entry   %357 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %354, i32 0, !dbg !137
  alias entry   %403 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %402, i32 1, !dbg !167
    alias entry   %404 = bitcast double* %403 to i64*, !dbg !168
  alias entry   %415 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %402, i32 0, !dbg !170
  alias entry   %417 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %95, i32 1, !dbg !172
    alias entry   %419 = bitcast double* %417 to i64*, !dbg !174
  alias entry   %430 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %95, i32 0, !dbg !176
  alias entry   %434 = getelementptr inbounds i64, i64* %5, i64 %0, !dbg !179
  alias entry   %462 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %461, i32 1, !dbg !136
  alias entry   %464 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %461, i32 0, !dbg !137
Round 1
Round end
change loop scale from 32.0 to 1.0
    load (1.000000e+00) from i64* %2
    load (1.000000e+00) from i64* %4
    load (1.000000e+00) from i64* %1
    load (1.000000e+00) from i64* %1
    load (5.000000e-01) from %struct.Comm* %7
    load (5.000000e-01) from %struct.Comm* %7
    load (8.000000e+00) from %struct.Edge* %3
    load (4.000000e+00) from %struct.Edge* %3
    load (8.000000e+00) from i64* %4
    load (2.500000e+00) from %struct.Edge* %3
    load (2.750000e+00) from %struct.Edge* %3
    load (5.000000e-01) from double* %10
    store (5.000000e-01) to double* %10
    load (5.000000e-01) from double* %6
    load (1.236264e-01) from %struct.Comm* %7
    load (1.236264e-01) from %struct.Comm* %7
    load (5.000000e+00) from %struct.Comm* %7
    load (5.000000e+00) from %struct.Comm* %7
    load (2.500000e-01) from %struct.Comm* %8
    load (2.500000e-01) from double* %6
    load (2.500000e-01) from %struct.Comm* %8
    store (1.000000e+00) to i64* %5
    load (5.000000e+00) from %struct.Comm* %7
    load (5.000000e+00) from %struct.Comm* %7
  Frequency of i64* %1
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Edge* %3
  load: 1.725000e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %4
  load: 9.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 0.000000e+00		  store: 1.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %6
  load: 7.500000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %7
  load: 2.124725e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %8
  load: 5.000000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %10
  load: 5.000000e-01		  store: 5.000000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z24distBuildLocalMapCounterllP7clmap_tRiPdS1_PK4EdgePKllll
Round 0
    base alias entry   %83 = select i1 %16, %struct.Edge** %12, %struct.Edge** %82
  alias entry   %93 = getelementptr inbounds %struct.Edge, %struct.Edge* %6, i64 %92, i32 0, !dbg !38
  alias entry   %94 = getelementptr inbounds %struct.Edge, %struct.Edge* %6, i64 %92, i32 1, !dbg !39
  alias entry   %103 = getelementptr inbounds i64, i64* %7, i64 %102, !dbg !48
  alias entry   %111 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %110, i32 0, !dbg !53
  alias entry   %121 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %120, !dbg !61
  alias entry   %131 = getelementptr inbounds double, double* %4, i64 %125, !dbg !70
  alias entry   %138 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %120, i32 1, !dbg !75
  alias entry   %139 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %120, i32 0, !dbg !76
  alias entry   %146 = getelementptr inbounds double, double* %4, i64 %145, !dbg !83
    alias entry   %147 = bitcast double* %146 to i64*, !dbg !84
    alias entry   %148 = bitcast double* %94 to i64*, !dbg !85
Round 1
Round end
change loop scale from 32.0 to 1.0
    load (5.000000e-01) from %struct.Edge* %6
    load (2.472527e-01) from %struct.Edge* %6
    load (5.000000e-01) from i64* %7
    load (5.000000e-01) from i32* %3
    load (5.076923e+00) from %struct.clmap_t* %2
    load (3.076923e-01) from i32* %5
    load (1.538462e-01) from %struct.Edge* %6
    load (1.538462e-01) from double* %4
    store (1.538462e-01) to double* %4
    store (1.703297e-01) to %struct.clmap_t* %2
    store (1.703297e-01) to %struct.clmap_t* %2
    store (1.703297e-01) to i32* %3
    load (3.406593e-01) from i32* %5
    load (1.703297e-01) from %struct.Edge* %6
    store (1.703297e-01) to double* %4
    store (1.703297e-01) to i32* %5
  Frequency of %struct.clmap_t* %2
  load: 5.076923e+00		  store: 3.406593e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %3
  load: 5.000000e-01		  store: 1.703297e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %4
  load: 1.538462e-01		  store: 3.241758e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %5
  load: 6.483516e-01		  store: 1.703297e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Edge* %6
  load: 1.071429e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %7
  load: 5.000000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z15distGetMaxIndexP7clmap_tRiPdS1_dPK4Commdldllld
Round 0
  alias entry   %22 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 %21
  alias entry   %28 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 0, i32 0, !dbg !36
  alias entry   %33 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %32, i32 1, !dbg !43
  alias entry   %35 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %32, i32 0, !dbg !46
  alias entry   %37 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 0, i32 1, !dbg !48
  alias entry   %41 = getelementptr inbounds double, double* %2, i64 %38, !dbg !52
  alias entry   %60 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 1, !dbg !62
  alias entry   %81 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %80, i32 1, !dbg !43
  alias entry   %83 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %80, i32 0, !dbg !46
  alias entry   %89 = getelementptr inbounds double, double* %2, i64 %86, !dbg !52
  alias entry   %126 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %125, i32 1, !dbg !43
  alias entry   %128 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %125, i32 0, !dbg !46
  alias entry   %134 = getelementptr inbounds double, double* %2, i64 %131, !dbg !52
Round 1
Round end
change loop scale from 32.0 to 1.0
    load (1.000000e+00) from double* %2
    load (1.000000e+00) from i32* %3
    load (1.000000e+00) from i32* %1
    load (5.000000e-01) from %struct.clmap_t* %0
    load (2.500000e-01) from %struct.Comm* %5
    load (2.500000e-01) from %struct.Comm* %5
    load (2.500000e-01) from %struct.clmap_t* %0
    load (1.250000e-01) from double* %2
    load (3.125000e-01) from %struct.Comm* %5
    load (3.125000e-01) from %struct.Comm* %5
    load (1.562500e-01) from double* %2
    load (3.125000e-01) from %struct.Comm* %5
    load (3.125000e-01) from %struct.Comm* %5
    load (1.562500e-01) from double* %2
  Frequency of %struct.clmap_t* %0
  load: 7.500000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %2
  load: 1.437500e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %3
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %5
  load: 1.750000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function __omp_offloading_33_128194f__Z17distLouvainMethodiiRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ddRi_l1368
Round 0
Round end
change loop scale from 32.0 to 1.0
    call (5.076923e+00, 2.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %1
    call (5.076923e+00, 1.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %2
    call (5.076923e+00, 1.725000e+01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using %struct.Edge* %3
    call (5.076923e+00, 9.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %4
    call (5.076923e+00, 0.000000e+00, 1.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %5
    call (5.076923e+00, 7.500000e-01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using double* %6
    call (5.076923e+00, 2.124725e+01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using %struct.Comm* %7
    call (5.076923e+00, 5.000000e-01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using %struct.Comm* %8
    call (5.076923e+00, 5.000000e-01, 5.000000e-01, 0.000000e+00, 0.000000e+00) using double* %10
  Frequency of i64* %1
  load: 1.015385e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %2
  load: 5.076923e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Edge* %3
  load: 8.757692e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %4
  load: 4.569231e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 0.000000e+00		  store: 5.076923e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %6
  load: 3.807692e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %7
  load: 1.078707e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %8
  load: 2.538462e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %10
  load: 2.538462e+00		  store: 2.538462e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  ---- Identify Target Regions ----
  ---- OMP (main.cpp, nvptx64-nvidia-cuda) ----
Info: ignore malloc
Info: ignore malloc
Info: ignore malloc
Round 0
Round end
  ---- Access Frequency Analysis ----
  ---- Optimization Preparation ----
  ---- Data Mapping Optimization ----
1 warning generated.
  ---- Function Argument Access Frequency CG Analysis ----
On function _Z7is_pwr2i
Round 0
Round end
On function _Z8reseederj
Round 0
Round end
On function _ZNSt8seed_seq8generateIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_S8_
Round 0
  alias entry   %18 = getelementptr inbounds %"class.std::seed_seq", %"class.std::seed_seq"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !10369
    alias entry   %19 = bitcast i32** %18 to i64*, !dbg !10369
    alias entry   %21 = bitcast %"class.std::seed_seq"* %0 to i64*, !dbg !10376
Round 1
Round end
    load (6.274510e-01) from %"class.std::seed_seq"* %0
    load (6.274510e-01) from %"class.std::seed_seq"* %0
  Frequency of %"class.std::seed_seq"* %0
  load: 1.254902e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z4lockv
Round 0
Round end
On function _Z6unlockv
Round 0
Round end
On function _Z19distSumVertexDegreeRK5GraphRSt6vectorIdSaIdEERS2_I4CommSaIS6_EE
Round 0
  alias entry   %6 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !10459
Round 1
Round end
    load (1.000000e+00) from %class.Graph* %0
  Frequency of %class.Graph* %0
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.10"* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.15"* %2
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function __clang_call_terminate
Round 0
Round end
  Frequency of i8* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined.
Round 0
  alias entry   %25 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  alias entry   %26 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  alias entry   %27 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %28 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %5, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (6.350000e+00) from %class.Graph* %3
    load (6.350000e+00) from %class.Graph* %3
    load (6.350000e+00) from %"class.std::vector.10"* %4
    load (6.350000e+00) from %"class.std::vector.15"* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %class.Graph* %3
  load: 1.270000e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.10"* %4
  load: 6.350000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.15"* %5
  load: 6.350000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z29distCalcConstantForSecondTermRKSt6vectorIdSaIdEEP19ompi_communicator_t
Round 0
  alias entry   %9 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10283
    alias entry   %10 = bitcast double** %9 to i64*, !dbg !10283
    alias entry   %12 = bitcast %"class.std::vector.10"* %0 to i64*, !dbg !10288
Round 1
Round end
    load (1.000000e+00) from %"class.std::vector.10"* %0
    load (1.000000e+00) from %"class.std::vector.10"* %0
  Frequency of %"class.std::vector.10"* %0
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.ompi_communicator_t* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func
Round 0
    alias entry   %3 = bitcast i8* %1 to double**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to double**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..2
Round 0
  alias entry   %32 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %4, i64 0, i32 0, i32 0, i32 0
    alias entry   %98 = bitcast double* %3 to i64*, !dbg !10325
Round 1
Round end
    load (3.157895e-01) from %"class.std::vector.10"* %4
    load (2.105263e-01) from double* %3
    store (2.105263e-01) to double* %3
    load (2.105263e-01) from double* %3
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %3
  load: 4.210526e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.10"* %4
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z12distInitCommRSt6vectorIlSaIlEES2_l
Round 0
  alias entry   %6 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 1, !dbg !10273
    alias entry   %7 = bitcast i64** %6 to i64*, !dbg !10273
    alias entry   %9 = bitcast %"class.std::vector.0"* %1 to i64*, !dbg !10280
Round 1
Round end
    load (1.000000e+00) from %"class.std::vector.0"* %1
    load (1.000000e+00) from %"class.std::vector.0"* %1
  Frequency of %"class.std::vector.0"* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %1
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..4
Round 0
  alias entry   %29 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
  alias entry   %31 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (3.200000e-01) from %"class.std::vector.0"* %3
    load (3.200000e-01) from %"class.std::vector.0"* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %3
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %5
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z15distInitLouvainRK5GraphRSt6vectorIlSaIlEES5_RS2_IdSaIdEES8_RS2_I4CommSaIS9_EESC_Rdi
Round 0
  alias entry   %16 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 0, !dbg !10485
  alias entry   %20 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !10502
  alias entry   %22 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !10514
  alias entry   %24 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %3, i64 0, i32 0, i32 0, i32 1, !dbg !10532
    alias entry   %25 = bitcast double** %24 to i64*, !dbg !10532
    alias entry   %27 = bitcast %"class.std::vector.10"* %3 to i64*, !dbg !10536
  alias entry   %40 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 1, !dbg !10572
    alias entry   %41 = bitcast i64** %40 to i64*, !dbg !10572
    alias entry   %43 = bitcast %"class.std::vector.0"* %1 to i64*, !dbg !10574
  alias entry   %56 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 1, !dbg !10600
    alias entry   %57 = bitcast i64** %56 to i64*, !dbg !10600
    alias entry   %59 = bitcast %"class.std::vector.0"* %2 to i64*, !dbg !10601
  alias entry   %72 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %4, i64 0, i32 0, i32 0, i32 1, !dbg !10622
    alias entry   %73 = bitcast double** %72 to i64*, !dbg !10622
    alias entry   %75 = bitcast %"class.std::vector.10"* %4 to i64*, !dbg !10623
  alias entry   %88 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %5, i64 0, i32 0, i32 0, i32 1, !dbg !10654
    alias entry   %89 = bitcast %struct.Comm** %88 to i64*, !dbg !10654
    alias entry   %91 = bitcast %"class.std::vector.15"* %5 to i64*, !dbg !10658
  alias entry   %104 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %6, i64 0, i32 0, i32 0, i32 1, !dbg !10685
    alias entry   %105 = bitcast %struct.Comm** %104 to i64*, !dbg !10685
    alias entry   %107 = bitcast %"class.std::vector.15"* %6 to i64*, !dbg !10686
Round 1
Round end
    load (1.000000e+00) from %class.Graph* %0
    load (1.000000e+00) from %class.Graph* %0
    load (1.000000e+00) from %class.Graph* %0
    load (1.000000e+00) from %"class.std::vector.10"* %3
    load (1.000000e+00) from %"class.std::vector.10"* %3
Warning: wrong traversal order, or recursive call
On function _Z15distGetMaxIndexP7clmap_tRiPdS1_dPK4Commdldllld
Round 0
  alias entry   %22 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 %21
  alias entry   %28 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 0, i32 0, !dbg !10320
  alias entry   %33 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %32, i32 1, !dbg !10330
  alias entry   %35 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %32, i32 0, !dbg !10333
  alias entry   %37 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 0, i32 1, !dbg !10335
  alias entry   %41 = getelementptr inbounds double, double* %2, i64 %38, !dbg !10340
  alias entry   %60 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %0, i64 1, !dbg !10352
  alias entry   %80 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %79, i32 1, !dbg !10330
  alias entry   %82 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %79, i32 0, !dbg !10333
  alias entry   %88 = getelementptr inbounds double, double* %2, i64 %85, !dbg !10340
  alias entry   %124 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %123, i32 1, !dbg !10330
  alias entry   %126 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %123, i32 0, !dbg !10333
  alias entry   %132 = getelementptr inbounds double, double* %2, i64 %129, !dbg !10340
Round 1
Round end
    load (1.000000e+00) from double* %2
    load (1.000000e+00) from i32* %3
    load (1.000000e+00) from i32* %1
    load (5.000000e-01) from %struct.clmap_t* %0
    load (2.500000e-01) from %struct.Comm* %5
    load (2.500000e-01) from %struct.Comm* %5
    load (2.500000e-01) from %struct.clmap_t* %0
    load (1.250000e-01) from double* %2
    load (9.984375e+00) from %struct.Comm* %5
    load (9.984375e+00) from %struct.Comm* %5
    load (4.984375e+00) from double* %2
    load (9.984375e+00) from %struct.Comm* %5
    load (9.984375e+00) from %struct.Comm* %5
    load (4.984375e+00) from double* %2
  Frequency of %struct.clmap_t* %0
  load: 7.500000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %2
  load: 1.109375e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %3
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %5
  load: 4.043750e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z24distBuildLocalMapCounterllP7clmap_tRiPdS1_PK4EdgePKllll
Round 0
  alias entry   %20 = getelementptr inbounds %struct.Edge, %struct.Edge* %6, i64 %19, i32 0, !dbg !10308
  alias entry   %21 = getelementptr inbounds %struct.Edge, %struct.Edge* %6, i64 %19, i32 1, !dbg !10310
  alias entry   %30 = getelementptr inbounds i64, i64* %7, i64 %29, !dbg !10326
  alias entry   %37 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %35, i32 0, !dbg !10337
  alias entry   %45 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %34, !dbg !10348
  alias entry   %55 = getelementptr inbounds double, double* %4, i64 %49, !dbg !10358
  alias entry   %61 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %34, i32 0, !dbg !10364
  alias entry   %62 = getelementptr inbounds %struct.clmap_t, %struct.clmap_t* %2, i64 %34, i32 1, !dbg !10367
    alias entry   %68 = bitcast double* %21 to i64*, !dbg !10375
  alias entry   %71 = getelementptr inbounds double, double* %4, i64 %70, !dbg !10377
    alias entry   %72 = bitcast double* %71 to i64*, !dbg !10378
Round 1
Round end
    load (1.593750e+01) from %struct.Edge* %6
    load (7.937500e+00) from %struct.Edge* %6
    load (1.593750e+01) from i64* %7
    load (1.593750e+01) from i32* %3
    load (1.625000e+02) from %struct.clmap_t* %2
    load (9.937500e+00) from i32* %5
    load (4.937500e+00) from %struct.Edge* %6
    load (4.937500e+00) from double* %4
    store (4.937500e+00) to double* %4
    store (5.437500e+00) to %struct.clmap_t* %2
    store (5.437500e+00) to %struct.clmap_t* %2
    store (5.437500e+00) to i32* %3
    load (1.093750e+01) from i32* %5
    load (5.437500e+00) from %struct.Edge* %6
    store (5.437500e+00) to double* %4
    store (5.437500e+00) to i32* %5
  Frequency of %struct.clmap_t* %2
  load: 1.625000e+02		  store: 1.087500e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %3
  load: 1.593750e+01		  store: 5.437500e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %4
  load: 4.937500e+00		  store: 1.037500e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %5
  load: 2.087500e+01		  store: 5.437500e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Edge* %6
  load: 3.425000e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %7
  load: 1.593750e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z27distExecuteLouvainIterationlPKlS0_PK4EdgeS0_PlPKdP4CommS8_dPdi
Round 0
  alias entry   %18 = getelementptr inbounds i64, i64* %2, i64 %17, !dbg !10316
  alias entry   %20 = getelementptr inbounds i64, i64* %4, i64 %0, !dbg !10322
  alias entry   %23 = getelementptr inbounds i64, i64* %1, i64 %0, !dbg !10329
  alias entry   %26 = getelementptr inbounds i64, i64* %1, i64 %25, !dbg !10332
  alias entry   %30 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %22, i32 0, !dbg !10337
  alias entry   %32 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %22, i32 1, !dbg !10341
  alias entry   %47 = getelementptr inbounds %struct.Edge, %struct.Edge* %3, i64 %46, i32 0, !dbg !10401
  alias entry   %48 = getelementptr inbounds %struct.Edge, %struct.Edge* %3, i64 %46, i32 1, !dbg !10403
  alias entry   %57 = getelementptr inbounds i64, i64* %4, i64 %56, !dbg !10414
    alias entry   %93 = bitcast double* %48 to i64*, !dbg !10457
  alias entry   %116 = getelementptr inbounds double, double* %10, i64 %0, !dbg !10470
  alias entry   %120 = getelementptr inbounds double, double* %6, i64 %0, !dbg !10473
  alias entry   %137 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %136, i32 1, !dbg !10533
  alias entry   %139 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %136, i32 0, !dbg !10534
  alias entry   %183 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %182, i32 1, !dbg !10533
  alias entry   %185 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %182, i32 0, !dbg !10534
  alias entry   %230 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %229, i32 1, !dbg !10572
    alias entry   %231 = bitcast double* %230 to i64*, !dbg !10573
  alias entry   %242 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %229, i32 0, !dbg !10575
  alias entry   %244 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %22, i32 1, !dbg !10578
    alias entry   %246 = bitcast double* %244 to i64*, !dbg !10581
  alias entry   %257 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %22, i32 0, !dbg !10583
  alias entry   %261 = getelementptr inbounds i64, i64* %5, i64 %0, !dbg !10587
  alias entry   %264 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %263, i32 1, !dbg !10533
  alias entry   %266 = getelementptr inbounds %struct.Comm, %struct.Comm* %7, i64 %263, i32 0, !dbg !10534
Round 1
Round end
    load (1.000000e+00) from i64* %2
    load (1.000000e+00) from i64* %4
    load (1.000000e+00) from i64* %1
    load (1.000000e+00) from i64* %1
    load (5.000000e-01) from %struct.Comm* %7
    load (5.000000e-01) from %struct.Comm* %7
    load (7.992188e+00) from %struct.Edge* %3
    load (3.992188e+00) from %struct.Edge* %3
    load (7.992188e+00) from i64* %4
    load (2.492188e+00) from %struct.Edge* %3
    load (2.742188e+00) from %struct.Edge* %3
    load (5.000000e-01) from double* %10
    store (5.000000e-01) to double* %10
    load (5.000000e-01) from double* %6
    load (1.250000e-01) from %struct.Comm* %7
    load (1.250000e-01) from %struct.Comm* %7
    load (4.992188e+00) from %struct.Comm* %7
    load (4.992188e+00) from %struct.Comm* %7
    load (2.500000e-01) from %struct.Comm* %8
    load (2.500000e-01) from double* %6
    load (2.500000e-01) from %struct.Comm* %8
    store (1.000000e+00) to i64* %5
    load (4.992188e+00) from %struct.Comm* %7
    load (4.992188e+00) from %struct.Comm* %7
  Frequency of i64* %1
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Edge* %3
  load: 1.721875e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %4
  load: 8.992188e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 0.000000e+00		  store: 1.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %6
  load: 7.500000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %7
  load: 2.121875e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %8
  load: 5.000000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %10
  load: 5.000000e-01		  store: 5.000000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z21distComputeModularityRK5GraphP4CommPKddi
Round 0
  alias entry   %14 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !10288
  alias entry   %16 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !10304
    base alias entry   %35 = bitcast i8** %34 to double**, !dbg !10317
    base alias entry   %37 = bitcast i8** %36 to double**, !dbg !10317
    base alias entry   %45 = bitcast i8** %44 to %struct.Comm**, !dbg !10317
    base alias entry   %47 = bitcast i8** %46 to %struct.Comm**, !dbg !10317
Round 1
  base alias entry   %34 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 2, !dbg !10317
  base alias entry   %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 2, !dbg !10317
  base alias entry   %44 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 4, !dbg !10317
  base alias entry   %46 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 4, !dbg !10317
Round 2
  base alias offset entry (2)   %11 = alloca [5 x i8*], align 8
  base alias offset entry (2)   %12 = alloca [5 x i8*], align 8
  base alias offset entry (-1)   %39 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 3, !dbg !10317
  base alias offset entry (-1)   %41 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 3, !dbg !10317
  base alias offset entry (4)   %11 = alloca [5 x i8*], align 8
  base alias offset entry (-2)   %44 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 4, !dbg !10317
  base alias offset entry (4)   %12 = alloca [5 x i8*], align 8
  base alias offset entry (-2)   %46 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 4, !dbg !10317
Round 3
  base alias offset entry (4)   %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0, !dbg !10317
  base alias offset entry (2)   %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0, !dbg !10317
  base alias offset entry (4)   %26 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0, !dbg !10317
  base alias offset entry (2)   %26 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0, !dbg !10317
  base alias offset entry (3)   %29 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 1, !dbg !10317
  base alias offset entry (1)   %29 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 1, !dbg !10317
  base alias offset entry (3)   %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 1, !dbg !10317
  base alias offset entry (1)   %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 1, !dbg !10317
  base alias offset entry (2)   %34 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 2, !dbg !10317
  base alias offset entry (2)   %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 2, !dbg !10317
  base alias offset entry (1)   %39 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 3, !dbg !10317
  base alias offset entry (1)   %41 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 3, !dbg !10317
Round 4
Round end
    load (1.000000e+00) from %class.Graph* %0
    load (1.000000e+00) from %class.Graph* %0
  Frequency of %class.Graph* %0
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %2
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.7
Round 0
    alias entry   %3 = bitcast i8* %1 to double**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to double**, !dbg !10261
  alias entry   %7 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !10261
    alias entry   %8 = bitcast i8* %7 to double**, !dbg !10261
  alias entry   %10 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !10261
    alias entry   %11 = bitcast i8* %10 to double**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..8
Round 0
  alias entry   %39 = getelementptr inbounds double, double* %6, i64 %38, !dbg !10318
  alias entry   %42 = getelementptr inbounds %struct.Comm, %struct.Comm* %8, i64 %38, i32 1, !dbg !10321
    alias entry   %62 = bitcast double* %5 to i64*, !dbg !10329
    alias entry   %74 = bitcast double* %7 to i64*, !dbg !10329
Round 1
Round end
    load (1.010526e+01) from double* %6
    load (1.010526e+01) from %struct.Comm* %8
    load (2.105263e-01) from double* %5
    store (2.105263e-01) to double* %5
    load (2.105263e-01) from double* %7
    store (2.105263e-01) to double* %7
    load (2.105263e-01) from double* %5
    load (2.105263e-01) from double* %7
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %5
  load: 4.210526e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %6
  load: 1.010526e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %7
  load: 4.210526e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %8
  load: 1.010526e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.9
Round 0
    alias entry   %3 = bitcast i8* %1 to double**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to double**, !dbg !10261
  alias entry   %7 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !10261
    alias entry   %8 = bitcast i8* %7 to double**, !dbg !10261
  alias entry   %10 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !10261
    alias entry   %11 = bitcast i8* %10 to double**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..10
Round 0
    alias entry   %65 = bitcast double* %3 to i64*, !dbg !10310
    alias entry   %77 = bitcast double* %5 to i64*, !dbg !10310
Round 1
Round end
    load (2.916667e-01) from double* %3
    store (2.916667e-01) to double* %3
    load (2.916667e-01) from double* %5
    store (2.916667e-01) to double* %5
    load (3.333333e-01) from double* %3
    load (3.333333e-01) from double* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %3
  load: 6.250000e-01		  store: 2.916667e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %4
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %5
  load: 6.250000e-01		  store: 2.916667e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %6
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z20distUpdateLocalCinfolP4CommPKS_
Round 0
    base alias entry   %15 = bitcast i8** %14 to %struct.Comm**, !dbg !10269
    base alias entry   %17 = bitcast i8** %16 to %struct.Comm**, !dbg !10269
    base alias entry   %20 = bitcast i8** %19 to %struct.Comm**, !dbg !10269
    base alias entry   %22 = bitcast i8** %21 to %struct.Comm**, !dbg !10269
Round 1
  base alias entry   %14 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 1, !dbg !10269
  base alias entry   %16 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 1, !dbg !10269
  base alias entry   %19 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 2, !dbg !10269
  base alias entry   %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 2, !dbg !10269
Round 2
  base alias offset entry (1)   %5 = alloca [3 x i8*], align 8
  base alias offset entry (1)   %6 = alloca [3 x i8*], align 8
  base alias offset entry (2)   %5 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %19 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 2, !dbg !10269
  base alias offset entry (2)   %6 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 2, !dbg !10269
Round 3
  base alias offset entry (1)   %9 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 0, !dbg !10269
  base alias offset entry (2)   %9 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 0, !dbg !10269
  base alias offset entry (1)   %11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 0, !dbg !10269
  base alias offset entry (2)   %11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 0, !dbg !10269
  base alias offset entry (1)   %14 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 1, !dbg !10269
  base alias offset entry (1)   %16 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 1, !dbg !10269
Round 4
Round end
  Frequency of %struct.Comm* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %2
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..13
Round 0
  alias entry   %33 = getelementptr %struct.Comm, %struct.Comm* %5, i64 %26, !dbg !10304
  alias entry   %34 = getelementptr %struct.Comm, %struct.Comm* %5, i64 %25, i32 1, !dbg !10304
  alias entry   %35 = getelementptr %struct.Comm, %struct.Comm* %6, i64 %26, !dbg !10304
  alias entry   %36 = getelementptr %struct.Comm, %struct.Comm* %6, i64 %25, i32 1, !dbg !10304
  alias entry   %37 = getelementptr %struct.Comm, %struct.Comm* %5, i64 %26, i32 1, !dbg !10304
  alias entry   %38 = getelementptr %struct.Comm, %struct.Comm* %5, i64 %29, !dbg !10304
  alias entry   %39 = getelementptr %struct.Comm, %struct.Comm* %6, i64 %26, i32 1, !dbg !10304
  alias entry   %40 = getelementptr %struct.Comm, %struct.Comm* %6, i64 %29, !dbg !10304
    alias entry   %41 = bitcast double* %36 to %struct.Comm*, !dbg !10304
    alias entry   %43 = bitcast double* %34 to %struct.Comm*, !dbg !10304
    alias entry   %46 = bitcast %struct.Comm* %40 to double*, !dbg !10304
    alias entry   %48 = bitcast %struct.Comm* %38 to double*, !dbg !10304
  alias entry   %63 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %57, i32 0, !dbg !10304
  alias entry   %64 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %58, i32 0, !dbg !10304
  alias entry   %65 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %59, i32 0, !dbg !10304
  alias entry   %66 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %60, i32 0, !dbg !10304
  alias entry   %67 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %61, i32 0, !dbg !10304
  alias entry   %68 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %62, i32 0, !dbg !10304
    alias entry   %69 = bitcast i64* %63 to <4 x i64>*, !dbg !10304
    alias entry   %70 = bitcast i64* %64 to <4 x i64>*, !dbg !10304
    alias entry   %71 = bitcast i64* %65 to <4 x i64>*, !dbg !10304
    alias entry   %72 = bitcast i64* %66 to <4 x i64>*, !dbg !10304
    alias entry   %73 = bitcast i64* %67 to <4 x i64>*, !dbg !10304
    alias entry   %74 = bitcast i64* %68 to <4 x i64>*, !dbg !10304
  alias entry   %93 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %57, i32 0, !dbg !10307
  alias entry   %94 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %58, i32 0, !dbg !10307
  alias entry   %95 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %59, i32 0, !dbg !10307
  alias entry   %96 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %60, i32 0, !dbg !10307
  alias entry   %97 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %61, i32 0, !dbg !10307
  alias entry   %98 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %62, i32 0, !dbg !10307
    alias entry   %99 = bitcast i64* %93 to <4 x i64>*, !dbg !10307
    alias entry   %100 = bitcast i64* %94 to <4 x i64>*, !dbg !10307
    alias entry   %101 = bitcast i64* %95 to <4 x i64>*, !dbg !10307
    alias entry   %102 = bitcast i64* %96 to <4 x i64>*, !dbg !10307
    alias entry   %103 = bitcast i64* %97 to <4 x i64>*, !dbg !10307
    alias entry   %104 = bitcast i64* %98 to <4 x i64>*, !dbg !10307
  alias entry   %135 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %57, i32 1, !dbg !10309
  alias entry   %136 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %58, i32 1, !dbg !10309
  alias entry   %137 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %59, i32 1, !dbg !10309
  alias entry   %138 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %60, i32 1, !dbg !10309
  alias entry   %139 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %61, i32 1, !dbg !10309
  alias entry   %140 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %62, i32 1, !dbg !10309
  alias entry   %147 = getelementptr inbounds double, double* %135, i64 -1, !dbg !10309
    alias entry   %148 = bitcast double* %147 to <4 x double>*, !dbg !10309
  alias entry   %149 = getelementptr inbounds double, double* %136, i64 -1, !dbg !10309
    alias entry   %150 = bitcast double* %149 to <4 x double>*, !dbg !10309
  alias entry   %151 = getelementptr inbounds double, double* %137, i64 -1, !dbg !10309
    alias entry   %152 = bitcast double* %151 to <4 x double>*, !dbg !10309
  alias entry   %153 = getelementptr inbounds double, double* %138, i64 -1, !dbg !10309
    alias entry   %154 = bitcast double* %153 to <4 x double>*, !dbg !10309
  alias entry   %155 = getelementptr inbounds double, double* %139, i64 -1, !dbg !10309
    alias entry   %156 = bitcast double* %155 to <4 x double>*, !dbg !10309
  alias entry   %157 = getelementptr inbounds double, double* %140, i64 -1, !dbg !10309
    alias entry   %158 = bitcast double* %157 to <4 x double>*, !dbg !10309
  alias entry   %178 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %177, i32 0, !dbg !10304
  alias entry   %180 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %177, i32 0, !dbg !10307
  alias entry   %183 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %177, i32 1, !dbg !10318
  alias entry   %185 = getelementptr inbounds %struct.Comm, %struct.Comm* %5, i64 %177, i32 1, !dbg !10309
Round 1
Round end
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %6
    load (2.500000e+00) from %struct.Comm* %5
    load (2.500000e+00) from %struct.Comm* %5
    load (2.500000e+00) from %struct.Comm* %5
    load (2.500000e+00) from %struct.Comm* %5
    load (2.500000e+00) from %struct.Comm* %5
    load (2.500000e+00) from %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    store (2.500000e+00) to %struct.Comm* %5
    load (9.088235e+00) from %struct.Comm* %6
    load (9.088235e+00) from %struct.Comm* %5
    store (9.088235e+00) to %struct.Comm* %5
    load (9.088235e+00) from %struct.Comm* %6
    load (9.088235e+00) from %struct.Comm* %5
    store (9.088235e+00) to %struct.Comm* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %5
  load: 3.317647e+01		  store: 3.317647e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %6
  load: 3.317647e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..14
Round 0
Round end
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %3
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %4
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z16distCleanCWandCUlPdP4Comm
Round 0
    base alias entry   %17 = bitcast i8** %16 to double**, !dbg !10269
    base alias entry   %19 = bitcast i8** %18 to double**, !dbg !10269
    base alias entry   %22 = bitcast i8** %21 to %struct.Comm**, !dbg !10269
    base alias entry   %24 = bitcast i8** %23 to %struct.Comm**, !dbg !10269
Round 1
  base alias entry   %16 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 1, !dbg !10269
  base alias entry   %18 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 1, !dbg !10269
  base alias entry   %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 2, !dbg !10269
  base alias entry   %23 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 2, !dbg !10269
Round 2
  base alias offset entry (1)   %5 = alloca [3 x i8*], align 8
  base alias offset entry (1)   %6 = alloca [3 x i8*], align 8
  base alias offset entry (2)   %5 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 2, !dbg !10269
  base alias offset entry (2)   %6 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %23 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 2, !dbg !10269
Round 3
  base alias offset entry (1)   %11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 0, !dbg !10269
  base alias offset entry (2)   %11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 0, !dbg !10269
  base alias offset entry (1)   %13 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 0, !dbg !10269
  base alias offset entry (2)   %13 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 0, !dbg !10269
  base alias offset entry (1)   %16 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 1, !dbg !10269
  base alias offset entry (1)   %18 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 1, !dbg !10269
Round 4
Round end
  Frequency of double* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %2
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..18
Round 0
  alias entry   %29 = getelementptr inbounds double, double* %5, i64 %28, !dbg !10304
  alias entry   %30 = getelementptr inbounds %struct.Comm, %struct.Comm* %6, i64 %28, i32 0, !dbg !10309
    alias entry   %33 = bitcast i64* %30 to i8*, !dbg !10299
Round 1
Round end
    store (1.058333e+01) to double* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %5
  load: 0.000000e+00		  store: 1.058333e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %6
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..19
Round 0
Round end
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %3
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %4
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z21fillRemoteCommunitiesRK5GraphiiRKmS3_RKSt6vectorIlSaIlEES8_S8_S8_S8_RKS4_I4CommSaIS9_EERSt3mapIlS9_St4lessIlESaISt4pairIKlS9_EEERSt13unordered_mapIllSt4hashIlESt8equal_toIlESaISH_ISI_lEEESM_
Round 0
  alias entry   %126 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 0, !dbg !11433
  alias entry   %130 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !11449
  alias entry   %132 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !11460
  alias entry   %190 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 0
  alias entry   %197 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 0
  alias entry   %299 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %12, i64 0, i32 0, i32 2, i32 0, !dbg !11792
    alias entry   %300 = bitcast %"struct.std::__detail::_Hash_node_base"* %299 to %"struct.std::__detail::_Hash_node"**, !dbg !11793
    alias entry   %308 = bitcast %"class.std::unordered_map"* %12 to i8**, !dbg !11836
  alias entry   %310 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %12, i64 0, i32 0, i32 1, !dbg !11842
    alias entry   %313 = bitcast %"struct.std::__detail::_Hash_node_base"* %299 to i8*, !dbg !11846
  alias entry   %316 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %8, i64 0, i32 0, i32 0, i32 0
  alias entry   %317 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %12, i64 0, i32 0
  alias entry   %318 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %12, i64 0, i32 0, i32 0
  alias entry   %319 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6
    alias entry   %320 = bitcast %"class.std::vector.0"* %319 to i64*
  alias entry   %321 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 1
    alias entry   %322 = bitcast i64** %321 to i64*
  alias entry   %325 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %9, i64 0, i32 0, i32 0, i32 0
  alias entry   %326 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6
    alias entry   %327 = bitcast %"class.std::vector.0"* %326 to i64*
  alias entry   %328 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 1
    alias entry   %329 = bitcast i64** %328 to i64*
  alias entry   %800 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, !dbg !13393
  alias entry   %801 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, i32 1, !dbg !13405
    alias entry   %802 = bitcast %"struct.std::_Rb_tree_node_base"** %801 to %"struct.std::_Rb_tree_node"**, !dbg !13405
  alias entry   %808 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, !dbg !13419
  alias entry   %809 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, i32 2, !dbg !13425
    base alias entry   %809 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, i32 2, !dbg !13425
  alias entry   %810 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, i32 3, !dbg !13435
    base alias entry   %810 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 1, i32 3, !dbg !13435
  alias entry   %811 = getelementptr inbounds %"class.std::map", %"class.std::map"* %11, i64 0, i32 0, i32 0, i32 2, !dbg !13437
  alias entry   %812 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, !dbg !13442
  alias entry   %813 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, i32 1, !dbg !13447
    alias entry   %814 = bitcast %"struct.std::_Rb_tree_node_base"** %813 to %"struct.std::_Rb_tree_node"**, !dbg !13447
  alias entry   %820 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, !dbg !13452
  alias entry   %821 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, i32 2, !dbg !13455
    base alias entry   %821 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, i32 2, !dbg !13455
  alias entry   %822 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, i32 3, !dbg !13462
    base alias entry   %822 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 1, i32 3, !dbg !13462
  alias entry   %823 = getelementptr inbounds %"class.std::map", %"class.std::map"* %13, i64 0, i32 0, i32 0, i32 2, !dbg !13464
    alias entry   %828 = bitcast %"struct.std::_Rb_tree_node_base"** %801 to i64*
    alias entry   %830 = bitcast %"struct.std::_Rb_tree_node_base"* %808 to %"struct.std::_Rb_tree_node"*
    alias entry   %832 = bitcast %"struct.std::_Rb_tree_node_base"** %813 to i64*
    alias entry   %834 = bitcast %"struct.std::_Rb_tree_node_base"* %820 to %"struct.std::_Rb_tree_node"*
    alias entry   %943 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %809, align 8, !dbg !14017, !tbaa !14018
    alias entry   %998 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %821, align 8, !dbg !14306, !tbaa !14018
Round 1
Round end
    load (1.000000e+00) from i64* %4
    load (9.999994e-01) from i64* %3
    load (9.999963e-01) from %class.Graph* %0
    load (9.999963e-01) from %class.Graph* %0
    load (9.999963e-01) from %class.Graph* %0
    load (9.999803e+00) from %"class.std::vector.0"* %6
    load (1.999960e+01) from %"class.std::vector.0"* %6
    load (6.249782e+00) from %"class.std::vector.0"* %5
    load (1.249956e+01) from %"class.std::vector.0"* %5
    load (9.999777e-01) from %"class.std::unordered_map"* %12
    load (9.999777e-01) from %"class.std::unordered_map"* %12
    load (9.999777e-01) from %"class.std::unordered_map"* %12
    load (1.999809e+01) from %"class.std::vector.0"* %8
    load (1.999807e+01) from %"class.std::unordered_map"* %12
    load (1.999807e+01) from %"class.std::unordered_map"* %12
Warning: wrong traversal order, or recursive call
On function .omp_outlined..22
Round 0
  alias entry   %31 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
  alias entry   %33 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %35 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i64* %2
    load (3.200000e-01) from %"class.std::vector.0"* %3
    load (3.200000e-01) from %"class.std::vector.0"* %4
    load (3.200000e-01) from %"class.std::vector.0"* %6
    load (1.020000e+01) from i64* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %3
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %4
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 1.020000e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %6
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.24
Round 0
    alias entry   %3 = bitcast i8* %1 to i64**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to i64**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..25
Round 0
  alias entry   %33 = getelementptr inbounds %"class.std::vector.29", %"class.std::vector.29"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %35 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i32* %2
    load (3.157895e-01) from %"class.std::vector.29"* %4
    load (3.157895e-01) from %"class.std::vector.0"* %3
    load (2.105263e-01) from i64* %5
    store (2.105263e-01) to i64* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %3
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.29"* %4
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 2.105263e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.27
Round 0
    alias entry   %3 = bitcast i8* %1 to i64**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to i64**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..28
Round 0
  alias entry   %32 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i32* %2
    load (3.157895e-01) from %"class.std::vector.0"* %4
    load (2.105263e-01) from i64* %3
    store (2.105263e-01) to i64* %3
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %3
  load: 2.105263e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %4
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..30
Round 0
  alias entry   %20 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, !dbg !10503
  alias entry   %34 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %35 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %7, i64 0, i32 0, i32 0, i32 0
  alias entry   %36 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %6, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from %"class.std::vector.0"* %2
    load (2.047500e+02) from %"class.std::vector.0"* %4
    load (2.047500e+02) from %"class.std::vector.15"* %7
    load (2.047500e+02) from %"class.std::vector.52"* %6
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %4
  load: 2.047500e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.52"* %6
  load: 2.047500e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.15"* %7
  load: 2.047500e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z22createCommunityMPITypev
Round 0
Round end
On function _Z23destroyCommunityMPITypev
Round 0
Round end
On function _Z23updateRemoteCommunitiesRK5GraphRSt6vectorI4CommSaIS3_EERKSt3mapIlS3_St4lessIlESaISt4pairIKlS3_EEEii
Round 0
  alias entry   %19 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 0, !dbg !10869
  alias entry   %46 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !11050
  alias entry   %48 = getelementptr inbounds %"class.std::map", %"class.std::map"* %2, i64 0, i32 0, i32 0, i32 1, i32 2, !dbg !11068
    alias entry   %49 = bitcast %"struct.std::_Rb_tree_node_base"** %48 to i64*, !dbg !11068
  alias entry   %51 = getelementptr inbounds %"class.std::map", %"class.std::map"* %2, i64 0, i32 0, i32 0, i32 1, !dbg !11085
  alias entry   %55 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6
    alias entry   %56 = bitcast %"class.std::vector.0"* %55 to i64*
  alias entry   %57 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 1
    alias entry   %58 = bitcast i64** %57 to i64*
Round 1
Round end
    load (1.000000e+00) from %class.Graph* %0
    load (9.999994e-01) from %class.Graph* %0
    load (9.999994e-01) from %"class.std::map"* %2
    load (1.999985e+01) from %class.Graph* %0
    load (1.999985e+01) from %class.Graph* %0
  Frequency of %class.Graph* %0
  load: 4.199970e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.15"* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::map"* %2
  load: 9.999994e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..32
Round 0
  alias entry   %28 = getelementptr inbounds %"class.std::vector.66", %"class.std::vector.66"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %30 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i32* %2
    load (3.137255e-01) from %"class.std::vector.66"* %4
    load (3.137255e-01) from %"class.std::vector.0"* %3
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %3
  load: 3.137255e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.66"* %4
  load: 3.137255e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.34
Round 0
    alias entry   %3 = bitcast i8* %1 to i64**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to i64**, !dbg !10261
  alias entry   %7 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !10261
    alias entry   %8 = bitcast i8* %7 to i64**, !dbg !10261
  alias entry   %10 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !10261
    alias entry   %11 = bitcast i8* %10 to i64**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 2.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..35
Round 0
  alias entry   %36 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0
  alias entry   %38 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i32* %2
    load (3.157895e-01) from %"class.std::vector.0"* %4
    load (3.157895e-01) from %"class.std::vector.0"* %6
    load (2.105263e-01) from i64* %3
    store (2.105263e-01) to i64* %3
    load (2.105263e-01) from i64* %5
    store (2.105263e-01) to i64* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %3
  load: 2.105263e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %4
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 2.105263e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %6
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..37
Round 0
  alias entry   %26 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %3, i64 0, i32 0, i32 0, i32 0
  alias entry   %27 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %4, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i64* %2
    load (6.350000e+00) from %"class.std::vector.52"* %3
    load (6.350000e+00) from %"class.std::vector.15"* %4
    load (6.350000e+00) from i64* %5
    load (2.047500e+02) from i64* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.52"* %3
  load: 6.350000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.15"* %4
  load: 6.350000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 2.111000e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z18exchangeVertexReqsRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ii
Round 0
  alias entry   %15 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !10306
  alias entry   %17 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !10319
  alias entry   %51 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 1, !dbg !10485
    alias entry   %52 = bitcast i64** %51 to i64*, !dbg !10485
    alias entry   %54 = bitcast %"class.std::vector.0"* %4 to i64*, !dbg !10489
  alias entry   %71 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 1, !dbg !10517
    alias entry   %72 = bitcast i64** %71 to i64*, !dbg !10517
    alias entry   %74 = bitcast %"class.std::vector.0"* %3 to i64*, !dbg !10518
    alias entry   %91 = bitcast %"class.std::vector.0"* %3 to i8**
  alias entry   %94 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
  alias entry   %98 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0, !dbg !10598
    alias entry   %99 = bitcast %"class.std::vector.0"* %4 to i8**, !dbg !10598
  alias entry   %128 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 1, !dbg !10673
    alias entry   %129 = bitcast i64** %128 to i64*, !dbg !10673
    alias entry   %131 = bitcast %"class.std::vector.0"* %5 to i64*, !dbg !10674
  alias entry   %147 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 1, !dbg !10696
    alias entry   %148 = bitcast i64** %147 to i64*, !dbg !10696
    alias entry   %150 = bitcast %"class.std::vector.0"* %6 to i64*, !dbg !10697
  alias entry   %190 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 0
  alias entry   %249 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 0
  alias entry   %306 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 2, !dbg !11244
  alias entry   %307 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %6, i64 0, i32 0, i32 0, i32 2, !dbg !11245
    alias entry   %308 = bitcast i64** %306 to i64*, !dbg !11249
    alias entry   %310 = bitcast i64** %307 to i64*, !dbg !11250
  alias entry   %316 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 2, !dbg !11279
  alias entry   %317 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 2, !dbg !11280
    alias entry   %318 = bitcast i64** %316 to i64*, !dbg !11284
    alias entry   %320 = bitcast i64** %317 to i64*, !dbg !11285
Round 1
Round end
    load (1.000000e+00) from %class.Graph* %0
    load (1.000000e+00) from %class.Graph* %0
    load (9.999984e-01) from %"class.std::vector.0"* %4
    load (9.999984e-01) from %"class.std::vector.0"* %4
Warning: wrong traversal order, or recursive call
On function .omp_outlined..39
Round 0
  alias entry   %26 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  alias entry   %27 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  alias entry   %28 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 6
    alias entry   %29 = bitcast %"class.std::vector.0"* %28 to i64*
  alias entry   %30 = getelementptr inbounds %class.Graph, %class.Graph* %3, i64 0, i32 6, i32 0, i32 0, i32 1
    alias entry   %31 = bitcast i64** %30 to i64*
  alias entry   %32 = getelementptr inbounds %"class.std::vector.29", %"class.std::vector.29"* %5, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.988141e+02) from %class.Graph* %3
    load (3.180957e+03) from %class.Graph* %3
    load (3.180957e+03) from %class.Graph* %3
    load (3.180957e+03) from %class.Graph* %3
    load (1.590478e+03) from %"class.std::vector.29"* %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %class.Graph* %3
  load: 9.741684e+03		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.29"* %5
  load: 1.590478e+03		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp.reduction.reduction_func.41
Round 0
    alias entry   %3 = bitcast i8* %1 to i64**, !dbg !10261
    alias entry   %5 = bitcast i8* %0 to i64**, !dbg !10261
Round 1
Round end
    load (1.000000e+00) from i8* %1
    load (1.000000e+00) from i8* %0
  Frequency of i8* %0
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i8* %1
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..42
Round 0
  alias entry   %32 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (1.000000e+00) from i32* %2
    load (3.157895e-01) from %"class.std::vector.0"* %4
    load (2.105263e-01) from i64* %3
    store (2.105263e-01) to i64* %3
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %2
  load: 1.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %3
  load: 2.105263e-01		  store: 2.105263e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %4
  load: 3.157895e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _Z17distLouvainMethodiiRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ddRi
Round 0
  alias entry   %68 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 2, !dbg !11180
  alias entry   %85 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !11380
    alias entry   %86 = bitcast i64** %85 to i64*, !dbg !11380
    alias entry   %88 = bitcast %class.Graph* %2 to i64*, !dbg !11384
    alias entry   %93 = bitcast %class.Graph* %2 to i8**, !dbg !11392
  alias entry   %98 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 6, !dbg !11399
  alias entry   %99 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 6, i32 0, i32 0, i32 1, !dbg !11402
    alias entry   %100 = bitcast i64** %99 to i64*, !dbg !11402
    alias entry   %102 = bitcast %"class.std::vector.0"* %98 to i64*, !dbg !11403
    alias entry   %107 = bitcast %"class.std::vector.0"* %98 to i8**, !dbg !11410
  alias entry   %112 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 1, !dbg !11417
  alias entry   %113 = getelementptr inbounds %class.Graph, %class.Graph* %2, i64 0, i32 1, i32 0, i32 0, i32 1, !dbg !11424
    alias entry   %114 = bitcast %struct.Edge** %113 to i64*, !dbg !11424
    alias entry   %116 = bitcast %"class.std::vector.5"* %112 to i64*, !dbg !11428
    alias entry   %121 = bitcast %"class.std::vector.5"* %112 to i8**, !dbg !11440
Round 1
Round end
    load (9.999981e-01) from %class.Graph* %2
Warning: wrong traversal order, or recursive call
On function .omp_outlined..45
Round 0
Round end
    call (1.058333e+01, 2.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %5
    call (1.058333e+01, 1.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %6
    call (1.058333e+01, 1.721875e+01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using %struct.Edge* %7
    call (1.058333e+01, 8.992188e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %8
    call (1.058333e+01, 0.000000e+00, 1.000000e+00, 0.000000e+00, 0.000000e+00) using i64* %9
    call (1.058333e+01, 7.500000e-01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using double* %10
    call (1.058333e+01, 2.121875e+01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using %struct.Comm* %11
    call (1.058333e+01, 5.000000e-01, 0.000000e+00, 0.000000e+00, 0.000000e+00) using %struct.Comm* %12
    call (1.058333e+01, 5.000000e-01, 5.000000e-01, 0.000000e+00, 0.000000e+00) using double* %14
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %5
  load: 2.116667e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %6
  load: 1.058333e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Edge* %7
  load: 1.822318e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %8
  load: 9.516732e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %9
  load: 0.000000e+00		  store: 1.058333e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %10
  load: 7.937500e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %11
  load: 2.245651e+02		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %12
  load: 5.291667e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %14
  load: 5.291667e+00		  store: 5.291667e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..46
Round 0
Round end
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %3
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %4
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Edge* %5
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %6
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %7
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %8
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %9
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.Comm* %10
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of double* %12
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_outlined..49
Round 0
  alias entry   %28 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0
Round 1
Round end
    load (3.200000e-01) from %"class.std::vector.0"* %3
    load (3.200000e-01) from i64** %4
    load (3.200000e-01) from i64** %5
  Frequency of i32* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i32* %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %3
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64** %4
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64** %5
  load: 3.200000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function main
Round 0
    base alias entry   %14 = alloca i8**, align 8
    alias entry   %33 = load i8**, i8*** %14, align 8, !dbg !10342, !tbaa !10335
Round 1
Round end
  Frequency of i8** %1
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZN11GenerateRGGC2ElP19ompi_communicator_t
Round 0
  alias entry   %4 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 0, !dbg !10266
  alias entry   %5 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 3, !dbg !10276
    base alias entry   %5 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 3, !dbg !10276
  alias entry   %6 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 5, !dbg !10279
    alias entry   %8 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %5, align 8, !dbg !10281, !tbaa !10278
  alias entry   %9 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 4, !dbg !10282
  alias entry   %11 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 7, !dbg !10284
  alias entry   %12 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 6, !dbg !10287
  alias entry   %36 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 1, !dbg !10320
    alias entry   %100 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %5, align 8, !dbg !10478, !tbaa !10278
    alias entry   %171 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %5, align 8, !dbg !10565, !tbaa !10278
  alias entry   %183 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 2, !dbg !10579
    alias entry   %190 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %5, align 8, !dbg !10583, !tbaa !10278
Round 1
Round end
    store (1.000000e+00) to %class.GenerateRGG* %0
    store (1.000000e+00) to %class.GenerateRGG* %0
    load (1.000000e+00) from %class.GenerateRGG* %0
    store (1.000000e+00) to %class.GenerateRGG* %0
    store (1.000000e+00) to %class.GenerateRGG* %0
    load (1.000000e+00) from %class.GenerateRGG* %0
    load (5.000000e-01) from %class.GenerateRGG* %0
    store (2.500000e-01) to %class.GenerateRGG* %0
    store (3.437500e-01) to %class.GenerateRGG* %0
    store (2.500000e-01) to %class.GenerateRGG* %0
    load (1.000000e+00) from %class.GenerateRGG* %0
    store (1.000000e+00) to %class.GenerateRGG* %0
    load (5.000000e-01) from %class.GenerateRGG* %0
    load (5.000000e-01) from %class.GenerateRGG* %0
    load (5.000000e-01) from %class.GenerateRGG* %0
    load (7.656250e-01) from %class.GenerateRGG* %0
    load (7.656250e-01) from %class.GenerateRGG* %0
    store (1.000000e+00) to %class.GenerateRGG* %0
    load (1.000000e+00) from %class.GenerateRGG* %0
    load (1.000000e+00) from %class.GenerateRGG* %0
  Frequency of %class.GenerateRGG* %0
  load: 8.531250e+00		  store: 6.843750e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %struct.ompi_communicator_t* %2
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZN11GenerateRGG8generateEbbi
Round 0
  alias entry   %27 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 1, !dbg !10306
  alias entry   %75 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 6, !dbg !10592
  alias entry   %112 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 7, !dbg !10709
  alias entry   %153 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 0, !dbg !10828
  alias entry   %156 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 4, !dbg !10832
  alias entry   %160 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 5, !dbg !10836
  alias entry   %362 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 3, !dbg !10915
  alias entry   %696 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 3, !dbg !11101
  alias entry   %772 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 2
  alias entry   %1095 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 2
  alias entry   %1388 = getelementptr inbounds %class.GenerateRGG, %class.GenerateRGG* %0, i64 0, i32 2
Round 1
Round end
    load (1.000000e+00) from %class.GenerateRGG* %0
    load (6.249994e-01) from %class.GenerateRGG* %0
    load (9.999990e-01) from %class.GenerateRGG* %0
    load (4.999995e-01) from %class.GenerateRGG* %0
    load (3.124994e-01) from %class.GenerateRGG* %0
    load (9.999985e-01) from %class.GenerateRGG* %0
    load (4.999993e-01) from %class.GenerateRGG* %0
    load (3.124992e-01) from %class.GenerateRGG* %0
    load (9.999971e-01) from %class.GenerateRGG* %0
    load (9.999971e-01) from %class.GenerateRGG* %0
    load (9.999962e-01) from %class.GenerateRGG* %0
    load (9.999962e-01) from %class.GenerateRGG* %0
    load (4.999966e-01) from %class.GenerateRGG* %0
    load (4.999971e-01) from %class.GenerateRGG* %0
    load (4.999971e-01) from %class.GenerateRGG* %0
    load (4.999966e-01) from %class.GenerateRGG* %0
    load (9.999923e-01) from %class.GenerateRGG* %0
    load (9.999914e-01) from %class.GenerateRGG* %0
    load (3.749968e-01) from %class.GenerateRGG* %0
    load (3.749964e-01) from %class.GenerateRGG* %0
    load (9.999890e-01) from %class.GenerateRGG* %0
    load (9.998746e-01) from %class.GenerateRGG* %0
    load (3.199362e+02) from %class.GenerateRGG* %0
    load (3.199361e+02) from %class.GenerateRGG* %0
    load (6.249210e-01) from %class.GenerateRGG* %0
    load (6.249210e-01) from %class.GenerateRGG* %0
    load (9.998736e-01) from %class.GenerateRGG* %0
    load (9.998736e-01) from %class.GenerateRGG* %0
    load (9.998736e-01) from %class.GenerateRGG* %0
    load (9.998736e-01) from %class.GenerateRGG* %0
    load (9.998726e-01) from %class.GenerateRGG* %0
    load (9.998726e-01) from %class.GenerateRGG* %0
    load (9.998726e-01) from %class.GenerateRGG* %0
    load (9.998726e-01) from %class.GenerateRGG* %0
    load (9.998717e-01) from %class.GenerateRGG* %0
    load (9.998717e-01) from %class.GenerateRGG* %0
    load (9.998717e-01) from %class.GenerateRGG* %0
    load (9.998717e-01) from %class.GenerateRGG* %0
    load (9.998707e-01) from %class.GenerateRGG* %0
    load (9.998707e-01) from %class.GenerateRGG* %0
    load (9.998707e-01) from %class.GenerateRGG* %0
    load (9.998707e-01) from %class.GenerateRGG* %0
    load (9.998698e-01) from %class.GenerateRGG* %0
    load (4.999349e-01) from %class.GenerateRGG* %0
    load (2.499674e-01) from %class.GenerateRGG* %0
    load (7.997451e+01) from %class.GenerateRGG* %0
    load (3.998725e+01) from %class.GenerateRGG* %0
    load (3.998725e+01) from %class.GenerateRGG* %0
    load (7.997448e+01) from %class.GenerateRGG* %0
    load (4.999063e-01) from %class.GenerateRGG* %0
    load (2.499531e-01) from %class.GenerateRGG* %0
    load (7.996993e+01) from %class.GenerateRGG* %0
    load (3.998497e+01) from %class.GenerateRGG* %0
    load (3.998497e+01) from %class.GenerateRGG* %0
    load (7.996991e+01) from %class.GenerateRGG* %0
    load (9.998126e-01) from %class.GenerateRGG* %0
    load (9.998116e-01) from %class.GenerateRGG* %0
    load (9.998116e-01) from %class.GenerateRGG* %0
    load (9.998116e-01) from %class.GenerateRGG* %0
    load (9.998107e-01) from %class.GenerateRGG* %0
    load (9.998107e-01) from %class.GenerateRGG* %0
    load (9.998107e-01) from %class.GenerateRGG* %0
    load (9.998091e-01) from %class.GenerateRGG* %0
    load (9.998091e-01) from %class.GenerateRGG* %0
    load (9.998091e-01) from %class.GenerateRGG* %0
    load (9.998082e-01) from %class.GenerateRGG* %0
    load (9.998082e-01) from %class.GenerateRGG* %0
    load (9.998082e-01) from %class.GenerateRGG* %0
    load (9.998072e-01) from %class.GenerateRGG* %0
    load (9.998015e-01) from %class.GenerateRGG* %0
    load (6.248724e-01) from %class.GenerateRGG* %0
    load (6.248718e-01) from %class.GenerateRGG* %0
    load (1.952724e-01) from %class.GenerateRGG* %0
    load (3.905445e-01) from %class.GenerateRGG* %0
    load (3.905442e-01) from %class.GenerateRGG* %0
    load (6.248393e-01) from %class.GenerateRGG* %0
    load (1.249644e+01) from %class.GenerateRGG* %0
    load (1.249643e+01) from %class.GenerateRGG* %0
    load (1.171538e+00) from %class.GenerateRGG* %0
    load (5.857690e-01) from %class.GenerateRGG* %0
    load (2.928845e-01) from %class.GenerateRGG* %0
    load (1.464422e-01) from %class.GenerateRGG* %0
    load (6.248387e-01) from %class.GenerateRGG* %0
    load (6.248381e-01) from %class.GenerateRGG* %0
    load (1.249638e+01) from %class.GenerateRGG* %0
    load (6.248253e-01) from %class.GenerateRGG* %0
    load (3.905154e-01) from %class.GenerateRGG* %0
    load (2.440719e-01) from %class.GenerateRGG* %0
    load (6.248247e-01) from %class.GenerateRGG* %0
    load (4.881438e+00) from %class.GenerateRGG* %0
    load (9.997431e-01) from %class.GenerateRGG* %0
    load (9.997421e-01) from %class.GenerateRGG* %0
    load (9.997406e-01) from %class.GenerateRGG* %0
    load (9.997406e-01) from %class.GenerateRGG* %0
    load (1.999481e+01) from %class.GenerateRGG* %0
    load (9.997388e-01) from %class.GenerateRGG* %0
    load (9.997385e-01) from %class.GenerateRGG* %0
  Frequency of %class.GenerateRGG* %0
  load: 1.246995e+03		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZN14BinaryEdgeList4readEiiiSs
Round 0
  alias entry   %39 = getelementptr inbounds %class.BinaryEdgeList, %class.BinaryEdgeList* %0, i64 0, i32 4, !dbg !10380
  alias entry   %41 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %4, i64 0, i32 0, i32 0, !dbg !10388
  alias entry   %99 = getelementptr inbounds %class.BinaryEdgeList, %class.BinaryEdgeList* %0, i64 0, i32 0, !dbg !10514
    alias entry   %100 = bitcast %class.BinaryEdgeList* %0 to i8*, !dbg !10515
  alias entry   %104 = getelementptr inbounds %class.BinaryEdgeList, %class.BinaryEdgeList* %0, i64 0, i32 1, !dbg !10518
    alias entry   %105 = bitcast i64* %104 to i8*, !dbg !10519
  alias entry   %118 = getelementptr inbounds %class.BinaryEdgeList, %class.BinaryEdgeList* %0, i64 0, i32 2, !dbg !10532
  alias entry   %182 = getelementptr inbounds %class.BinaryEdgeList, %class.BinaryEdgeList* %0, i64 0, i32 3, !dbg !10605
Round 1
Round end
    load (9.999971e-01) from %class.BinaryEdgeList* %0
    load (9.999971e-01) from %"class.std::basic_string"* %4
    load (6.249948e-01) from %class.BinaryEdgeList* %0
    load (9.999905e-01) from %class.BinaryEdgeList* %0
    store (9.999905e-01) to %class.BinaryEdgeList* %0
    load (9.999895e-01) from %class.BinaryEdgeList* %0
    load (9.999886e-01) from %class.BinaryEdgeList* %0
    load (9.999886e-01) from %class.BinaryEdgeList* %0
    load (9.999729e-01) from %class.BinaryEdgeList* %0
    store (9.999729e-01) to %class.BinaryEdgeList* %0
    load (9.999714e-01) from %class.BinaryEdgeList* %0
    load (9.999714e-01) from %class.BinaryEdgeList* %0
    load (9.999547e-01) from %class.BinaryEdgeList* %0
    load (1.999909e+01) from %class.BinaryEdgeList* %0
  Frequency of %class.BinaryEdgeList* %0
  load: 2.962391e+01		  store: 1.999963e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::basic_string"* %4
  load: 9.999971e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt8_Rb_treeIlSt4pairIKl4CommESt10_Select1stIS3_ESt4lessIlESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
Round 0
Round end
Warning: wrong traversal order, or recursive call
On function _ZN5GraphC2EllllP19ompi_communicator_t
Round 0
  alias entry   %8 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 0, !dbg !10272
  alias entry   %9 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 1, !dbg !10272
  alias entry   %10 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 2, !dbg !10309
    alias entry   %11 = bitcast %class.Graph* %0 to i8*, !dbg !10309
  alias entry   %12 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 3, !dbg !10320
  alias entry   %13 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 4, !dbg !10322
  alias entry   %14 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 5, !dbg !10324
  alias entry   %15 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, !dbg !10272
    alias entry   %16 = bitcast %"class.std::vector.0"* %15 to i8*, !dbg !10332
  alias entry   %17 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !10334
    base alias entry   %17 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 7, !dbg !10334
  alias entry   %18 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 9, !dbg !10336
    alias entry   %21 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %17, align 8, !dbg !10338, !tbaa !10335
  alias entry   %22 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 8, !dbg !10339
  alias entry   %28 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !10361
    alias entry   %29 = bitcast i64** %28 to i64*, !dbg !10361
    alias entry   %31 = bitcast %class.Graph* %0 to i64*, !dbg !10365
  alias entry   %45 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 1, i32 0, i32 0, i32 1, !dbg !10416
    alias entry   %46 = bitcast %struct.Edge** %45 to i64*, !dbg !10416
    alias entry   %48 = bitcast %"class.std::vector.5"* %9 to i64*, !dbg !10420
  alias entry   %64 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 6, i32 0, i32 0, i32 1, !dbg !10455
    alias entry   %65 = bitcast i64** %64 to i64*, !dbg !10455
    alias entry   %67 = bitcast %"class.std::vector.0"* %15 to i64*, !dbg !10456
  alias entry   %76 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %15, i64 0, i32 0, i32 0, i32 0
  alias entry   %110 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %15, i64 0, i32 0, i32 0, i32 0, !dbg !10511
  alias entry   %116 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %9, i64 0, i32 0, i32 0, i32 0, !dbg !10547
  alias entry   %122 = getelementptr inbounds %class.Graph, %class.Graph* %0, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !10576
Round 1
Round end
    store (1.000000e+00) to %class.Graph* %0
    store (1.000000e+00) to %class.Graph* %0
    store (1.000000e+00) to %class.Graph* %0
    store (1.000000e+00) to %class.Graph* %0
    store (1.000000e+00) to %class.Graph* %0
    load (9.999990e-01) from %class.Graph* %0
    load (9.999980e-01) from %class.Graph* %0
    load (9.999980e-01) from %class.Graph* %0
    load (9.999980e-01) from %class.Graph* %0
Warning: wrong traversal order, or recursive call
On function _ZN3LCGC2EjPdlP19ompi_communicator_t
Round 0
  alias entry   %6 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 3, !dbg !10268
  alias entry   %7 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 4, !dbg !10277
  alias entry   %8 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 6, !dbg !10279
    base alias entry   %8 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 6, !dbg !10279
  alias entry   %9 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 7, !dbg !10281
    alias entry   %10 = bitcast %"class.std::vector.0"* %9 to i8*, !dbg !10300
  alias entry   %11 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 0, !dbg !10302
    base alias entry   %11 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 0, !dbg !10302
  alias entry   %12 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 1, !dbg !10306
    alias entry   %15 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %11, align 8, !dbg !10308, !tbaa !10305
  alias entry   %16 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 2, !dbg !10309
  alias entry   %20 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 7, i32 0, i32 0, i32 1, !dbg !10326
    alias entry   %21 = bitcast i64** %20 to i64*, !dbg !10326
    alias entry   %23 = bitcast %"class.std::vector.0"* %9 to i64*, !dbg !10330
  alias entry   %42 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 5, !dbg !10359
  alias entry   %45 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %9, i64 0, i32 0, i32 0, i32 0, !dbg !10374
  alias entry   %52 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 5, !dbg !10399
    alias entry   %53 = bitcast i64* %52 to i8*, !dbg !10400
    alias entry   %54 = load %struct.ompi_communicator_t*, %struct.ompi_communicator_t** %11, align 8, !dbg !10401, !tbaa !10305
Round 1
Round end
    store (1.000000e+00) to %class.LCG* %0
    store (1.000000e+00) to %class.LCG* %0
    store (1.000000e+00) to %class.LCG* %0
    store (1.000000e+00) to %class.LCG* %0
    load (9.999989e-01) from %class.LCG* %0
    load (9.999982e-01) from %class.LCG* %0
    load (9.999982e-01) from %class.LCG* %0
    load (9.999982e-01) from %class.LCG* %0
Warning: wrong traversal order, or recursive call
On function _ZNSt24uniform_int_distributionIiEclISt26linear_congruential_engineImLm16807ELm0ELm2147483647EEEEiRT_RKNS0_10param_typeE
Round 0
  alias entry   %5 = getelementptr inbounds %"struct.std::uniform_int_distribution<int>::param_type", %"struct.std::uniform_int_distribution<int>::param_type"* %2, i64 0, i32 1, !dbg !10267
  alias entry   %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<int>::param_type", %"struct.std::uniform_int_distribution<int>::param_type"* %2, i64 0, i32 0, !dbg !10279
  alias entry   %19 = getelementptr inbounds %"class.std::linear_congruential_engine", %"class.std::linear_congruential_engine"* %1, i64 0, i32 0
  alias entry   %37 = getelementptr inbounds %"class.std::linear_congruential_engine", %"class.std::linear_congruential_engine"* %1, i64 0, i32 0
  alias entry   %51 = getelementptr inbounds %"class.std::linear_congruential_engine", %"class.std::linear_congruential_engine"* %1, i64 0, i32 0, !dbg !10376
Round 1
Round end
    load (1.000000e+00) from %"struct.std::uniform_int_distribution<int>::param_type"* %2
    load (1.000000e+00) from %"struct.std::uniform_int_distribution<int>::param_type"* %2
    load (5.000000e-01) from %"class.std::linear_congruential_engine"* %1
    store (5.000000e-01) to %"class.std::linear_congruential_engine"* %1
Warning: wrong traversal order, or recursive call
On function _ZNSt6vectorIlSaIlEEaSERKS1_
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 1, !dbg !10278
    alias entry   %6 = bitcast i64** %5 to i64*, !dbg !10278
    alias entry   %8 = bitcast %"class.std::vector.0"* %1 to i64*, !dbg !10285
  alias entry   %12 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10294
    alias entry   %13 = bitcast i64** %12 to i64*, !dbg !10294
    alias entry   %15 = bitcast %"class.std::vector.0"* %0 to i64*, !dbg !10296
  alias entry   %.phi.trans.insert = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0
  alias entry   %35 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10460
  alias entry   %42 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10490
    alias entry   %43 = bitcast i64** %42 to i64*, !dbg !10490
  alias entry   %54 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 0, !dbg !10573
  alias entry   %74 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10633
  alias entry   %77 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10635
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.0"* %1
    load (6.250000e-01) from %"class.std::vector.0"* %1
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (1.953125e-01) from %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
    load (3.125000e-01) from %"class.std::vector.0"* %0
    load (9.765625e-02) from %"class.std::vector.0"* %1
    load (9.765625e-02) from %"class.std::vector.0"* %0
    load (9.765625e-02) from %"class.std::vector.0"* %0
    load (9.765625e-02) from %"class.std::vector.0"* %1
    load (6.250000e-01) from %"class.std::vector.0"* %0
    store (6.250000e-01) to %"class.std::vector.0"* %0
  Frequency of %"class.std::vector.0"* %0
  load: 2.578125e+00		  store: 1.250000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"class.std::vector.0"* %1
  load: 1.445312e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorIlSaIlEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPlS1_EEmRKl
Round 0
  alias entry   %8 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10281
    alias entry   %9 = bitcast i64** %8 to i64*, !dbg !10281
  alias entry   %11 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10288
    alias entry   %12 = bitcast i64** %11 to i64*, !dbg !10288
    alias entry   %543 = bitcast %"class.std::vector.0"* %0 to i64*, !dbg !10728
  alias entry   %729 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10820
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (3.125000e-01) from i64* %3
    load (9.765625e-02) from %"class.std::vector.0"* %0
    store (1.562500e-01) to %"class.std::vector.0"* %0
    store (1.562500e-01) to %"class.std::vector.0"* %0
    load (9.765625e-02) from %"class.std::vector.0"* %0
    store (1.562500e-01) to %"class.std::vector.0"* %0
    load (3.125000e-01) from %"class.std::vector.0"* %0
    load (3.125000e-01) from i64* %3
    load (3.125000e-01) from %"class.std::vector.0"* %0
    load (3.125000e-01) from %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
  Frequency of %"class.std::vector.0"* %0
  load: 2.382812e+00		  store: 1.406250e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of i64* %3
  load: 6.250000e-01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorI4EdgeSaIS0_EE17_M_default_appendEm
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10274
    alias entry   %6 = bitcast %struct.Edge** %5 to i64*, !dbg !10274
  alias entry   %8 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10281
    alias entry   %83 = bitcast %"class.std::vector.5"* %0 to i64*, !dbg !10375
  alias entry   %104 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  alias entry   %111 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10431
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.5"* %0
    load (6.250000e-01) from %"class.std::vector.5"* %0
    load (3.125000e-01) from %"class.std::vector.5"* %0
    load (1.953125e-01) from %"class.std::vector.5"* %0
    load (1.953125e-01) from %"class.std::vector.5"* %0
    load (3.125000e-01) from %"class.std::vector.5"* %0
    store (3.125000e-01) to %"class.std::vector.5"* %0
    store (3.125000e-01) to %"class.std::vector.5"* %0
  Frequency of %"class.std::vector.5"* %0
  load: 2.265625e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZN3LCG18parallel_prefix_opEv
Round 0
  alias entry   %10 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 4, !dbg !10283
  alias entry   %168 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 1, !dbg !10362
  alias entry   %174 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 2, !dbg !10269
  alias entry   %178 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 0
  alias entry   %186 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 5, !dbg !10373
  alias entry   %250 = getelementptr inbounds %class.LCG, %class.LCG* %0, i64 0, i32 7, i32 0, i32 0, i32 0, !dbg !10373
Round 1
Round end
    load (1.000000e+00) from %class.LCG* %0
    load (1.000000e+00) from %class.LCG* %0
    load (1.000000e+00) from %class.LCG* %0
    load (1.000000e+00) from %class.LCG* %0
    load (2.005882e+01) from %class.LCG* %0
    load (2.005882e+01) from %class.LCG* %0
    load (2.005882e+01) from %class.LCG* %0
    load (2.005882e+01) from %class.LCG* %0
    load (1.000000e+00) from %class.LCG* %0
  Frequency of %class.LCG* %0
  load: 8.523529e+01		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorI9EdgeTupleSaIS0_EE17_M_default_appendEm
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10273
    alias entry   %6 = bitcast %struct.EdgeTuple** %5 to i64*, !dbg !10273
  alias entry   %8 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10280
    alias entry   %60 = bitcast %"class.std::vector.84"* %0 to i64*, !dbg !10369
  alias entry   %81 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 0
  alias entry   %88 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10425
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.84"* %0
    load (6.250000e-01) from %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    load (1.953125e-01) from %"class.std::vector.84"* %0
    load (1.953125e-01) from %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    store (3.125000e-01) to %"class.std::vector.84"* %0
    store (3.125000e-01) to %"class.std::vector.84"* %0
  Frequency of %"class.std::vector.84"* %0
  load: 2.578125e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEEZN11GenerateRGG8generateEbbiEUlRKS2_E_ET_SC_SC_T0_St26random_access_iterator_tag
Round 0
Round end
On function _ZNSt6vectorI9EdgeTupleSaIS0_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS0_S2_EEEEvS7_T_S8_St20forward_iterator_tag
Round 0
  alias entry   %13 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10344
    alias entry   %14 = bitcast %struct.EdgeTuple** %13 to i64*, !dbg !10344
  alias entry   %16 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10351
    alias entry   %17 = bitcast %struct.EdgeTuple** %16 to i64*, !dbg !10351
    alias entry   %116 = bitcast %"class.std::vector.84"* %0 to i64*, !dbg !10799
  alias entry   %137 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 0
  alias entry   %142 = getelementptr inbounds %"class.std::vector.84", %"class.std::vector.84"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10851
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.84"* %0
    load (6.250000e-01) from %"class.std::vector.84"* %0
    load (9.765625e-02) from %"class.std::vector.84"* %0
    store (1.562500e-01) to %"class.std::vector.84"* %0
    load (9.765625e-02) from %"class.std::vector.84"* %0
    store (1.562500e-01) to %"class.std::vector.84"* %0
    load (9.765625e-02) from %"class.std::vector.84"* %0
    store (1.562500e-01) to %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    load (1.953125e-01) from %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    load (3.125000e-01) from %"class.std::vector.84"* %0
    store (3.125000e-01) to %"class.std::vector.84"* %0
    store (3.125000e-01) to %"class.std::vector.84"* %0
    store (3.125000e-01) to %"class.std::vector.84"* %0
  Frequency of %"class.std::vector.84"* %0
  load: 2.675781e+00		  store: 1.406250e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEElZN11GenerateRGG8generateEbbiEUlRKS2_SA_E_EvT_SC_T0_T1_
Round 0
Round end
On function _ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEEZN11GenerateRGG8generateEbbiEUlRKS2_SA_E_EvT_SC_T0_
Round 0
Round end
On function _ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEEZN11GenerateRGG8generateEbbiEUlRKS2_SA_E_EvT_SC_SC_T0_
Round 0
Round end
On function _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEElS2_ZN11GenerateRGG8generateEbbiEUlRKS2_SA_E_EvT_T0_SD_T1_T2_
Round 0
Round end
On function _ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIP9EdgeTupleSt6vectorIS2_SaIS2_EEEEZN11GenerateRGG8generateEbbiEUlRKS2_SA_E_EvT_SC_SC_SC_T0_
Round 0
Round end
On function _ZNSt6vectorIlSaIlEE17_M_default_appendEm
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10274
    alias entry   %6 = bitcast i64** %5 to i64*, !dbg !10274
  alias entry   %8 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10281
    alias entry   %20 = bitcast i64** %8 to i64*, !dbg !10380
    alias entry   %21 = bitcast %"class.std::vector.0"* %0 to i64*, !dbg !10381
  alias entry   %42 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0
    alias entry   %65 = bitcast %"class.std::vector.0"* %0 to i8**, !dbg !10628
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (6.250000e-01) from %"class.std::vector.0"* %0
    load (3.125000e-01) from %"class.std::vector.0"* %0
    load (3.125000e-01) from %"class.std::vector.0"* %0
    load (1.953125e-01) from %"class.std::vector.0"* %0
    load (1.953125e-01) from %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
    store (3.125000e-01) to %"class.std::vector.0"* %0
  Frequency of %"class.std::vector.0"* %0
  load: 2.265625e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorIdSaIdEE17_M_default_appendEm
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10274
    alias entry   %6 = bitcast double** %5 to i64*, !dbg !10274
  alias entry   %8 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10281
    alias entry   %20 = bitcast double** %8 to i64*, !dbg !10381
    alias entry   %21 = bitcast %"class.std::vector.10"* %0 to i64*, !dbg !10382
  alias entry   %42 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %0, i64 0, i32 0, i32 0, i32 0
    alias entry   %65 = bitcast %"class.std::vector.10"* %0 to i8**, !dbg !10630
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.10"* %0
    load (6.250000e-01) from %"class.std::vector.10"* %0
    load (3.125000e-01) from %"class.std::vector.10"* %0
    load (3.125000e-01) from %"class.std::vector.10"* %0
    load (1.953125e-01) from %"class.std::vector.10"* %0
    load (1.953125e-01) from %"class.std::vector.10"* %0
    store (3.125000e-01) to %"class.std::vector.10"* %0
    store (3.125000e-01) to %"class.std::vector.10"* %0
  Frequency of %"class.std::vector.10"* %0
  load: 2.265625e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorI4CommSaIS0_EE17_M_default_appendEm
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10460
    alias entry   %6 = bitcast %struct.Comm** %5 to i64*, !dbg !10460
  alias entry   %8 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10467
    alias entry   %20 = bitcast %"class.std::vector.15"* %0 to i64*, !dbg !10551
  alias entry   %41 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %0, i64 0, i32 0, i32 0, i32 0
  alias entry   %48 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10607
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.15"* %0
    load (6.250000e-01) from %"class.std::vector.15"* %0
    load (3.125000e-01) from %"class.std::vector.15"* %0
    load (3.125000e-01) from %"class.std::vector.15"* %0
    load (1.953125e-01) from %"class.std::vector.15"* %0
    load (1.953125e-01) from %"class.std::vector.15"* %0
    load (3.125000e-01) from %"class.std::vector.15"* %0
    store (3.125000e-01) to %"class.std::vector.15"* %0
    store (3.125000e-01) to %"class.std::vector.15"* %0
  Frequency of %"class.std::vector.15"* %0
  load: 2.578125e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt13unordered_setIlSt4hashIlESt8equal_toIlESaIlEEmEEvT_T0_
Round 0
Round end
  Frequency of %"class.std::unordered_set"* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt10_HashtableIlSt4pairIKllESaIS2_ENSt8__detail10_Select1stESt8equal_toIlESt4hashIlENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS4_10_Hash_nodeIS2_Lb0EEE
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 4, !dbg !10268
  alias entry   %6 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 4, i32 1, !dbg !10275
  alias entry   %8 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 1, !dbg !10282
  alias entry   %10 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 3, !dbg !10288
  alias entry   %17 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 0
  alias entry   %29 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 2, i32 0, !dbg !10428
    alias entry   %30 = bitcast %"struct.std::__detail::_Hash_node_base"* %29 to %"struct.std::__detail::_Hash_node"**, !dbg !10429
  alias entry   %32 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %29, i64 0, i32 0, !dbg !10432
    alias entry   %35 = bitcast %"struct.std::__detail::_Hash_node_base"* %29 to i64*
    base alias entry   %44 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %28, i64 %43, !dbg !10509
    alias entry   %61 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %44, align 8, !dbg !10529, !tbaa !10511
  alias entry   %62 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %61, i64 0, i32 0, !dbg !10530
    alias entry   %76 = bitcast %"class.std::_Hashtable"* %0 to i8**, !dbg !10550
    alias entry   %82 = bitcast %"struct.std::__detail::_Hash_node"* %3 to i8*, !dbg !10618
  alias entry   %86 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 0, !dbg !10296
  alias entry   %93 = getelementptr inbounds %"struct.std::__detail::_Hash_node", %"struct.std::__detail::_Hash_node"* %3, i64 0, i32 0, !dbg !10627
    alias entry   %94 = bitcast %"struct.std::__detail::_Hash_node"* %3 to i64*, !dbg !10628
    base alias entry   %96 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %95, i64 0, i32 0, !dbg !10630
  alias entry   %98 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %0, i64 0, i32 2, i32 0, !dbg !10639
    alias entry   %99 = bitcast %"struct.std::__detail::_Hash_node_base"* %98 to i64*, !dbg !10640
  alias entry   %101 = getelementptr inbounds %"struct.std::__detail::_Hash_node", %"struct.std::__detail::_Hash_node"* %3, i64 0, i32 0, !dbg !10641
  alias entry   %102 = getelementptr inbounds %"struct.std::__detail::_Hash_node", %"struct.std::__detail::_Hash_node"* %3, i64 0, i32 0, i32 0, !dbg !10641
    alias entry   %103 = bitcast %"struct.std::__detail::_Hash_node"* %3 to i64*, !dbg !10642
  alias entry   %104 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %98, i64 0, i32 0, !dbg !10645
    base alias entry   %104 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %98, i64 0, i32 0, !dbg !10645
    base alias entry   %113 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %84, i64 %112, !dbg !10676
    base alias entry   %117 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %116, i64 %85, !dbg !10678
Round 1
Warning: the first offset is not constant
    alias entry   %45 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %44, align 8, !dbg !10509, !tbaa !10511
    alias entry   %57 = bitcast %"struct.std::__detail::_Hash_node_base"* %45 to i64*, !dbg !10525
  base alias offset entry (0)   %95 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %87, align 8, !dbg !10629, !tbaa !10511
Warning: the first offset is not constant
Warning: the first offset is not constant
Round 2
Warning: the first offset is not constant
Warning: the first offset is not constant
Warning: the first offset is not constant
Round end
    load (1.000000e+00) from %"class.std::_Hashtable"* %0
    load (1.000000e+00) from %"class.std::_Hashtable"* %0
    load (1.000000e+00) from %"class.std::_Hashtable"* %0
    load (5.000000e-01) from %"class.std::_Hashtable"* %0
    load (4.999995e-01) from %"class.std::_Hashtable"* %0
    store (4.999995e-01) to %"class.std::_Hashtable"* %0
    load (3.749996e+00) from %"class.std::_Hashtable"* %0
    store (3.749996e+00) to %"class.std::_Hashtable"* %0
    load (6.249994e+00) from %"class.std::_Hashtable"* %0
    store (6.249994e+00) to %"class.std::_Hashtable"* %0
    store (4.768372e-07) to %"class.std::_Hashtable"* %0
    load (4.999995e-01) from %"class.std::_Hashtable"* %0
    store (4.999995e-01) to %"class.std::_Hashtable"* %0
    store (4.999995e-01) to %"class.std::_Hashtable"* %0
    store (6.249997e-01) to %"struct.std::__detail::_Hash_node"* %3
    load (3.749998e-01) from %"class.std::_Hashtable"* %0
    store (3.749998e-01) to %"struct.std::__detail::_Hash_node"* %3
    store (3.749998e-01) to %"class.std::_Hashtable"* %0
    load (3.749998e-01) from %"struct.std::__detail::_Hash_node"* %3
    load (2.343749e-01) from %"class.std::_Hashtable"* %0
    load (2.343749e-01) from %"class.std::_Hashtable"* %0
    load (9.999995e-01) from %"class.std::_Hashtable"* %0
    store (9.999995e-01) to %"class.std::_Hashtable"* %0
  Frequency of %"class.std::_Hashtable"* %0
  load: 1.634374e+01		  store: 1.287499e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"struct.std::__detail::_Hash_node"* %3
  load: 3.749998e-01		  store: 9.999995e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt10_HashtableIllSaIlENSt8__detail9_IdentityESt8equal_toIlESt4hashIlENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE21_M_insert_unique_nodeEmmPNS1_10_Hash_nodeIlLb0EEE
Round 0
  alias entry   %5 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 4, !dbg !10268
  alias entry   %6 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 4, i32 1, !dbg !10275
  alias entry   %8 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 1, !dbg !10282
  alias entry   %10 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 3, !dbg !10288
  alias entry   %17 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 0
  alias entry   %29 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 2, i32 0, !dbg !10428
    alias entry   %30 = bitcast %"struct.std::__detail::_Hash_node_base"* %29 to %"struct.std::__detail::_Hash_node.61"**, !dbg !10429
  alias entry   %32 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %29, i64 0, i32 0, !dbg !10432
    alias entry   %35 = bitcast %"struct.std::__detail::_Hash_node_base"* %29 to i64*
    base alias entry   %44 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %28, i64 %43, !dbg !10469
    alias entry   %61 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %44, align 8, !dbg !10489, !tbaa !10471
  alias entry   %62 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %61, i64 0, i32 0, !dbg !10490
    alias entry   %76 = bitcast %"class.std::_Hashtable.34"* %0 to i8**, !dbg !10510
    alias entry   %82 = bitcast %"struct.std::__detail::_Hash_node.61"* %3 to i8*, !dbg !10578
  alias entry   %86 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 0, !dbg !10296
  alias entry   %93 = getelementptr inbounds %"struct.std::__detail::_Hash_node.61", %"struct.std::__detail::_Hash_node.61"* %3, i64 0, i32 0, !dbg !10587
    alias entry   %94 = bitcast %"struct.std::__detail::_Hash_node.61"* %3 to i64*, !dbg !10588
    base alias entry   %96 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %95, i64 0, i32 0, !dbg !10590
  alias entry   %98 = getelementptr inbounds %"class.std::_Hashtable.34", %"class.std::_Hashtable.34"* %0, i64 0, i32 2, i32 0, !dbg !10599
    alias entry   %99 = bitcast %"struct.std::__detail::_Hash_node_base"* %98 to i64*, !dbg !10600
  alias entry   %101 = getelementptr inbounds %"struct.std::__detail::_Hash_node.61", %"struct.std::__detail::_Hash_node.61"* %3, i64 0, i32 0, !dbg !10601
  alias entry   %102 = getelementptr inbounds %"struct.std::__detail::_Hash_node.61", %"struct.std::__detail::_Hash_node.61"* %3, i64 0, i32 0, i32 0, !dbg !10601
    alias entry   %103 = bitcast %"struct.std::__detail::_Hash_node.61"* %3 to i64*, !dbg !10602
  alias entry   %104 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %98, i64 0, i32 0, !dbg !10605
    base alias entry   %104 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %98, i64 0, i32 0, !dbg !10605
    base alias entry   %113 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %84, i64 %112, !dbg !10630
    base alias entry   %117 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %116, i64 %85, !dbg !10632
Round 1
Warning: the first offset is not constant
    alias entry   %45 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %44, align 8, !dbg !10469, !tbaa !10471
    alias entry   %57 = bitcast %"struct.std::__detail::_Hash_node_base"* %45 to i64*, !dbg !10485
  base alias offset entry (0)   %95 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %87, align 8, !dbg !10589, !tbaa !10471
Warning: the first offset is not constant
Warning: the first offset is not constant
Round 2
Warning: the first offset is not constant
Warning: the first offset is not constant
Warning: the first offset is not constant
Round end
    load (1.000000e+00) from %"class.std::_Hashtable.34"* %0
    load (1.000000e+00) from %"class.std::_Hashtable.34"* %0
    load (1.000000e+00) from %"class.std::_Hashtable.34"* %0
    load (5.000000e-01) from %"class.std::_Hashtable.34"* %0
    load (4.999995e-01) from %"class.std::_Hashtable.34"* %0
    store (4.999995e-01) to %"class.std::_Hashtable.34"* %0
    load (3.749996e+00) from %"class.std::_Hashtable.34"* %0
    store (3.749996e+00) to %"class.std::_Hashtable.34"* %0
    load (6.249994e+00) from %"class.std::_Hashtable.34"* %0
    store (6.249994e+00) to %"class.std::_Hashtable.34"* %0
    store (4.768372e-07) to %"class.std::_Hashtable.34"* %0
    load (4.999995e-01) from %"class.std::_Hashtable.34"* %0
    store (4.999995e-01) to %"class.std::_Hashtable.34"* %0
    store (4.999995e-01) to %"class.std::_Hashtable.34"* %0
    store (6.249997e-01) to %"struct.std::__detail::_Hash_node.61"* %3
    load (3.749998e-01) from %"class.std::_Hashtable.34"* %0
    store (3.749998e-01) to %"struct.std::__detail::_Hash_node.61"* %3
    store (3.749998e-01) to %"class.std::_Hashtable.34"* %0
    load (3.749998e-01) from %"struct.std::__detail::_Hash_node.61"* %3
    load (2.343749e-01) from %"class.std::_Hashtable.34"* %0
    load (2.343749e-01) from %"class.std::_Hashtable.34"* %0
    load (9.999995e-01) from %"class.std::_Hashtable.34"* %0
    store (9.999995e-01) to %"class.std::_Hashtable.34"* %0
  Frequency of %"class.std::_Hashtable.34"* %0
  load: 1.634374e+01		  store: 1.287499e+01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
  Frequency of %"struct.std::__detail::_Hash_node.61"* %3
  load: 3.749998e-01		  store: 9.999995e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _ZNSt6vectorI8CommInfoSaIS0_EE17_M_default_appendEm
Round 0
  alias entry   %7 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10273
    alias entry   %8 = bitcast %struct.CommInfo** %7 to i64*, !dbg !10273
  alias entry   %10 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10280
    alias entry   %54 = bitcast %struct.CommInfo** %10 to i64*, !dbg !10394
    alias entry   %55 = bitcast %"class.std::vector.52"* %0 to i64*, !dbg !10395
  alias entry   %76 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  alias entry   %84 = getelementptr inbounds %"class.std::vector.52", %"class.std::vector.52"* %0, i64 0, i32 0, i32 0, i32 0, !dbg !10449
    alias entry   %133 = bitcast %"class.std::vector.52"* %0 to i8**, !dbg !10651
Round 1
Round end
    load (6.250000e-01) from %"class.std::vector.52"* %0
    load (6.250000e-01) from %"class.std::vector.52"* %0
    load (3.125000e-01) from %"class.std::vector.52"* %0
    load (3.125000e-01) from %"class.std::vector.52"* %0
    load (1.953125e-01) from %"class.std::vector.52"* %0
    load (1.953125e-01) from %"class.std::vector.52"* %0
    load (3.125000e-01) from %"class.std::vector.52"* %0
    store (3.125000e-01) to %"class.std::vector.52"* %0
    store (3.125000e-01) to %"class.std::vector.52"* %0
  Frequency of %"class.std::vector.52"* %0
  load: 2.578125e+00		  store: 6.250000e-01 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function _GLOBAL__sub_I_main.cpp
Round 0
Round end
On function .omp_offloading.descriptor_unreg
Round 0
Round end
  Frequency of i8* %0
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 0.000000e+00 (target)
On function .omp_offloading.descriptor_reg.nvptx64-nvidia-cuda
Round 0
Round end
  ---- Identify Target Regions ----
  target call:   %49 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z21distComputeModularityRK5GraphP4CommPKddi_l396.region_id, i32 5, i8** nonnull %24, i8** nonnull %26, i64* nonnull %28, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @.offload_maptypes.0, i64 0, i64 0), i32 0, i32 0), !dbg !10317
  target call:   %24 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z20distUpdateLocalCinfolP4CommPKS__l436.region_id, i32 3, i8** nonnull %9, i8** nonnull %11, i64* nonnull %13, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.15, i64 0, i64 0), i32 0, i32 0), !dbg !10269
  target call:   %26 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z16distCleanCWandCUlPdP4Comm_l455.region_id, i32 3, i8** nonnull %11, i8** nonnull %13, i64* nonnull %15, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.20, i64 0, i64 0), i32 0, i32 0), !dbg !10269
  target call:   %258 = invoke i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z16distCleanCWandCUlPdP4Comm_l455.region_id, i32 3, i8** nonnull %184, i8** nonnull %186, i64* nonnull %188, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.20.1, i64 0, i64 0), i32 0, i32 0)
          to label %259 unwind label %319, !dbg !11559
  target call:   %276 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z17distLouvainMethodiiRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ddRi_l1368.region_id, i32 12, i8** nonnull %200, i8** nonnull %202, i64* nonnull %204, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @.offload_maptypes.47.2, i64 0, i64 0), i32 0, i32 0), !dbg !11584
  target call:   %325 = invoke i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z20distUpdateLocalCinfolP4CommPKS__l436.region_id, i32 3, i8** nonnull %184, i8** nonnull %186, i64* nonnull %188, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.15.3, i64 0, i64 0), i32 0, i32 0)
          to label %326 unwind label %319, !dbg !11667
  ---- Target Distance Calculation ----
_Z17distLouvainMethodiiRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ddRi converges after 3 iterations
target 0: (0: 1.000000e+00) (1: 1.000000e+00) (2: 1.000000e+00) (3: 1.000000e+00) (4: 1.000000e+00) (5: 1.000000e+00) 
target 1: (0: 1.000000e+00) (1: 1.000000e+00) (2: 1.000000e+00) (3: 1.000000e+00) (4: 1.000000e+00) (5: 1.000000e+00) 
target 2: (0: 1.000000e+00) (1: 1.000000e+00) (2: 1.000000e+00) (3: 1.000000e+00) (4: 1.000000e+00) (5: 1.000000e+00) 
target 3: (0: 1.010000e+02) (1: 1.010000e+02) (2: 1.010000e+02) (3: 9.152967e+00) (4: 1.000095e+00) (5: 2.000190e+00) 
target 4: (0: 1.010000e+02) (1: 1.010000e+02) (2: 1.010000e+02) (3: 8.152880e+00) (4: 9.091440e+00) (5: 1.000095e+00) 
target 5: (0: 1.010000e+02) (1: 1.010000e+02) (2: 1.010000e+02) (3: 7.152791e+00) (4: 8.091353e+00) (5: 9.029914e+00) 
  ---- OMP (/tmp/main-cdf4fe.bc, powerpc64le-unknown-linux-gnu) ----
new entry   %91 = invoke i8* @omp_target_alloc(i64 %90, i32 signext -100)
          to label %92 unwind label %291, !dbg !11387
new entry   %105 = invoke i8* @omp_target_alloc(i64 %104, i32 signext -100)
          to label %106 unwind label %295, !dbg !11405
new entry   %119 = invoke i8* @omp_target_alloc(i64 %118, i32 signext -100)
          to label %120 unwind label %299, !dbg !11431
new entry   %128 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %129 unwind label %303, !dbg !11449
new entry   %134 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %135 unwind label %307, !dbg !11462
new entry   %140 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %141 unwind label %311, !dbg !11478
new entry   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
new entry   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
new entry   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
Round 0
  base alias entry   %130 = bitcast i64** %29 to i8**, !dbg !11450
  base alias entry   %142 = bitcast i64** %30 to i8**, !dbg !11479
  alias entry   %147 = bitcast i8* %145 to %struct.Comm*, !dbg !11487
  alias entry   %158 = bitcast i8* %156 to double*, !dbg !11511
  base alias entry   %189 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 1
  base alias entry   %190 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 1
  base alias entry   %192 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 2
  base alias entry   %193 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 2
Warning: reach to function declaration __kmpc_fork_teams
  base alias entry   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias entry   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias entry   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias entry   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias entry   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias entry   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias entry   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias entry   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias entry   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias entry   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias entry   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias entry   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias entry   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias entry   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
Warning: reach to function declaration __kmpc_fork_teams
  base alias entry   %189 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 1
  base alias entry   %190 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 1
Warning: reach to function declaration __kmpc_fork_teams
  alias entry (func arg) %struct.Comm* %1
  alias entry (func arg) double* %2
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 1
Round 1
  base alias entry   %35 = bitcast i8** %34 to double**, !dbg !10317
  base alias entry   %37 = bitcast i8** %36 to double**, !dbg !10317
  base alias entry   %45 = bitcast i8** %44 to %struct.Comm**, !dbg !10317
  base alias entry   %47 = bitcast i8** %46 to %struct.Comm**, !dbg !10317
Warning: reach to function declaration __kmpc_fork_teams
  base alias entry   %29 = alloca i64*, align 8
  base alias entry   %30 = alloca i64*, align 8
  base alias offset entry (1)   %16 = alloca [3 x i8*], align 8
  base alias offset entry (1)   %17 = alloca [3 x i8*], align 8
  base alias offset entry (2)   %16 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %192 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 2
  base alias offset entry (2)   %17 = alloca [3 x i8*], align 8
  base alias offset entry (-1)   %193 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 2
  base alias offset entry (1)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (1)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (2)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-1)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (2)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-1)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (3)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-2)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (-1)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (3)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-2)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (-1)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (-3)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (-2)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (-1)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (-3)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (-2)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (-1)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (-4)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (-3)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (-2)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (-4)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (-3)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (-2)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (6)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-5)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (-4)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (-3)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (6)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-5)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (-4)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (-3)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (7)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-6)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (-5)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (-4)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (-1)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (7)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-6)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (-5)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (-4)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (-1)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (8)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-7)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-6)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-5)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-2)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-1)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (8)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-7)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-6)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-5)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-2)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-1)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-8)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-7)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-6)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-3)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-2)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-1)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-8)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-7)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-6)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-3)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-2)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-1)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (10)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-9)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-8)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-7)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-4)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-3)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-2)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (10)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-9)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-8)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-7)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-4)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-3)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-2)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-10)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-9)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-8)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-5)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-4)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-3)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-1)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-10)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-9)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-8)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-5)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-4)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-3)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-1)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %189, align 8, !dbg !11559
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %190, align 8, !dbg !11559
Warning: reach to function declaration __kmpc_fork_teams
  alias entry   %263 = load i64*, i64** %29, align 8, !dbg !11584, !tbaa !11451
  alias entry   %264 = load i64*, i64** %30, align 8, !dbg !11584, !tbaa !11451
  alias entry   %274 = ptrtoint i64* %263 to i64, !dbg !11584
  alias entry   %275 = ptrtoint i64* %264 to i64, !dbg !11584
  base alias entry   %215 = bitcast i8** %214 to i64*
  base alias entry   %217 = bitcast i8** %216 to i64*
  base alias entry   %220 = bitcast i8** %219 to i64*
  base alias entry   %222 = bitcast i8** %221 to i64*
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 2
Warning: reach to function declaration __kmpc_fork_call
Round 2
  base alias entry   %34 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 2, !dbg !10317
  base alias entry   %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 2, !dbg !10317
  base alias entry   %44 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 4, !dbg !10317
  base alias entry   %46 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 4, !dbg !10317
Warning: reach to function declaration __kmpc_fork_teams
  base alias offset entry (2)   %11 = alloca [5 x i8*], align 8
  base alias offset entry (2)   %12 = alloca [5 x i8*], align 8
  base alias offset entry (-1)   %39 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 3, !dbg !10317
  base alias offset entry (-1)   %41 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 3, !dbg !10317
  base alias offset entry (4)   %11 = alloca [5 x i8*], align 8
  base alias offset entry (-2)   %44 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 4, !dbg !10317
  base alias offset entry (4)   %12 = alloca [5 x i8*], align 8
  base alias offset entry (-2)   %46 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 4, !dbg !10317
Warning: reach to function declaration __kmpc_fork_teams
  base alias entry   %126 = bitcast i64** %29 to i8*, !dbg !11447
  base alias entry   %139 = bitcast i64** %30 to i8*, !dbg !11477
  base alias offset entry (1)   %184 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  base alias offset entry (2)   %184 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  base alias offset entry (1)   %186 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  base alias offset entry (2)   %186 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  base alias offset entry (1)   %189 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 1
  base alias offset entry (1)   %190 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 1
  base alias offset entry (1)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (2)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (3)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (6)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (7)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (8)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (10)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (1)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (2)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (3)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (6)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (7)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (8)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (10)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (1)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (2)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (5)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (6)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (7)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (9)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (1)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (2)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (5)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (6)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (7)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (9)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (1)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (4)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (5)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (6)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (8)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (1)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (4)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (5)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (6)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (8)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (3)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (4)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (5)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (7)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (3)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (4)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (5)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (7)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (2)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (3)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (4)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (6)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias entry   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (2)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (3)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (4)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (6)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias entry   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
  base alias offset entry (1)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (2)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (3)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (5)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias entry   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (1)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (2)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (3)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (5)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias entry   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (1)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (2)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (4)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (1)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (2)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (4)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (1)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (3)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (1)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (3)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (2)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (2)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (1)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (1)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %189, align 8, !dbg !11559
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %190, align 8, !dbg !11559
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 3
Warning: reach to function declaration __kmpc_fork_call
Round 3
  base alias offset entry (4)   %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0, !dbg !10317
  base alias offset entry (2)   %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0, !dbg !10317
  base alias offset entry (4)   %26 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0, !dbg !10317
  base alias offset entry (2)   %26 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0, !dbg !10317
  base alias offset entry (3)   %29 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 1, !dbg !10317
  base alias offset entry (1)   %29 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 1, !dbg !10317
  base alias offset entry (3)   %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 1, !dbg !10317
  base alias offset entry (1)   %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 1, !dbg !10317
  base alias offset entry (2)   %34 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 2, !dbg !10317
  base alias offset entry (2)   %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 2, !dbg !10317
  base alias offset entry (1)   %39 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 3, !dbg !10317
  base alias offset entry (1)   %41 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 3, !dbg !10317
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
  base alias offset entry (4)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (4)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (5)   %31 = alloca [12 x i8*], align 8
  base alias offset entry (-1)   %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 5
  base alias offset entry (5)   %32 = alloca [12 x i8*], align 8
  base alias offset entry (-1)   %221 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 5
  base alias offset entry (-2)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (-1)   %224 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 6
  base alias offset entry (-2)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (-1)   %225 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 6
  base alias offset entry (-3)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (-2)   %227 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 7
  base alias offset entry (-3)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (-2)   %228 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 7
  base alias offset entry (-4)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-3)   %230 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 8
  base alias offset entry (-4)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-3)   %231 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 8
  base alias offset entry (-5)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-4)   %233 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 9
  base alias offset entry (-5)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-4)   %235 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 9
  base alias offset entry (-6)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-5)   %238 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 10
  base alias offset entry (-6)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-5)   %239 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 10
  base alias offset entry (-7)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-6)   %241 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 11
  base alias offset entry (-7)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
  base alias offset entry (-6)   %243 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 11
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %189, align 8, !dbg !11559
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %190, align 8, !dbg !11559
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 4
Warning: reach to function declaration __kmpc_fork_call
Round 4
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
  base alias offset entry (4)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (5)   %200 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 0
  base alias offset entry (4)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (5)   %202 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 0
  base alias offset entry (3)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (4)   %205 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 1
  base alias offset entry (3)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (4)   %206 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 1
  base alias offset entry (2)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (3)   %208 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 2
  base alias offset entry (2)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (3)   %209 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 2
  base alias offset entry (1)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (2)   %211 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 3
  base alias offset entry (1)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (2)   %212 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 3
  base alias offset entry (1)   %214 = getelementptr inbounds [12 x i8*], [12 x i8*]* %31, i64 0, i64 4
  base alias offset entry (1)   %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* %32, i64 0, i64 4
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %189, align 8, !dbg !11559
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %190, align 8, !dbg !11559
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 5
Warning: reach to function declaration __kmpc_fork_call
Round 5
Warning: reach to function declaration __kmpc_fork_teams
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %189, align 8, !dbg !11559
Warning: store a different alias pointer to a base pointer:   store i8* %156, i8** %190, align 8, !dbg !11559
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Warning: reach to function declaration __kmpc_fork_teams
Info: add function _Z21distComputeModularityRK5GraphP4CommPKddi to Round 6
Warning: reach to function declaration __kmpc_fork_call
Round 6
Warning: reach to function declaration __kmpc_fork_teams
Round end
  ---- Access Frequency Analysis ----
  target call (1.625206e+01, 0.000000e+00, 5.076920e+00) using   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  target call (1.625206e+01, 0.000000e+00, 1.015380e+01) using   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
  target call (1.625204e+01, 1.015380e+01, 0.000000e+00) using   %91 = invoke i8* @omp_target_alloc(i64 %90, i32 signext -100)
          to label %92 unwind label %291, !dbg !11387
  target call (1.625204e+01, 5.076920e+00, 0.000000e+00) using   %105 = invoke i8* @omp_target_alloc(i64 %104, i32 signext -100)
          to label %106 unwind label %295, !dbg !11405
  target call (1.625204e+01, 8.757690e+01, 0.000000e+00) using   %119 = invoke i8* @omp_target_alloc(i64 %118, i32 signext -100)
          to label %120 unwind label %299, !dbg !11431
  target call (1.625204e+01, 4.569230e+01, 0.000000e+00) using   %128 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %129 unwind label %303, !dbg !11449
  target call (1.625204e+01, 0.000000e+00, 5.076920e+00) using   %140 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %141 unwind label %311, !dbg !11478
  target call (1.625204e+01, 3.807690e+00, 0.000000e+00) using   %134 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %135 unwind label %307, !dbg !11462
  target call (1.625204e+01, 1.078710e+02, 0.000000e+00) using   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  target call (1.625204e+01, 2.538460e+00, 0.000000e+00) using   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
  target call (1.625204e+01, 2.538460e+00, 2.538460e+00) using   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
  target call (1.625202e+01, 1.015380e+01, 1.015380e+01) using   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  target call (1.625202e+01, 1.015380e+01, 0.000000e+00) using   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
  call (1.625199e+01, 0.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  call (1.625199e+01, 0.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00) using   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
Frequency of   %91 = invoke i8* @omp_target_alloc(i64 %90, i32 signext -100)
          to label %92 unwind label %291, !dbg !11387
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.650200e+02		  store: 0.000000e+00 (target)
Frequency of   %105 = invoke i8* @omp_target_alloc(i64 %104, i32 signext -100)
          to label %106 unwind label %295, !dbg !11405
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 8.251031e+01		  store: 0.000000e+00 (target)
Frequency of   %119 = invoke i8* @omp_target_alloc(i64 %118, i32 signext -100)
          to label %120 unwind label %299, !dbg !11431
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.423303e+03		  store: 0.000000e+00 (target)
Frequency of   %128 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %129 unwind label %303, !dbg !11449
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 7.425931e+02		  store: 0.000000e+00 (target)
Frequency of   %134 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %135 unwind label %307, !dbg !11462
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 6.188273e+01		  store: 0.000000e+00 (target)
Frequency of   %140 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %141 unwind label %311, !dbg !11478
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 8.251031e+01 (target)
Frequency of   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.918144e+03		  store: 2.475302e+02 (target)
Frequency of   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 2.062750e+02		  store: 1.650201e+02 (target)
Frequency of   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 4.125515e+01		  store: 4.125515e+01 (target)
  ---- Optimization Preparation ----
Rank 9 for   %134 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %135 unwind label %307, !dbg !11462
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 6.188273e+01		  store: 0.000000e+00 (target)
Rank 8 for   %105 = invoke i8* @omp_target_alloc(i64 %104, i32 signext -100)
          to label %106 unwind label %295, !dbg !11405
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 8.251031e+01		  store: 0.000000e+00 (target)
Rank 7 for   %140 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %141 unwind label %311, !dbg !11478
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 0.000000e+00		  store: 8.251031e+01 (target)
Rank 6 for   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 4.125515e+01		  store: 4.125515e+01 (target)
Rank 5 for   %91 = invoke i8* @omp_target_alloc(i64 %90, i32 signext -100)
          to label %92 unwind label %291, !dbg !11387
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.650200e+02		  store: 0.000000e+00 (target)
Rank 4 for   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 2.062750e+02		  store: 1.650201e+02 (target)
Rank 3 for   %128 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %129 unwind label %303, !dbg !11449
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 7.425931e+02		  store: 0.000000e+00 (target)
Rank 2 for   %119 = invoke i8* @omp_target_alloc(i64 %118, i32 signext -100)
          to label %120 unwind label %299, !dbg !11431
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.423303e+03		  store: 0.000000e+00 (target)
Rank 1 for   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
  load: 0.000000e+00		  store: 0.000000e+00 (host)
  load: 1.918144e+03		  store: 2.475302e+02 (target)
  ---- Data Mapping Optimization ----
  target call:   %49 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z21distComputeModularityRK5GraphP4CommPKddi_l396.region_id, i32 5, i8** nonnull %24, i8** nonnull %26, i64* nonnull %28, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @.offload_maptypes.0, i64 0, i64 0), i32 0, i32 0), !dbg !10317
@.offload_maptypes.0 = private unnamed_addr constant [5 x i64] [i64 800, i64 547, i64 1100853829665, i64 547, i64 1102195986465]
  arg 2 (0.000000e+00, 0.000000e+00; 4.125515e+01, 4.125515e+01) is   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
    size is   %127 = shl i64 %69, 3, !dbg !11448
    global reuse is 0x06
    local reuse is 1.600380e+02, 1.280304e+03 after adjustment;		    scaled local reuse is 0x500
    reuse distance is 0x01
  arg 4 (0.000000e+00, 0.000000e+00; 1.918144e+03, 2.475302e+02) is   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x01
    local reuse is 1.600380e+02, 2.560608e+03 after adjustment;		    scaled local reuse is 0xa00
    reuse distance is 0x01
  target call:   %24 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z20distUpdateLocalCinfolP4CommPKS__l436.region_id, i32 3, i8** nonnull %9, i8** nonnull %11, i64* nonnull %13, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.15, i64 0, i64 0), i32 0, i32 0), !dbg !10269
@.offload_maptypes.15 = private unnamed_addr constant [3 x i64] [i64 800, i64 35, i64 33]
  target call:   %26 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z16distCleanCWandCUlPdP4Comm_l455.region_id, i32 3, i8** nonnull %11, i8** nonnull %13, i64* nonnull %15, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.20, i64 0, i64 0), i32 0, i32 0), !dbg !10269
@.offload_maptypes.20 = private unnamed_addr constant [3 x i64] [i64 800, i64 34, i64 34]
  target call:   %258 = invoke i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z16distCleanCWandCUlPdP4Comm_l455.region_id, i32 3, i8** nonnull %184, i8** nonnull %186, i64* nonnull %188, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.20.1, i64 0, i64 0), i32 0, i32 0)
          to label %259 unwind label %319, !dbg !11559
@.offload_maptypes.20.1 = private unnamed_addr constant [3 x i64] [i64 800, i64 1099553574946, i64 1099681513506]
  arg 1 (0.000000e+00, 0.000000e+00; 1.918144e+03, 2.475302e+02) is   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x01
    local reuse is 5.076920e+00, 4.061536e+01 after adjustment;		    scaled local reuse is 0x028
    reuse distance is 0x01
  arg 2 (0.000000e+00, 0.000000e+00; 2.062750e+02, 1.650201e+02) is   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x04
    local reuse is 1.015380e+01, 1.624608e+02 after adjustment;		    scaled local reuse is 0x0a2
    reuse distance is 0x01
  target call:   %276 = call i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z17distLouvainMethodiiRK5GraphRmS2_RSt6vectorIlSaIlEES6_S6_S6_ddRi_l1368.region_id, i32 12, i8** nonnull %200, i8** nonnull %202, i64* nonnull %204, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @.offload_maptypes.47.2, i64 0, i64 0), i32 0, i32 0), !dbg !11584
@.offload_maptypes.47.2 = private unnamed_addr constant [12 x i64] [i64 800, i64 9895689605153, i64 9895646625825, i64 9897073713185, i64 9895987392545, i64 9895646621730, i64 9895636144161, i64 1101320425505, i64 1099553587235, i64 800, i64 9895646617635, i64 800]
  arg 1 (0.000000e+00, 0.000000e+00; 1.650200e+02, 0.000000e+00) is   %91 = invoke i8* @omp_target_alloc(i64 %90, i32 signext -100)
          to label %92 unwind label %291, !dbg !11387
    size is   %90 = sub i64 %87, %89, !dbg !11386
    global reuse is 0x05
    local reuse is 1.015380e+01, 8.123040e+01 after adjustment;		    scaled local reuse is 0x051
    reuse distance is 0x09
  arg 2 (0.000000e+00, 0.000000e+00; 8.251031e+01, 0.000000e+00) is   %105 = invoke i8* @omp_target_alloc(i64 %104, i32 signext -100)
          to label %106 unwind label %295, !dbg !11405
    size is   %104 = sub i64 %101, %103, !dbg !11404
    global reuse is 0x08
    local reuse is 5.076920e+00, 4.061536e+01 after adjustment;		    scaled local reuse is 0x028
    reuse distance is 0x09
  arg 3 (0.000000e+00, 0.000000e+00; 1.423303e+03, 0.000000e+00) is   %119 = invoke i8* @omp_target_alloc(i64 %118, i32 signext -100)
          to label %120 unwind label %299, !dbg !11431
    size is   %118 = sub i64 %115, %117, !dbg !11430
    global reuse is 0x02
    local reuse is 8.757690e+01, 1.401230e+03 after adjustment;		    scaled local reuse is 0x579
    reuse distance is 0x09
  arg 4 (0.000000e+00, 0.000000e+00; 7.425931e+02, 0.000000e+00) is   %128 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %129 unwind label %303, !dbg !11449
    size is   %127 = shl i64 %69, 3, !dbg !11448
    global reuse is 0x03
    local reuse is 4.569230e+01, 3.655384e+02 after adjustment;		    scaled local reuse is 0x16d
    reuse distance is 0x09
  arg 5 (0.000000e+00, 0.000000e+00; 0.000000e+00, 8.251031e+01) is   %140 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %141 unwind label %311, !dbg !11478
    size is   %127 = shl i64 %69, 3, !dbg !11448
    global reuse is 0x07
    local reuse is 5.076920e+00, 4.061536e+01 after adjustment;		    scaled local reuse is 0x028
    reuse distance is 0x09
  arg 6 (0.000000e+00, 0.000000e+00; 6.188273e+01, 0.000000e+00) is   %134 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %135 unwind label %307, !dbg !11462
    size is   %127 = shl i64 %69, 3, !dbg !11448
    global reuse is 0x09
    local reuse is 3.807690e+00, 3.046152e+01 after adjustment;		    scaled local reuse is 0x01e
    reuse distance is 0x09
  arg 7 (0.000000e+00, 0.000000e+00; 1.918144e+03, 2.475302e+02) is   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x01
    local reuse is 1.078710e+02, 1.725936e+03 after adjustment;		    scaled local reuse is 0x6bd
    reuse distance is 0x01
  arg 8 (0.000000e+00, 0.000000e+00; 2.062750e+02, 1.650201e+02) is   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x04
    local reuse is 2.538460e+00, 4.061536e+01 after adjustment;		    scaled local reuse is 0x028
    reuse distance is 0x01
  arg 10 (0.000000e+00, 0.000000e+00; 4.125515e+01, 4.125515e+01) is   %156 = invoke i8* @omp_target_alloc(i64 %127, i32 signext -100)
          to label %157 unwind label %317, !dbg !11510
    size is   %127 = shl i64 %69, 3, !dbg !11448
    global reuse is 0x06
    local reuse is 5.076920e+00, 4.061536e+01 after adjustment;		    scaled local reuse is 0x028
    reuse distance is 0x09
  target call:   %325 = invoke i32 @__tgt_target_teams(i64 -1, i8* nonnull @.__omp_offloading_33_128194f__Z20distUpdateLocalCinfolP4CommPKS__l436.region_id, i32 3, i8** nonnull %184, i8** nonnull %186, i64* nonnull %188, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.15.3, i64 0, i64 0), i32 0, i32 0)
          to label %326 unwind label %319, !dbg !11667
@.offload_maptypes.15.3 = private unnamed_addr constant [3 x i64] [i64 800, i64 7696921137187, i64 7696751280161]
  arg 1 (0.000000e+00, 0.000000e+00; 1.918144e+03, 2.475302e+02) is   %145 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %146 unwind label %313, !dbg !11486
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x01
    local reuse is 2.030760e+01, 3.249216e+02 after adjustment;		    scaled local reuse is 0x144
    reuse distance is 0x07
  arg 2 (0.000000e+00, 0.000000e+00; 2.062750e+02, 1.650201e+02) is   %151 = invoke i8* @omp_target_alloc(i64 %144, i32 signext -100)
          to label %152 unwind label %315, !dbg !11502
    size is   %144 = shl i64 %69, 4, !dbg !11485
    global reuse is 0x04
    local reuse is 1.015380e+01, 1.624608e+02 after adjustment;		    scaled local reuse is 0x0a2
    reuse distance is 0x07
